ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	1
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 109 0
  34 0000 8021     		movs	r1, #128
  35 0002 034A     		ldr	r2, .L2
  36 0004 0906     		lsls	r1, r1, #24
  37 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  38              		.loc 1 124 0
  39              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  40              		.loc 1 109 0
  41 0008 0B43     		orrs	r3, r1
  42 000a 1360     		str	r3, [r2]
  43              		.loc 1 124 0
  44 000c 7047     		bx	lr
  45              	.L3:
  46 000e C046     		.align	2
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 4


  47              	.L2:
  48 0010 08010B40 		.word	1074462984
  49              		.cfi_endproc
  50              	.LFE0:
  51              		.size	CySysClkImoStart, .-CySysClkImoStart
  52              		.section	.text.CySysClkImoStop,"ax",%progbits
  53              		.align	1
  54              		.global	CySysClkImoStop
  55              		.code	16
  56              		.thumb_func
  57              		.type	CySysClkImoStop, %function
  58              	CySysClkImoStop:
  59              	.LFB1:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  60              		.loc 1 140 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  65              		.loc 1 149 0
  66 0000 024A     		ldr	r2, .L5
 150:Generated_Source\PSoC4/CyLib.c **** }
  67              		.loc 1 150 0
  68              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 149 0
  70 0002 1368     		ldr	r3, [r2]
  71 0004 5B00     		lsls	r3, r3, #1
  72 0006 5B08     		lsrs	r3, r3, #1
  73 0008 1360     		str	r3, [r2]
  74              		.loc 1 150 0
  75 000a 7047     		bx	lr
  76              	.L6:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 5


  77              		.align	2
  78              	.L5:
  79 000c 08010B40 		.word	1074462984
  80              		.cfi_endproc
  81              	.LFE1:
  82              		.size	CySysClkImoStop, .-CySysClkImoStop
  83              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  84              		.align	1
  85              		.global	CySysClkWriteHfclkDirect
  86              		.code	16
  87              		.thumb_func
  88              		.type	CySysClkWriteHfclkDirect, %function
  89              	CySysClkWriteHfclkDirect:
  90              	.LFB2:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 6


 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 7


 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 8


 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 9


 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 10


 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
  91              		.loc 1 430 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL0:
  96 0000 10B5     		push	{r4, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 4, -8
  99              		.cfi_offset 14, -4
 100              		.loc 1 430 0
 101 0002 0400     		movs	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 102              		.loc 1 434 0
 103 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 104              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 105              		.loc 1 437 0
 106 0008 0723     		movs	r3, #7
 107 000a 0449     		ldr	r1, .L8
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 108              		.loc 1 454 0
 109              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 110              		.loc 1 437 0
 111 000c 0A68     		ldr	r2, [r1]
 112 000e 9A43     		bics	r2, r3
 113              	.LVL2:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 11


 448:Generated_Source\PSoC4/CyLib.c ****     }
 114              		.loc 1 448 0
 115 0010 2340     		ands	r3, r4
 116 0012 1343     		orrs	r3, r2
 117              	.LVL3:
 451:Generated_Source\PSoC4/CyLib.c **** 
 118              		.loc 1 451 0
 119 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 120              		.loc 1 453 0
 121 0016 FFF7FEFF 		bl	CyExitCriticalSection
 122              	.LVL4:
 123              	.LVL5:
 124              		.loc 1 454 0
 125 001a 10BD     		pop	{r4, pc}
 126              	.L9:
 127              		.align	2
 128              	.L8:
 129 001c 00010B40 		.word	1074462976
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 133              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 134              		.align	1
 135              		.global	CySysEnablePumpClock
 136              		.code	16
 137              		.thumb_func
 138              		.type	CySysEnablePumpClock, %function
 139              	CySysEnablePumpClock:
 140              	.LFB3:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 141              		.loc 1 474 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              	.LVL6:
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 12


 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 150 0002 094B     		ldr	r3, .L15
 151 0004 094C     		ldr	r4, .L15+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 152              		.loc 1 476 0
 153 0006 C207     		lsls	r2, r0, #31
 154 0008 04D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 155              		.loc 1 478 0
 156 000a 2268     		ldr	r2, [r4]
 157 000c 1968     		ldr	r1, [r3]
 158 000e 5206     		lsls	r2, r2, #25
 159 0010 0A43     		orrs	r2, r1
 160 0012 06E0     		b	.L13
 161              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 162              		.loc 1 482 0
 163 0014 1A68     		ldr	r2, [r3]
 164 0016 1201     		lsls	r2, r2, #4
 165 0018 520F     		lsrs	r2, r2, #29
 166 001a 2260     		str	r2, [r4]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 167              		.loc 1 484 0
 168 001c 1968     		ldr	r1, [r3]
 169 001e 044A     		ldr	r2, .L15+8
 170 0020 0A40     		ands	r2, r1
 171              	.L13:
 172 0022 1A60     		str	r2, [r3]
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 173              		.loc 1 498 0
 174              		@ sp needed
 175 0024 10BD     		pop	{r4, pc}
 176              	.L16:
 177 0026 C046     		.align	2
 178              	.L15:
 179 0028 08010B40 		.word	1074462984
 180 002c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 13


 181 0030 FFFFFFF1 		.word	-234881025
 182              		.cfi_endproc
 183              	.LFE3:
 184              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 185              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 186              		.align	1
 187              		.global	CySysClkGetSysclkSource
 188              		.code	16
 189              		.thumb_func
 190              		.type	CySysClkGetSysclkSource, %function
 191              	CySysClkGetSysclkSource:
 192              	.LFB4:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 193              		.loc 1 511 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 201              		.loc 1 515 0
 202 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 203              	.LVL7:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 204              		.loc 1 525 0
 205 0006 034B     		ldr	r3, .L18
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 14


 531:Generated_Source\PSoC4/CyLib.c **** }
 206              		.loc 1 531 0
 207              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 208              		.loc 1 525 0
 209 0008 1C68     		ldr	r4, [r3]
 210              	.LVL8:
 528:Generated_Source\PSoC4/CyLib.c **** 
 211              		.loc 1 528 0
 212 000a FFF7FEFF 		bl	CyExitCriticalSection
 213              	.LVL9:
 530:Generated_Source\PSoC4/CyLib.c **** }
 214              		.loc 1 530 0
 215 000e 0720     		movs	r0, #7
 216 0010 2040     		ands	r0, r4
 217              	.LVL10:
 218              		.loc 1 531 0
 219 0012 10BD     		pop	{r4, pc}
 220              	.L19:
 221              		.align	2
 222              	.L18:
 223 0014 00010B40 		.word	1074462976
 224              		.cfi_endproc
 225              	.LFE4:
 226              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 227              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 228              		.align	1
 229              		.global	CySysClkWriteSysclkDiv
 230              		.code	16
 231              		.thumb_func
 232              		.type	CySysClkWriteSysclkDiv, %function
 233              	CySysClkWriteSysclkDiv:
 234              	.LFB5:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 15


 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 235              		.loc 1 566 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL11:
 240 0000 70B5     		push	{r4, r5, r6, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 4, -16
 243              		.cfi_offset 5, -12
 244              		.cfi_offset 6, -8
 245              		.cfi_offset 14, -4
 246              		.loc 1 566 0
 247 0002 0400     		movs	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 248              		.loc 1 569 0
 249 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 250              	.LVL12:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 251              		.loc 1 572 0
 252 0008 E104     		lsls	r1, r4, #19
 253 000a E024     		movs	r4, #224
 254              	.LVL13:
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 255              		.loc 1 573 0
 256 000c 054D     		ldr	r5, .L21
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 257              		.loc 1 572 0
 258 000e A403     		lsls	r4, r4, #14
 259              		.loc 1 573 0
 260 0010 2B68     		ldr	r3, [r5]
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 261              		.loc 1 572 0
 262 0012 054A     		ldr	r2, .L21+4
 263 0014 2140     		ands	r1, r4
 264 0016 1A40     		ands	r2, r3
 265 0018 0B00     		movs	r3, r1
 266 001a 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 267              		.loc 1 571 0
 268 001c 2B60     		str	r3, [r5]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 16


 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 269              		.loc 1 576 0
 270 001e FFF7FEFF 		bl	CyExitCriticalSection
 271              	.LVL14:
 577:Generated_Source\PSoC4/CyLib.c **** }
 272              		.loc 1 577 0
 273              		@ sp needed
 274 0022 70BD     		pop	{r4, r5, r6, pc}
 275              	.L22:
 276              		.align	2
 277              	.L21:
 278 0024 00010B40 		.word	1074462976
 279 0028 FFFFC7FF 		.word	-3670017
 280              		.cfi_endproc
 281              	.LFE5:
 282              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 283              		.section	.text.CySysLvdDisable,"ax",%progbits
 284              		.align	1
 285              		.global	CySysLvdDisable
 286              		.code	16
 287              		.thumb_func
 288              		.type	CySysLvdDisable, %function
 289              	CySysLvdDisable:
 290              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 17


 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 18


 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 19


 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 20


 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 21


 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 22


 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 23


 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 24


1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 25


1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 26


1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 27


1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 28


1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 29


1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 30


1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 31


1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 32


1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 33


1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 34


1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 35


1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 36


1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 37


1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 38


1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 39


1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 40


1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 41


1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 42


2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 43


2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 44


 291              		.loc 1 2149 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 296              		.loc 1 2150 0
 297 0000 0221     		movs	r1, #2
 298 0002 054A     		ldr	r2, .L24
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
 299              		.loc 1 2152 0
 300              		@ sp needed
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 301              		.loc 1 2150 0
 302 0004 1368     		ldr	r3, [r2]
 303 0006 8B43     		bics	r3, r1
 304 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 305              		.loc 1 2151 0
 306 000a 044A     		ldr	r2, .L24+4
 307 000c 0139     		subs	r1, r1, #1
 308 000e 1368     		ldr	r3, [r2]
 309 0010 8B43     		bics	r3, r1
 310 0012 1360     		str	r3, [r2]
 311              		.loc 1 2152 0
 312 0014 7047     		bx	lr
 313              	.L25:
 314 0016 C046     		.align	2
 315              	.L24:
 316 0018 08000B40 		.word	1074462728
 317 001c 18000B40 		.word	1074462744
 318              		.cfi_endproc
 319              	.LFE8:
 320              		.size	CySysLvdDisable, .-CySysLvdDisable
 321              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 322              		.align	1
 323              		.global	CySysLvdGetInterruptSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysLvdGetInterruptSource, %function
 327              	CySysLvdGetInterruptSource:
 328              	.LFB9:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 45


2167:Generated_Source\PSoC4/CyLib.c ****     {
 329              		.loc 1 2167 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 334              		.loc 1 2168 0
 335 0000 024B     		ldr	r3, .L27
2169:Generated_Source\PSoC4/CyLib.c ****     }
 336              		.loc 1 2169 0
 337              		@ sp needed
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 338              		.loc 1 2168 0
 339 0002 1868     		ldr	r0, [r3]
 340 0004 0223     		movs	r3, #2
 341 0006 1840     		ands	r0, r3
 342              		.loc 1 2169 0
 343 0008 7047     		bx	lr
 344              	.L28:
 345 000a C046     		.align	2
 346              	.L27:
 347 000c 04000B40 		.word	1074462724
 348              		.cfi_endproc
 349              	.LFE9:
 350              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 351              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 352              		.align	1
 353              		.global	CySysLvdClearInterrupt
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysLvdClearInterrupt, %function
 357              	CySysLvdClearInterrupt:
 358              	.LFB10:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 359              		.loc 1 2183 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 364              		.loc 1 2184 0
 365 0000 0222     		movs	r2, #2
 366 0002 014B     		ldr	r3, .L30
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 46


2185:Generated_Source\PSoC4/CyLib.c ****     }
 367              		.loc 1 2185 0
 368              		@ sp needed
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 369              		.loc 1 2184 0
 370 0004 1A60     		str	r2, [r3]
 371              		.loc 1 2185 0
 372 0006 7047     		bx	lr
 373              	.L31:
 374              		.align	2
 375              	.L30:
 376 0008 04000B40 		.word	1074462724
 377              		.cfi_endproc
 378              	.LFE10:
 379              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 380              		.section	.text.CySysGetResetReason,"ax",%progbits
 381              		.align	1
 382              		.global	CySysGetResetReason
 383              		.code	16
 384              		.thumb_func
 385              		.type	CySysGetResetReason, %function
 386              	CySysGetResetReason:
 387              	.LFB11:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 388              		.loc 1 2209 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              	.LVL15:
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 394              		.loc 1 2212 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 47


 395 0000 1923     		movs	r3, #25
 396 0002 0200     		movs	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 397              		.loc 1 2213 0
 398 0004 0249     		ldr	r1, .L33
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 399              		.loc 1 2212 0
 400 0006 1A40     		ands	r2, r3
 401              	.LVL16:
 402              		.loc 1 2213 0
 403 0008 0868     		ldr	r0, [r1]
 404              	.LVL17:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 405              		.loc 1 2218 0
 406              		@ sp needed
2217:Generated_Source\PSoC4/CyLib.c **** }
 407              		.loc 1 2217 0
 408 000a 1840     		ands	r0, r3
 409              	.LVL18:
2215:Generated_Source\PSoC4/CyLib.c **** 
 410              		.loc 1 2215 0
 411 000c 0A60     		str	r2, [r1]
 412              		.loc 1 2218 0
 413 000e 7047     		bx	lr
 414              	.L34:
 415              		.align	2
 416              	.L33:
 417 0010 00030B40 		.word	1074463488
 418              		.cfi_endproc
 419              	.LFE11:
 420              		.size	CySysGetResetReason, .-CySysGetResetReason
 421              		.section	.text.CyDisableInts,"ax",%progbits
 422              		.align	1
 423              		.global	CyDisableInts
 424              		.code	16
 425              		.thumb_func
 426              		.type	CyDisableInts, %function
 427              	CyDisableInts:
 428              	.LFB12:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 48


 429              		.loc 1 2232 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 434              		.loc 1 2239 0
 435 0000 0122     		movs	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 436              		.loc 1 2236 0
 437 0002 024B     		ldr	r3, .L36
 438              		.loc 1 2239 0
 439 0004 5242     		rsbs	r2, r2, #0
2236:Generated_Source\PSoC4/CyLib.c **** 
 440              		.loc 1 2236 0
 441 0006 1868     		ldr	r0, [r3]
 442              	.LVL19:
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 443              		.loc 1 2242 0
 444              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 445              		.loc 1 2239 0
 446 0008 1A60     		str	r2, [r3]
 447              		.loc 1 2242 0
 448 000a 7047     		bx	lr
 449              	.L37:
 450              		.align	2
 451              	.L36:
 452 000c 80E100E0 		.word	-536813184
 453              		.cfi_endproc
 454              	.LFE12:
 455              		.size	CyDisableInts, .-CyDisableInts
 456              		.section	.text.CyEnableInts,"ax",%progbits
 457              		.align	1
 458              		.global	CyEnableInts
 459              		.code	16
 460              		.thumb_func
 461              		.type	CyEnableInts, %function
 462              	CyEnableInts:
 463              	.LFB13:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 49


2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 464              		.loc 1 2255 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469              	.LVL20:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 470              		.loc 1 2256 0
 471 0000 014B     		ldr	r3, .L39
2257:Generated_Source\PSoC4/CyLib.c **** }
 472              		.loc 1 2257 0
 473              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 474              		.loc 1 2256 0
 475 0002 1860     		str	r0, [r3]
 476              		.loc 1 2257 0
 477 0004 7047     		bx	lr
 478              	.L40:
 479 0006 C046     		.align	2
 480              	.L39:
 481 0008 00E100E0 		.word	-536813312
 482              		.cfi_endproc
 483              	.LFE13:
 484              		.size	CyEnableInts, .-CyEnableInts
 485              		.section	.text.CyIntSetSysVector,"ax",%progbits
 486              		.align	1
 487              		.global	CyIntSetSysVector
 488              		.code	16
 489              		.thumb_func
 490              		.type	CyIntSetSysVector, %function
 491              	CyIntSetSysVector:
 492              	.LFB14:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 50


2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 493              		.loc 1 2280 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498              	.LVL21:
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 499              		.loc 1 2287 0
 500 0000 8023     		movs	r3, #128
 501 0002 8000     		lsls	r0, r0, #2
 502              	.LVL22:
 503 0004 9B05     		lsls	r3, r3, #22
 504 0006 C318     		adds	r3, r0, r3
 505 0008 1868     		ldr	r0, [r3]
 506              	.LVL23:
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
 507              		.loc 1 2293 0
 508              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 509              		.loc 1 2290 0
 510 000a 1960     		str	r1, [r3]
 511              		.loc 1 2293 0
 512 000c 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE14:
 515              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 516              		.section	.text.CyIntGetSysVector,"ax",%progbits
 517              		.align	1
 518              		.global	CyIntGetSysVector
 519              		.code	16
 520              		.thumb_func
 521              		.type	CyIntGetSysVector, %function
 522              	CyIntGetSysVector:
 523              	.LFB15:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 51


2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 524              		.loc 1 2314 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529              	.LVL24:
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 530              		.loc 1 2319 0
 531 0000 8023     		movs	r3, #128
 532 0002 8000     		lsls	r0, r0, #2
 533              	.LVL25:
 534 0004 9B05     		lsls	r3, r3, #22
 535 0006 C018     		adds	r0, r0, r3
 536 0008 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** }
 537              		.loc 1 2320 0
 538              		@ sp needed
 539 000a 7047     		bx	lr
 540              		.cfi_endproc
 541              	.LFE15:
 542              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 543              		.section	.text.CyIntSetVector,"ax",%progbits
 544              		.align	1
 545              		.global	CyIntSetVector
 546              		.code	16
 547              		.thumb_func
 548              		.type	CyIntSetVector, %function
 549              	CyIntSetVector:
 550              	.LFB16:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 52


2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 551              		.loc 1 2336 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL26:
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 557              		.loc 1 2343 0
 558 0000 024B     		ldr	r3, .L44
 559 0002 8000     		lsls	r0, r0, #2
 560              	.LVL27:
 561 0004 C318     		adds	r3, r0, r3
 562 0006 1868     		ldr	r0, [r3]
 563              	.LVL28:
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
 564              		.loc 1 2349 0
 565              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 566              		.loc 1 2346 0
 567 0008 1960     		str	r1, [r3]
 568              		.loc 1 2349 0
 569 000a 7047     		bx	lr
 570              	.L45:
 571              		.align	2
 572              	.L44:
 573 000c 40000020 		.word	536870976
 574              		.cfi_endproc
 575              	.LFE16:
 576              		.size	CyIntSetVector, .-CyIntSetVector
 577              		.section	.text.CyIntGetVector,"ax",%progbits
 578              		.align	1
 579              		.global	CyIntGetVector
 580              		.code	16
 581              		.thumb_func
 582              		.type	CyIntGetVector, %function
 583              	CyIntGetVector:
 584              	.LFB17:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 53


2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 585              		.loc 1 2364 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 590              	.LVL29:
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 591              		.loc 1 2369 0
 592 0000 024B     		ldr	r3, .L47
 593 0002 8000     		lsls	r0, r0, #2
 594              	.LVL30:
 595 0004 C018     		adds	r0, r0, r3
 596 0006 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** }
 597              		.loc 1 2370 0
 598              		@ sp needed
 599 0008 7047     		bx	lr
 600              	.L48:
 601 000a C046     		.align	2
 602              	.L47:
 603 000c 40000020 		.word	536870976
 604              		.cfi_endproc
 605              	.LFE17:
 606              		.size	CyIntGetVector, .-CyIntGetVector
 607              		.section	.text.CyIntSetPriority,"ax",%progbits
 608              		.align	1
 609              		.global	CyIntSetPriority
 610              		.code	16
 611              		.thumb_func
 612              		.type	CyIntSetPriority, %function
 613              	CyIntSetPriority:
 614              	.LFB18:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 54


2383:Generated_Source\PSoC4/CyLib.c **** {
 615              		.loc 1 2383 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL31:
 620 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 621              		.cfi_def_cfa_offset 24
 622              		.cfi_offset 3, -24
 623              		.cfi_offset 4, -20
 624              		.cfi_offset 5, -16
 625              		.cfi_offset 6, -12
 626              		.cfi_offset 7, -8
 627              		.cfi_offset 14, -4
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 628              		.loc 1 2391 0
 629 0002 0326     		movs	r6, #3
 630 0004 0500     		movs	r5, r0
 631 0006 3540     		ands	r5, r6
 632 0008 B540     		lsls	r5, r5, r6
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 633              		.loc 1 2383 0
 634 000a 0F00     		movs	r7, r1
 635 000c 0400     		movs	r4, r0
 636              		.loc 1 2391 0
 637 000e 0635     		adds	r5, r5, #6
 638              	.LVL32:
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 639              		.loc 1 2396 0
 640 0010 AE40     		lsls	r6, r6, r5
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 641              		.loc 1 2397 0
 642 0012 AF40     		lsls	r7, r7, r5
2393:Generated_Source\PSoC4/CyLib.c **** 
 643              		.loc 1 2393 0
 644 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 645              	.LVL33:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 646              		.loc 1 2395 0
 647 0018 A408     		lsrs	r4, r4, #2
 648 001a 054B     		ldr	r3, .L50
 649 001c A400     		lsls	r4, r4, #2
 650 001e E418     		adds	r4, r4, r3
 651 0020 2368     		ldr	r3, [r4]
 652              	.LVL34:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 55


2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
 653              		.loc 1 2401 0
 654              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 655              		.loc 1 2396 0
 656 0022 B343     		bics	r3, r6
 657              	.LVL35:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 658              		.loc 1 2397 0
 659 0024 1F43     		orrs	r7, r3
 660              	.LVL36:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 661              		.loc 1 2398 0
 662 0026 2760     		str	r7, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 663              		.loc 1 2400 0
 664 0028 FFF7FEFF 		bl	CyExitCriticalSection
 665              	.LVL37:
 666              	.LVL38:
 667              	.LVL39:
 668              		.loc 1 2401 0
 669 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 670              	.L51:
 671 002e C046     		.align	2
 672              	.L50:
 673 0030 00E400E0 		.word	-536812544
 674              		.cfi_endproc
 675              	.LFE18:
 676              		.size	CyIntSetPriority, .-CyIntSetPriority
 677              		.section	.text.CyIntGetPriority,"ax",%progbits
 678              		.align	1
 679              		.global	CyIntGetPriority
 680              		.code	16
 681              		.thumb_func
 682              		.type	CyIntGetPriority, %function
 683              	CyIntGetPriority:
 684              	.LFB19:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 685              		.loc 1 2417 0
 686              		.cfi_startproc
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 56


 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690              	.LVL40:
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 691              		.loc 1 2422 0
 692 0000 8308     		lsrs	r3, r0, #2
 693 0002 064A     		ldr	r2, .L53
 694 0004 9B00     		lsls	r3, r3, #2
 695 0006 9B18     		adds	r3, r3, r2
 696 0008 1968     		ldr	r1, [r3]
 697              	.LVL41:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 698              		.loc 1 2424 0
 699 000a 0322     		movs	r2, #3
 700 000c 0300     		movs	r3, r0
 701 000e 1340     		ands	r3, r2
 702 0010 9340     		lsls	r3, r3, r2
 703 0012 0633     		adds	r3, r3, #6
 704 0014 D940     		lsrs	r1, r1, r3
 705              	.LVL42:
 706 0016 0800     		movs	r0, r1
 707              	.LVL43:
2425:Generated_Source\PSoC4/CyLib.c **** }
 708              		.loc 1 2425 0
 709              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 710              		.loc 1 2424 0
 711 0018 1040     		ands	r0, r2
 712              		.loc 1 2425 0
 713 001a 7047     		bx	lr
 714              	.L54:
 715              		.align	2
 716              	.L53:
 717 001c 00E400E0 		.word	-536812544
 718              		.cfi_endproc
 719              	.LFE19:
 720              		.size	CyIntGetPriority, .-CyIntGetPriority
 721              		.section	.text.CyIntEnable,"ax",%progbits
 722              		.align	1
 723              		.global	CyIntEnable
 724              		.code	16
 725              		.thumb_func
 726              		.type	CyIntEnable, %function
 727              	CyIntEnable:
 728              	.LFB20:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 57


2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 729              		.loc 1 2438 0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 734              	.LVL44:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 735              		.loc 1 2439 0
 736 0000 1F23     		movs	r3, #31
 737 0002 1840     		ands	r0, r3
 738              	.LVL45:
 739 0004 1E3B     		subs	r3, r3, #30
 740 0006 8340     		lsls	r3, r3, r0
 741 0008 014A     		ldr	r2, .L56
2440:Generated_Source\PSoC4/CyLib.c **** }
 742              		.loc 1 2440 0
 743              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 744              		.loc 1 2439 0
 745 000a 1360     		str	r3, [r2]
 746              		.loc 1 2440 0
 747 000c 7047     		bx	lr
 748              	.L57:
 749 000e C046     		.align	2
 750              	.L56:
 751 0010 00E100E0 		.word	-536813312
 752              		.cfi_endproc
 753              	.LFE20:
 754              		.size	CyIntEnable, .-CyIntEnable
 755              		.section	.text.CyIntGetState,"ax",%progbits
 756              		.align	1
 757              		.global	CyIntGetState
 758              		.code	16
 759              		.thumb_func
 760              		.type	CyIntGetState, %function
 761              	CyIntGetState:
 762              	.LFB21:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 58


2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 763              		.loc 1 2456 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768              	.LVL46:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 769              		.loc 1 2458 0
 770 0000 1F22     		movs	r2, #31
 771 0002 044B     		ldr	r3, .L59
 772 0004 1040     		ands	r0, r2
 773              	.LVL47:
 774 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** }
 775              		.loc 1 2459 0
 776              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 777              		.loc 1 2458 0
 778 0008 C340     		lsrs	r3, r3, r0
 779 000a 1800     		movs	r0, r3
 780 000c 0123     		movs	r3, #1
 781 000e 1840     		ands	r0, r3
 782              		.loc 1 2459 0
 783 0010 7047     		bx	lr
 784              	.L60:
 785 0012 C046     		.align	2
 786              	.L59:
 787 0014 00E100E0 		.word	-536813312
 788              		.cfi_endproc
 789              	.LFE21:
 790              		.size	CyIntGetState, .-CyIntGetState
 791              		.section	.text.CyIntDisable,"ax",%progbits
 792              		.align	1
 793              		.global	CyIntDisable
 794              		.code	16
 795              		.thumb_func
 796              		.type	CyIntDisable, %function
 797              	CyIntDisable:
 798              	.LFB22:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 799              		.loc 1 2472 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 59


 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL48:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 805              		.loc 1 2473 0
 806 0000 1F23     		movs	r3, #31
 807 0002 1840     		ands	r0, r3
 808              	.LVL49:
 809 0004 1E3B     		subs	r3, r3, #30
 810 0006 8340     		lsls	r3, r3, r0
 811 0008 014A     		ldr	r2, .L62
2474:Generated_Source\PSoC4/CyLib.c **** }
 812              		.loc 1 2474 0
 813              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 814              		.loc 1 2473 0
 815 000a 1360     		str	r3, [r2]
 816              		.loc 1 2474 0
 817 000c 7047     		bx	lr
 818              	.L63:
 819 000e C046     		.align	2
 820              	.L62:
 821 0010 80E100E0 		.word	-536813184
 822              		.cfi_endproc
 823              	.LFE22:
 824              		.size	CyIntDisable, .-CyIntDisable
 825              		.section	.text.CyIntSetPending,"ax",%progbits
 826              		.align	1
 827              		.global	CyIntSetPending
 828              		.code	16
 829              		.thumb_func
 830              		.type	CyIntSetPending, %function
 831              	CyIntSetPending:
 832              	.LFB23:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 833              		.loc 1 2486 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 838              	.LVL50:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 839              		.loc 1 2487 0
 840 0000 1F23     		movs	r3, #31
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 60


 841 0002 1840     		ands	r0, r3
 842              	.LVL51:
 843 0004 1E3B     		subs	r3, r3, #30
 844 0006 8340     		lsls	r3, r3, r0
 845 0008 014A     		ldr	r2, .L65
2488:Generated_Source\PSoC4/CyLib.c **** }
 846              		.loc 1 2488 0
 847              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 848              		.loc 1 2487 0
 849 000a 1360     		str	r3, [r2]
 850              		.loc 1 2488 0
 851 000c 7047     		bx	lr
 852              	.L66:
 853 000e C046     		.align	2
 854              	.L65:
 855 0010 00E200E0 		.word	-536813056
 856              		.cfi_endproc
 857              	.LFE23:
 858              		.size	CyIntSetPending, .-CyIntSetPending
 859              		.section	.text.CyIntClearPending,"ax",%progbits
 860              		.align	1
 861              		.global	CyIntClearPending
 862              		.code	16
 863              		.thumb_func
 864              		.type	CyIntClearPending, %function
 865              	CyIntClearPending:
 866              	.LFB24:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 867              		.loc 1 2501 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872              	.LVL52:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 873              		.loc 1 2502 0
 874 0000 1F23     		movs	r3, #31
 875 0002 1840     		ands	r0, r3
 876              	.LVL53:
 877 0004 1E3B     		subs	r3, r3, #30
 878 0006 8340     		lsls	r3, r3, r0
 879 0008 014A     		ldr	r2, .L68
2503:Generated_Source\PSoC4/CyLib.c **** }
 880              		.loc 1 2503 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 61


 881              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 882              		.loc 1 2502 0
 883 000a 1360     		str	r3, [r2]
 884              		.loc 1 2503 0
 885 000c 7047     		bx	lr
 886              	.L69:
 887 000e C046     		.align	2
 888              	.L68:
 889 0010 80E200E0 		.word	-536812928
 890              		.cfi_endproc
 891              	.LFE24:
 892              		.size	CyIntClearPending, .-CyIntClearPending
 893              		.section	.text.CyHalt,"ax",%progbits
 894              		.align	1
 895              		.global	CyHalt
 896              		.code	16
 897              		.thumb_func
 898              		.type	CyHalt, %function
 899              	CyHalt:
 900              	.LFB25:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 901              		.loc 1 2516 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL54:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 907              		.loc 1 2525 0
 908              		.syntax divided
 909              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 910 0000 01BE     		    bkpt    1
 911              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 62


2529:Generated_Source\PSoC4/CyLib.c **** }
 912              		.loc 1 2529 0
 913              		.thumb
 914              		.syntax unified
 915              		@ sp needed
 916 0002 7047     		bx	lr
 917              		.cfi_endproc
 918              	.LFE25:
 919              		.size	CyHalt, .-CyHalt
 920              		.section	.text.CySoftwareReset,"ax",%progbits
 921              		.align	1
 922              		.global	CySoftwareReset
 923              		.code	16
 924              		.thumb_func
 925              		.type	CySoftwareReset, %function
 926              	CySoftwareReset:
 927              	.LFB26:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 928              		.loc 1 2540 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              		@ link register save eliminated.
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 933              		.loc 1 2545 0
 934 0000 034A     		ldr	r2, .L72
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 935              		.loc 1 2546 0
 936 0002 0449     		ldr	r1, .L72+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 937              		.loc 1 2545 0
 938 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 939              		.loc 1 2547 0
 940              		@ sp needed
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 941              		.loc 1 2546 0
 942 0006 9BB2     		uxth	r3, r3
 943 0008 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 944              		.loc 1 2545 0
 945 000a 1360     		str	r3, [r2]
 946              		.loc 1 2547 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 63


 947 000c 7047     		bx	lr
 948              	.L73:
 949 000e C046     		.align	2
 950              	.L72:
 951 0010 0CED00E0 		.word	-536810228
 952 0014 0400FA05 		.word	100270084
 953              		.cfi_endproc
 954              	.LFE26:
 955              		.size	CySoftwareReset, .-CySoftwareReset
 956              		.section	.text.CyDelay,"ax",%progbits
 957              		.align	1
 958              		.global	CyDelay
 959              		.code	16
 960              		.thumb_func
 961              		.type	CyDelay, %function
 962              	CyDelay:
 963              	.LFB27:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 964              		.loc 1 2560 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              	.LVL55:
 969 0000 70B5     		push	{r4, r5, r6, lr}
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 4, -16
 972              		.cfi_offset 5, -12
 973              		.cfi_offset 6, -8
 974              		.cfi_offset 14, -4
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 975              		.loc 1 2561 0
 976 0002 8025     		movs	r5, #128
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 977              		.loc 1 2560 0
 978 0004 0400     		movs	r4, r0
 979              		.loc 1 2561 0
 980 0006 2D02     		lsls	r5, r5, #8
 981              	.LVL56:
 982              	.L75:
 983 0008 064B     		ldr	r3, .L78
 984 000a AC42     		cmp	r4, r5
 985 000c 05D9     		bls	.L77
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 64


2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 986              		.loc 1 2566 0
 987 000e 5868     		ldr	r0, [r3, #4]
 988 0010 FFF7FEFF 		bl	CyDelayCycles
 989              	.LVL57:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 990              		.loc 1 2567 0
 991 0014 044B     		ldr	r3, .L78+4
 992 0016 E418     		adds	r4, r4, r3
 993              	.LVL58:
 994 0018 F6E7     		b	.L75
 995              	.L77:
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 996              		.loc 1 2570 0
 997 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 998              		.loc 1 2571 0
 999              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1000              		.loc 1 2570 0
 1001 001c 6043     		muls	r0, r4
 1002 001e FFF7FEFF 		bl	CyDelayCycles
 1003              	.LVL59:
 1004              	.LVL60:
 1005              		.loc 1 2571 0
 1006 0022 70BD     		pop	{r4, r5, r6, pc}
 1007              	.L79:
 1008              		.align	2
 1009              	.L78:
 1010 0024 00000000 		.word	.LANCHOR0
 1011 0028 0080FFFF 		.word	-32768
 1012              		.cfi_endproc
 1013              	.LFE27:
 1014              		.size	CyDelay, .-CyDelay
 1015              		.section	.text.CyDelayUs,"ax",%progbits
 1016              		.align	1
 1017              		.global	CyDelayUs
 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	CyDelayUs, %function
 1021              	CyDelayUs:
 1022              	.LFB28:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 65


 1023              		.loc 1 2583 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 0
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
 1027              	.LVL61:
 1028 0000 10B5     		push	{r4, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 4, -8
 1031              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1032              		.loc 1 2584 0
 1033 0002 034B     		ldr	r3, .L81
2585:Generated_Source\PSoC4/CyLib.c **** }
 1034              		.loc 1 2585 0
 1035              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1036              		.loc 1 2584 0
 1037 0004 1B7B     		ldrb	r3, [r3, #12]
 1038 0006 5843     		muls	r0, r3
 1039              	.LVL62:
 1040 0008 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL63:
 1042              		.loc 1 2585 0
 1043 000c 10BD     		pop	{r4, pc}
 1044              	.L82:
 1045 000e C046     		.align	2
 1046              	.L81:
 1047 0010 00000000 		.word	.LANCHOR0
 1048              		.cfi_endproc
 1049              	.LFE28:
 1050              		.size	CyDelayUs, .-CyDelayUs
 1051              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1052              		.align	1
 1053              		.global	CySysClkWriteImoFreq
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	CySysClkWriteImoFreq, %function
 1057              	CySysClkWriteImoFreq:
 1058              	.LFB6:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1059              		.loc 1 624 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 24
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
 1063              	.LVL64:
 1064 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1065              		.cfi_def_cfa_offset 20
 1066              		.cfi_offset 4, -20
 1067              		.cfi_offset 5, -16
 1068              		.cfi_offset 6, -12
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 0500     		movs	r5, r0
 1072 0004 87B0     		sub	sp, sp, #28
 1073              		.cfi_def_cfa_offset 48
 647:Generated_Source\PSoC4/CyLib.c **** 
 1074              		.loc 1 647 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 66


 1075 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1076              	.LVL65:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1077              		.loc 1 697 0
 1078 000a EB1E     		subs	r3, r5, #3
 647:Generated_Source\PSoC4/CyLib.c **** 
 1079              		.loc 1 647 0
 1080 000c 0490     		str	r0, [sp, #16]
 1081              	.LVL66:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1082              		.loc 1 697 0
 1083 000e 0393     		str	r3, [sp, #12]
 1084 0010 2D2B     		cmp	r3, #45
 1085 0012 5BD8     		bhi	.L85
 699:Generated_Source\PSoC4/CyLib.c ****             {
 1086              		.loc 1 699 0
 1087 0014 304B     		ldr	r3, .L96
 1088 0016 1B78     		ldrb	r3, [r3]
 1089 0018 9D42     		cmp	r5, r3
 1090 001a 04D8     		bhi	.L86
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1091              		.loc 1 701 0
 1092 001c 2F4B     		ldr	r3, .L96+4
 1093 001e 1C78     		ldrb	r4, [r3]
 702:Generated_Source\PSoC4/CyLib.c ****             }
 1094              		.loc 1 702 0
 1095 0020 2F4B     		ldr	r3, .L96+8
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1096              		.loc 1 701 0
 1097 0022 E4B2     		uxtb	r4, r4
 1098              	.LVL67:
 1099 0024 1EE0     		b	.L94
 1100              	.LVL68:
 1101              	.L86:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 1102              		.loc 1 704 0
 1103 0026 2F4B     		ldr	r3, .L96+12
 1104 0028 1B78     		ldrb	r3, [r3]
 1105 002a 9D42     		cmp	r5, r3
 1106 002c 04D8     		bhi	.L88
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1107              		.loc 1 706 0
 1108 002e 2E4B     		ldr	r3, .L96+16
 1109 0030 1C78     		ldrb	r4, [r3]
 707:Generated_Source\PSoC4/CyLib.c ****             }
 1110              		.loc 1 707 0
 1111 0032 2E4B     		ldr	r3, .L96+20
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1112              		.loc 1 706 0
 1113 0034 E4B2     		uxtb	r4, r4
 1114              	.LVL69:
 1115 0036 15E0     		b	.L94
 1116              	.LVL70:
 1117              	.L88:
 709:Generated_Source\PSoC4/CyLib.c ****             {
 1118              		.loc 1 709 0
 1119 0038 2D4B     		ldr	r3, .L96+24
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 67


 1120 003a 1B78     		ldrb	r3, [r3]
 1121 003c 9D42     		cmp	r5, r3
 1122 003e 04D8     		bhi	.L89
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1123              		.loc 1 711 0
 1124 0040 2C4B     		ldr	r3, .L96+28
 1125 0042 1C78     		ldrb	r4, [r3]
 712:Generated_Source\PSoC4/CyLib.c ****             }
 1126              		.loc 1 712 0
 1127 0044 2C4B     		ldr	r3, .L96+32
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1128              		.loc 1 711 0
 1129 0046 E4B2     		uxtb	r4, r4
 1130              	.LVL71:
 1131 0048 0CE0     		b	.L94
 1132              	.LVL72:
 1133              	.L89:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 1134              		.loc 1 714 0
 1135 004a 2C4B     		ldr	r3, .L96+36
 1136 004c 1B78     		ldrb	r3, [r3]
 1137 004e 9D42     		cmp	r5, r3
 1138 0050 04D8     		bhi	.L90
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1139              		.loc 1 716 0
 1140 0052 2B4B     		ldr	r3, .L96+40
 1141 0054 1C78     		ldrb	r4, [r3]
 717:Generated_Source\PSoC4/CyLib.c ****             }
 1142              		.loc 1 717 0
 1143 0056 2B4B     		ldr	r3, .L96+44
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1144              		.loc 1 716 0
 1145 0058 E4B2     		uxtb	r4, r4
 1146              	.LVL73:
 1147 005a 03E0     		b	.L94
 1148              	.LVL74:
 1149              	.L90:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1150              		.loc 1 721 0
 1151 005c 2A4B     		ldr	r3, .L96+48
 1152 005e 1C78     		ldrb	r4, [r3]
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1153              		.loc 1 722 0
 1154 0060 2A4B     		ldr	r3, .L96+52
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1155              		.loc 1 721 0
 1156 0062 E4B2     		uxtb	r4, r4
 1157              	.LVL75:
 1158              	.L94:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1159              		.loc 1 722 0
 1160 0064 1B78     		ldrb	r3, [r3]
 726:Generated_Source\PSoC4/CyLib.c **** 
 1161              		.loc 1 726 0
 1162 0066 EA1E     		subs	r2, r5, #3
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1163              		.loc 1 722 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 68


 1164 0068 DBB2     		uxtb	r3, r3
 1165 006a 0193     		str	r3, [sp, #4]
 1166              	.LVL76:
 726:Generated_Source\PSoC4/CyLib.c **** 
 1167              		.loc 1 726 0
 1168 006c 284B     		ldr	r3, .L96+56
 1169 006e 294F     		ldr	r7, .L96+60
 1170 0070 9A5C     		ldrb	r2, [r3, r2]
 1171 0072 0593     		str	r3, [sp, #20]
 1172 0074 0292     		str	r2, [sp, #8]
 1173              	.LVL77:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1174              		.loc 1 738 0
 1175 0076 2F2A     		cmp	r2, #47
 1176 0078 04D9     		bls	.L91
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1177              		.loc 1 738 0 is_stmt 0 discriminator 1
 1178 007a 2A2D     		cmp	r5, #42
 1179 007c 02D9     		bls	.L91
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1180              		.loc 1 741 0 is_stmt 1
 1181 007e 1926     		movs	r6, #25
 1182 0080 3E60     		str	r6, [r7]
 1183 0082 08E0     		b	.L95
 1184              	.L91:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 1185              		.loc 1 750 0
 1186 0084 3F23     		movs	r3, #63
 1187 0086 3E68     		ldr	r6, [r7]
 1188 0088 1E40     		ands	r6, r3
 1189              	.LVL78:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 1190              		.loc 1 762 0
 1191 008a 029B     		ldr	r3, [sp, #8]
 1192 008c B342     		cmp	r3, r6
 1193 008e 05D2     		bcs	.L92
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1194              		.loc 1 765 0
 1195 0090 204B     		ldr	r3, .L96+60
 1196 0092 029A     		ldr	r2, [sp, #8]
 1197 0094 1A60     		str	r2, [r3]
 1198              	.LVL79:
 1199              	.L95:
 766:Generated_Source\PSoC4/CyLib.c ****             }
 1200              		.loc 1 766 0
 1201 0096 0520     		movs	r0, #5
 1202 0098 FFF7FEFF 		bl	CyDelayCycles
 1203              	.LVL80:
 1204              	.L92:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1205              		.loc 1 785 0
 1206 009c 1B4B     		ldr	r3, .L96+52
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1207              		.loc 1 789 0
 1208 009e 1E4A     		ldr	r2, .L96+64
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1209              		.loc 1 785 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 69


 1210 00a0 ED18     		adds	r5, r5, r3
 1211              	.LVL81:
 1212 00a2 2B78     		ldrb	r3, [r5]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1213              		.loc 1 792 0
 1214 00a4 0520     		movs	r0, #5
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1215              		.loc 1 785 0
 1216 00a6 DBB2     		uxtb	r3, r3
 1217              	.LVL82:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1218              		.loc 1 789 0
 1219 00a8 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1220              		.loc 1 790 0
 1221 00aa 1C4B     		ldr	r3, .L96+68
 1222              	.LVL83:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1223              		.loc 1 791 0
 1224 00ac 019A     		ldr	r2, [sp, #4]
 1225              	.LVL84:
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1226              		.loc 1 790 0
 1227 00ae 1C60     		str	r4, [r3]
 1228              	.LVL85:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1229              		.loc 1 791 0
 1230 00b0 1B4B     		ldr	r3, .L96+72
 1231 00b2 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1232              		.loc 1 792 0
 1233 00b4 FFF7FEFF 		bl	CyDelayUs
 1234              	.LVL86:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1235              		.loc 1 794 0
 1236 00b8 029B     		ldr	r3, [sp, #8]
 1237 00ba B342     		cmp	r3, r6
 1238 00bc 06D9     		bls	.L85
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1239              		.loc 1 797 0
 1240 00be 059B     		ldr	r3, [sp, #20]
 1241 00c0 039A     		ldr	r2, [sp, #12]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1242              		.loc 1 798 0
 1243 00c2 0520     		movs	r0, #5
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1244              		.loc 1 797 0
 1245 00c4 9B5C     		ldrb	r3, [r3, r2]
 1246 00c6 3B60     		str	r3, [r7]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1247              		.loc 1 798 0
 1248 00c8 FFF7FEFF 		bl	CyDelayCycles
 1249              	.LVL87:
 1250              	.L85:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1251              		.loc 1 823 0
 1252 00cc 0498     		ldr	r0, [sp, #16]
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 70


 1253 00ce FFF7FEFF 		bl	CyExitCriticalSection
 1254              	.LVL88:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1255              		.loc 1 824 0
 1256 00d2 07B0     		add	sp, sp, #28
 1257              		@ sp needed
 1258 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1259              	.L97:
 1260 00d6 C046     		.align	2
 1261              	.L96:
 1262 00d8 C0F1FF0F 		.word	268431808
 1263 00dc C1F1FF0F 		.word	268431809
 1264 00e0 C2F1FF0F 		.word	268431810
 1265 00e4 C3F1FF0F 		.word	268431811
 1266 00e8 C4F1FF0F 		.word	268431812
 1267 00ec C5F1FF0F 		.word	268431813
 1268 00f0 C6F1FF0F 		.word	268431814
 1269 00f4 C7F1FF0F 		.word	268431815
 1270 00f8 C8F1FF0F 		.word	268431816
 1271 00fc C9F1FF0F 		.word	268431817
 1272 0100 CAF1FF0F 		.word	268431818
 1273 0104 CBF1FF0F 		.word	268431819
 1274 0108 CCF1FF0F 		.word	268431820
 1275 010c CDF1FF0F 		.word	268431821
 1276 0110 00000000 		.word	.LANCHOR1
 1277 0114 2CFF0B40 		.word	1074528044
 1278 0118 28FF0B40 		.word	1074528040
 1279 011c 1CFF0B40 		.word	1074528028
 1280 0120 20FF0B40 		.word	1074528032
 1281              		.cfi_endproc
 1282              	.LFE6:
 1283              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1284              		.section	.text.CySysLvdEnable,"ax",%progbits
 1285              		.align	1
 1286              		.global	CySysLvdEnable
 1287              		.code	16
 1288              		.thumb_func
 1289              		.type	CySysLvdEnable, %function
 1290              	CySysLvdEnable:
 1291              	.LFB7:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1292              		.loc 1 2119 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              	.LVL89:
 1297 0000 70B5     		push	{r4, r5, r6, lr}
 1298              		.cfi_def_cfa_offset 16
 1299              		.cfi_offset 4, -16
 1300              		.cfi_offset 5, -12
 1301              		.cfi_offset 6, -8
 1302              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1303              		.loc 1 2121 0
 1304 0002 0225     		movs	r5, #2
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1305              		.loc 1 2124 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 71


 1306 0004 1E21     		movs	r1, #30
2121:Generated_Source\PSoC4/CyLib.c **** 
 1307              		.loc 1 2121 0
 1308 0006 0C4C     		ldr	r4, .L99
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1309              		.loc 1 2124 0
 1310 0008 0C4A     		ldr	r2, .L99+4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1311              		.loc 1 2121 0
 1312 000a 2368     		ldr	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1313              		.loc 1 2124 0
 1314 000c 4000     		lsls	r0, r0, #1
 1315              	.LVL90:
2121:Generated_Source\PSoC4/CyLib.c **** 
 1316              		.loc 1 2121 0
 1317 000e AB43     		bics	r3, r5
 1318 0010 2360     		str	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1319              		.loc 1 2124 0
 1320 0012 1368     		ldr	r3, [r2]
 1321 0014 0840     		ands	r0, r1
 1322 0016 8B43     		bics	r3, r1
 1323 0018 1843     		orrs	r0, r3
 1324 001a 1060     		str	r0, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1325              		.loc 1 2131 0
 1326 001c FA20     		movs	r0, #250
2128:Generated_Source\PSoC4/CyLib.c **** 
 1327              		.loc 1 2128 0
 1328 001e 1368     		ldr	r3, [r2]
 1329 0020 1D39     		subs	r1, r1, #29
 1330 0022 0B43     		orrs	r3, r1
 1331 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1332              		.loc 1 2131 0
 1333 0026 8000     		lsls	r0, r0, #2
 1334 0028 FFF7FEFF 		bl	CyDelayUs
 1335              	.LVL91:
 1336              	.LBB10:
 1337              	.LBB11:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1338              		.loc 1 2184 0
 1339 002c 044B     		ldr	r3, .L99+8
 1340              	.LBE11:
 1341              	.LBE10:
2138:Generated_Source\PSoC4/CyLib.c **** 
 1342              		.loc 1 2138 0
 1343              		@ sp needed
 1344              	.LBB13:
 1345              	.LBB12:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1346              		.loc 1 2184 0
 1347 002e 1D60     		str	r5, [r3]
 1348              	.LBE12:
 1349              	.LBE13:
2137:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 72


 1350              		.loc 1 2137 0
 1351 0030 2368     		ldr	r3, [r4]
 1352 0032 1D43     		orrs	r5, r3
 1353 0034 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1354              		.loc 1 2138 0
 1355 0036 70BD     		pop	{r4, r5, r6, pc}
 1356              	.L100:
 1357              		.align	2
 1358              	.L99:
 1359 0038 08000B40 		.word	1074462728
 1360 003c 18000B40 		.word	1074462744
 1361 0040 04000B40 		.word	1074462724
 1362              		.cfi_endproc
 1363              	.LFE7:
 1364              		.size	CySysLvdEnable, .-CySysLvdEnable
 1365              		.global	__aeabi_uidiv
 1366              		.section	.text.CyDelayFreq,"ax",%progbits
 1367              		.align	1
 1368              		.global	CyDelayFreq
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	CyDelayFreq, %function
 1372              	CyDelayFreq:
 1373              	.LFB29:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1374              		.loc 1 2597 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378              	.LVL92:
 1379 0000 70B5     		push	{r4, r5, r6, lr}
 1380              		.cfi_def_cfa_offset 16
 1381              		.cfi_offset 4, -16
 1382              		.cfi_offset 5, -12
 1383              		.cfi_offset 6, -8
 1384              		.cfi_offset 14, -4
 1385 0002 0C4C     		ldr	r4, .L104
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1386              		.loc 1 2598 0
 1387 0004 0028     		cmp	r0, #0
 1388 0006 01D0     		beq	.L102
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1389              		.loc 1 2600 0
 1390 0008 2061     		str	r0, [r4, #16]
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 73


 1391 000a 01E0     		b	.L103
 1392              	.L102:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1393              		.loc 1 2604 0
 1394 000c 0A4B     		ldr	r3, .L104+4
 1395 000e 2361     		str	r3, [r4, #16]
 1396              	.L103:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1397              		.loc 1 2607 0
 1398 0010 2569     		ldr	r5, [r4, #16]
 1399 0012 0A4B     		ldr	r3, .L104+8
 1400 0014 0A49     		ldr	r1, .L104+12
 1401 0016 E818     		adds	r0, r5, r3
 1402              	.LVL93:
 1403 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1404              	.LVL94:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1405              		.loc 1 2608 0
 1406 001c FA21     		movs	r1, #250
 1407 001e 094B     		ldr	r3, .L104+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1408              		.loc 1 2607 0
 1409 0020 2073     		strb	r0, [r4, #12]
 1410              		.loc 1 2608 0
 1411 0022 8900     		lsls	r1, r1, #2
 1412 0024 E818     		adds	r0, r5, r3
 1413 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1414              	.LVL95:
 1415 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1416              		.loc 1 2609 0
 1417 002c C003     		lsls	r0, r0, #15
 1418 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1419              		.loc 1 2610 0
 1420              		@ sp needed
 1421 0030 70BD     		pop	{r4, r5, r6, pc}
 1422              	.L105:
 1423 0032 C046     		.align	2
 1424              	.L104:
 1425 0034 00000000 		.word	.LANCHOR0
 1426 0038 00366E01 		.word	24000000
 1427 003c 3F420F00 		.word	999999
 1428 0040 40420F00 		.word	1000000
 1429 0044 E7030000 		.word	999
 1430              		.cfi_endproc
 1431              	.LFE29:
 1432              		.size	CyDelayFreq, .-CyDelayFreq
 1433              		.section	.text.CySysTickInit,"ax",%progbits
 1434              		.align	1
 1435              		.global	CySysTickInit
 1436              		.code	16
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 74


 1437              		.thumb_func
 1438              		.type	CySysTickInit, %function
 1439              	CySysTickInit:
 1440              	.LFB31:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1441              		.loc 1 2658 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 0, uses_anonymous_args = 0
 1445              	.LVL96:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 75


 1446 0000 10B5     		push	{r4, lr}
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 4, -8
 1449              		.cfi_offset 14, -4
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1450              		.loc 1 2663 0
 1451 0002 0024     		movs	r4, #0
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1452              		.loc 1 2672 0
 1453 0004 FA21     		movs	r1, #250
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1454              		.loc 1 2663 0
 1455 0006 094B     		ldr	r3, .L107
 1456              	.LBB14:
 1457              	.LBB15:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1458              		.loc 1 2290 0
 1459 0008 094A     		ldr	r2, .L107+4
 1460              	.LBE15:
 1461              	.LBE14:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1462              		.loc 1 2663 0
 1463 000a 1C60     		str	r4, [r3]
 1464              	.LVL97:
 1465 000c 1C61     		str	r4, [r3, #16]
 1466 000e 5C60     		str	r4, [r3, #4]
 1467              	.LVL98:
 1468 0010 9C60     		str	r4, [r3, #8]
 1469              	.LVL99:
 1470 0012 DC60     		str	r4, [r3, #12]
 1471              	.LVL100:
 1472              	.LBB18:
 1473              	.LBB16:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1474              		.loc 1 2290 0
 1475 0014 074B     		ldr	r3, .L107+8
 1476              	.LVL101:
 1477              	.LBE16:
 1478              	.LBE18:
 1479              		.loc 1 2672 0
 1480 0016 8900     		lsls	r1, r1, #2
 1481              	.LBB19:
 1482              	.LBB17:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1483              		.loc 1 2290 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 76


 1484 0018 1A60     		str	r2, [r3]
 1485              	.LVL102:
 1486              	.LBE17:
 1487              	.LBE19:
 1488              		.loc 1 2672 0
 1489 001a 074B     		ldr	r3, .L107+12
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
 1490              		.loc 1 2674 0
 1491              		@ sp needed
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1492              		.loc 1 2672 0
 1493 001c 1869     		ldr	r0, [r3, #16]
 1494 001e FFF7FEFF 		bl	__aeabi_uidiv
 1495              	.LVL103:
 1496              	.LBB20:
 1497              	.LBB21:
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2707:Generated_Source\PSoC4/CyLib.c **** }
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 77


2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2723:Generated_Source\PSoC4/CyLib.c **** }
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2739:Generated_Source\PSoC4/CyLib.c **** }
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1498              		.loc 1 2755 0
 1499 0022 064B     		ldr	r3, .L107+16
 1500 0024 1860     		str	r0, [r3]
 1501              	.LVL104:
 1502              	.LBE21:
 1503              	.LBE20:
 1504              	.LBB22:
 1505              	.LBB23:
2756:Generated_Source\PSoC4/CyLib.c **** }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 78


2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2772:Generated_Source\PSoC4/CyLib.c **** }
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2788:Generated_Source\PSoC4/CyLib.c **** }
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2820:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 79


2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2845:Generated_Source\PSoC4/CyLib.c ****     }
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2868:Generated_Source\PSoC4/CyLib.c **** }
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 80


2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1506              		.loc 1 2880 0
 1507 0026 064B     		ldr	r3, .L107+20
 1508 0028 1C60     		str	r4, [r3]
 1509              	.LBE23:
 1510              	.LBE22:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1511              		.loc 1 2674 0
 1512 002a 10BD     		pop	{r4, pc}
 1513              	.L108:
 1514              		.align	2
 1515              	.L107:
 1516 002c 00000000 		.word	.LANCHOR2
 1517 0030 00000000 		.word	CySysTickServiceCallbacks
 1518 0034 3C000020 		.word	536870972
 1519 0038 00000000 		.word	.LANCHOR0
 1520 003c 14E000E0 		.word	-536813548
 1521 0040 18E000E0 		.word	-536813544
 1522              		.cfi_endproc
 1523              	.LFE31:
 1524              		.size	CySysTickInit, .-CySysTickInit
 1525              		.section	.text.CySysTickStop,"ax",%progbits
 1526              		.align	1
 1527              		.global	CySysTickStop
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	CySysTickStop, %function
 1531              	CySysTickStop:
 1532              	.LFB33:
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1533              		.loc 1 2705 0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 0, uses_anonymous_args = 0
 1537              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c **** }
 1538              		.loc 1 2706 0
 1539 0000 0121     		movs	r1, #1
 1540 0002 024A     		ldr	r2, .L110
2707:Generated_Source\PSoC4/CyLib.c **** 
 1541              		.loc 1 2707 0
 1542              		@ sp needed
2706:Generated_Source\PSoC4/CyLib.c **** }
 1543              		.loc 1 2706 0
 1544 0004 1368     		ldr	r3, [r2]
 1545 0006 8B43     		bics	r3, r1
 1546 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** 
 1547              		.loc 1 2707 0
 1548 000a 7047     		bx	lr
 1549              	.L111:
 1550              		.align	2
 1551              	.L110:
 1552 000c 10E000E0 		.word	-536813552
 1553              		.cfi_endproc
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 81


 1554              	.LFE33:
 1555              		.size	CySysTickStop, .-CySysTickStop
 1556              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1557              		.align	1
 1558              		.global	CySysTickEnableInterrupt
 1559              		.code	16
 1560              		.thumb_func
 1561              		.type	CySysTickEnableInterrupt, %function
 1562              	CySysTickEnableInterrupt:
 1563              	.LFB34:
2721:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1564              		.loc 1 2721 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 0
 1567              		@ frame_needed = 0, uses_anonymous_args = 0
 1568              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c **** }
 1569              		.loc 1 2722 0
 1570 0000 0221     		movs	r1, #2
 1571 0002 024A     		ldr	r2, .L113
2723:Generated_Source\PSoC4/CyLib.c **** 
 1572              		.loc 1 2723 0
 1573              		@ sp needed
2722:Generated_Source\PSoC4/CyLib.c **** }
 1574              		.loc 1 2722 0
 1575 0004 1368     		ldr	r3, [r2]
 1576 0006 0B43     		orrs	r3, r1
 1577 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** 
 1578              		.loc 1 2723 0
 1579 000a 7047     		bx	lr
 1580              	.L114:
 1581              		.align	2
 1582              	.L113:
 1583 000c 10E000E0 		.word	-536813552
 1584              		.cfi_endproc
 1585              	.LFE34:
 1586              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1587              		.section	.text.CySysTickEnable,"ax",%progbits
 1588              		.align	1
 1589              		.global	CySysTickEnable
 1590              		.code	16
 1591              		.thumb_func
 1592              		.type	CySysTickEnable, %function
 1593              	CySysTickEnable:
 1594              	.LFB32:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1595              		.loc 1 2688 0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 0
 1598              		@ frame_needed = 0, uses_anonymous_args = 0
 1599 0000 10B5     		push	{r4, lr}
 1600              		.cfi_def_cfa_offset 8
 1601              		.cfi_offset 4, -8
 1602              		.cfi_offset 14, -4
2689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1603              		.loc 1 2689 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 82


 1604 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1605              	.LVL105:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1606              		.loc 1 2690 0
 1607 0006 0121     		movs	r1, #1
 1608 0008 024A     		ldr	r2, .L116
2691:Generated_Source\PSoC4/CyLib.c **** 
 1609              		.loc 1 2691 0
 1610              		@ sp needed
2690:Generated_Source\PSoC4/CyLib.c **** }
 1611              		.loc 1 2690 0
 1612 000a 1368     		ldr	r3, [r2]
 1613 000c 0B43     		orrs	r3, r1
 1614 000e 1360     		str	r3, [r2]
2691:Generated_Source\PSoC4/CyLib.c **** 
 1615              		.loc 1 2691 0
 1616 0010 10BD     		pop	{r4, pc}
 1617              	.L117:
 1618 0012 C046     		.align	2
 1619              	.L116:
 1620 0014 10E000E0 		.word	-536813552
 1621              		.cfi_endproc
 1622              	.LFE32:
 1623              		.size	CySysTickEnable, .-CySysTickEnable
 1624              		.section	.text.CySysTickStart,"ax",%progbits
 1625              		.align	1
 1626              		.global	CySysTickStart
 1627              		.code	16
 1628              		.thumb_func
 1629              		.type	CySysTickStart, %function
 1630              	CySysTickStart:
 1631              	.LFB30:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1632              		.loc 1 2629 0
 1633              		.cfi_startproc
 1634              		@ args = 0, pretend = 0, frame = 0
 1635              		@ frame_needed = 0, uses_anonymous_args = 0
 1636 0000 10B5     		push	{r4, lr}
 1637              		.cfi_def_cfa_offset 8
 1638              		.cfi_offset 4, -8
 1639              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1640              		.loc 1 2630 0
 1641 0002 054C     		ldr	r4, .L120
 1642 0004 6369     		ldr	r3, [r4, #20]
 1643 0006 002B     		cmp	r3, #0
 1644 0008 03D1     		bne	.L119
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1645              		.loc 1 2632 0
 1646 000a FFF7FEFF 		bl	CySysTickInit
 1647              	.LVL106:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1648              		.loc 1 2633 0
 1649 000e 0123     		movs	r3, #1
 1650 0010 6361     		str	r3, [r4, #20]
 1651              	.L119:
2636:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 83


 1652              		.loc 1 2636 0
 1653 0012 FFF7FEFF 		bl	CySysTickEnable
 1654              	.LVL107:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1655              		.loc 1 2637 0
 1656              		@ sp needed
 1657 0016 10BD     		pop	{r4, pc}
 1658              	.L121:
 1659              		.align	2
 1660              	.L120:
 1661 0018 00000000 		.word	.LANCHOR2
 1662              		.cfi_endproc
 1663              	.LFE30:
 1664              		.size	CySysTickStart, .-CySysTickStart
 1665              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1666              		.align	1
 1667              		.global	CySysTickDisableInterrupt
 1668              		.code	16
 1669              		.thumb_func
 1670              		.type	CySysTickDisableInterrupt, %function
 1671              	CySysTickDisableInterrupt:
 1672              	.LFB35:
2737:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1673              		.loc 1 2737 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c **** }
 1678              		.loc 1 2738 0
 1679 0000 0221     		movs	r1, #2
 1680 0002 024A     		ldr	r2, .L123
2739:Generated_Source\PSoC4/CyLib.c **** 
 1681              		.loc 1 2739 0
 1682              		@ sp needed
2738:Generated_Source\PSoC4/CyLib.c **** }
 1683              		.loc 1 2738 0
 1684 0004 1368     		ldr	r3, [r2]
 1685 0006 8B43     		bics	r3, r1
 1686 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** 
 1687              		.loc 1 2739 0
 1688 000a 7047     		bx	lr
 1689              	.L124:
 1690              		.align	2
 1691              	.L123:
 1692 000c 10E000E0 		.word	-536813552
 1693              		.cfi_endproc
 1694              	.LFE35:
 1695              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1696              		.section	.text.CySysTickSetReload,"ax",%progbits
 1697              		.align	1
 1698              		.global	CySysTickSetReload
 1699              		.code	16
 1700              		.thumb_func
 1701              		.type	CySysTickSetReload, %function
 1702              	CySysTickSetReload:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 84


 1703              	.LFB36:
2754:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1704              		.loc 1 2754 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 0
 1707              		@ frame_needed = 0, uses_anonymous_args = 0
 1708              		@ link register save eliminated.
 1709              	.LVL108:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1710              		.loc 1 2755 0
 1711 0000 024B     		ldr	r3, .L126
 1712 0002 0002     		lsls	r0, r0, #8
 1713              	.LVL109:
 1714 0004 000A     		lsrs	r0, r0, #8
 1715 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** 
 1716              		.loc 1 2756 0
 1717              		@ sp needed
 1718 0008 7047     		bx	lr
 1719              	.L127:
 1720 000a C046     		.align	2
 1721              	.L126:
 1722 000c 14E000E0 		.word	-536813548
 1723              		.cfi_endproc
 1724              	.LFE36:
 1725              		.size	CySysTickSetReload, .-CySysTickSetReload
 1726              		.section	.text.CySysTickGetReload,"ax",%progbits
 1727              		.align	1
 1728              		.global	CySysTickGetReload
 1729              		.code	16
 1730              		.thumb_func
 1731              		.type	CySysTickGetReload, %function
 1732              	CySysTickGetReload:
 1733              	.LFB37:
2770:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1734              		.loc 1 2770 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 0
 1737              		@ frame_needed = 0, uses_anonymous_args = 0
 1738              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c **** }
 1739              		.loc 1 2771 0
 1740 0000 024B     		ldr	r3, .L129
2772:Generated_Source\PSoC4/CyLib.c **** 
 1741              		.loc 1 2772 0
 1742              		@ sp needed
2771:Generated_Source\PSoC4/CyLib.c **** }
 1743              		.loc 1 2771 0
 1744 0002 1868     		ldr	r0, [r3]
 1745 0004 0002     		lsls	r0, r0, #8
 1746 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** 
 1747              		.loc 1 2772 0
 1748 0008 7047     		bx	lr
 1749              	.L130:
 1750 000a C046     		.align	2
 1751              	.L129:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 85


 1752 000c 14E000E0 		.word	-536813548
 1753              		.cfi_endproc
 1754              	.LFE37:
 1755              		.size	CySysTickGetReload, .-CySysTickGetReload
 1756              		.section	.text.CySysTickGetValue,"ax",%progbits
 1757              		.align	1
 1758              		.global	CySysTickGetValue
 1759              		.code	16
 1760              		.thumb_func
 1761              		.type	CySysTickGetValue, %function
 1762              	CySysTickGetValue:
 1763              	.LFB38:
2786:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1764              		.loc 1 2786 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c **** }
 1769              		.loc 1 2787 0
 1770 0000 024B     		ldr	r3, .L132
2788:Generated_Source\PSoC4/CyLib.c **** 
 1771              		.loc 1 2788 0
 1772              		@ sp needed
2787:Generated_Source\PSoC4/CyLib.c **** }
 1773              		.loc 1 2787 0
 1774 0002 1868     		ldr	r0, [r3]
 1775 0004 0002     		lsls	r0, r0, #8
 1776 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** 
 1777              		.loc 1 2788 0
 1778 0008 7047     		bx	lr
 1779              	.L133:
 1780 000a C046     		.align	2
 1781              	.L132:
 1782 000c 18E000E0 		.word	-536813544
 1783              		.cfi_endproc
 1784              	.LFE38:
 1785              		.size	CySysTickGetValue, .-CySysTickGetValue
 1786              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1787              		.align	1
 1788              		.global	CySysTickGetCountFlag
 1789              		.code	16
 1790              		.thumb_func
 1791              		.type	CySysTickGetCountFlag, %function
 1792              	CySysTickGetCountFlag:
 1793              	.LFB39:
2866:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1794              		.loc 1 2866 0
 1795              		.cfi_startproc
 1796              		@ args = 0, pretend = 0, frame = 0
 1797              		@ frame_needed = 0, uses_anonymous_args = 0
 1798              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c **** }
 1799              		.loc 1 2867 0
 1800 0000 024B     		ldr	r3, .L135
2868:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 86


 1801              		.loc 1 2868 0
 1802              		@ sp needed
2867:Generated_Source\PSoC4/CyLib.c **** }
 1803              		.loc 1 2867 0
 1804 0002 1868     		ldr	r0, [r3]
 1805 0004 C003     		lsls	r0, r0, #15
 1806 0006 C00F     		lsrs	r0, r0, #31
2868:Generated_Source\PSoC4/CyLib.c **** 
 1807              		.loc 1 2868 0
 1808 0008 7047     		bx	lr
 1809              	.L136:
 1810 000a C046     		.align	2
 1811              	.L135:
 1812 000c 10E000E0 		.word	-536813552
 1813              		.cfi_endproc
 1814              	.LFE39:
 1815              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1816              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1817              		.align	1
 1818              		.code	16
 1819              		.thumb_func
 1820              		.type	CySysTickServiceCallbacks, %function
 1821              	CySysTickServiceCallbacks:
 1822              	.LFB43:
2881:Generated_Source\PSoC4/CyLib.c **** }
2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 87


2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
 1823              		.loc 1 2951 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827 0000 10B5     		push	{r4, lr}
 1828              		.cfi_def_cfa_offset 8
 1829              		.cfi_offset 4, -8
 1830              		.cfi_offset 14, -4
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1831              		.loc 1 2955 0
 1832 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1833              	.LVL110:
 1834 0006 0128     		cmp	r0, #1
 1835 0008 08D1     		bne	.L137
 1836 000a 0024     		movs	r4, #0
 1837              	.L140:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 88


 1838              	.LBB26:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1839              		.loc 1 2959 0
 1840 000c 044B     		ldr	r3, .L146
 1841 000e E358     		ldr	r3, [r4, r3]
 1842 0010 002B     		cmp	r3, #0
 1843 0012 00D0     		beq	.L139
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1844              		.loc 1 2961 0
 1845 0014 9847     		blx	r3
 1846              	.LVL111:
 1847              	.L139:
 1848 0016 0434     		adds	r4, r4, #4
2957:Generated_Source\PSoC4/CyLib.c ****         {
 1849              		.loc 1 2957 0
 1850 0018 142C     		cmp	r4, #20
 1851 001a F7D1     		bne	.L140
 1852              	.L137:
 1853              	.LBE26:
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
 1854              		.loc 1 2965 0
 1855              		@ sp needed
 1856 001c 10BD     		pop	{r4, pc}
 1857              	.L147:
 1858 001e C046     		.align	2
 1859              	.L146:
 1860 0020 00000000 		.word	.LANCHOR2
 1861              		.cfi_endproc
 1862              	.LFE43:
 1863              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1864              		.section	.text.CySysTickClear,"ax",%progbits
 1865              		.align	1
 1866              		.global	CySysTickClear
 1867              		.code	16
 1868              		.thumb_func
 1869              		.type	CySysTickClear, %function
 1870              	CySysTickClear:
 1871              	.LFB40:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1872              		.loc 1 2879 0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 0
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
 1876              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 1877              		.loc 1 2880 0
 1878 0000 0022     		movs	r2, #0
 1879 0002 014B     		ldr	r3, .L149
2881:Generated_Source\PSoC4/CyLib.c **** 
 1880              		.loc 1 2881 0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 89


 1881              		@ sp needed
2880:Generated_Source\PSoC4/CyLib.c **** }
 1882              		.loc 1 2880 0
 1883 0004 1A60     		str	r2, [r3]
2881:Generated_Source\PSoC4/CyLib.c **** 
 1884              		.loc 1 2881 0
 1885 0006 7047     		bx	lr
 1886              	.L150:
 1887              		.align	2
 1888              	.L149:
 1889 0008 18E000E0 		.word	-536813544
 1890              		.cfi_endproc
 1891              	.LFE40:
 1892              		.size	CySysTickClear, .-CySysTickClear
 1893              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1894              		.align	1
 1895              		.global	CySysTickSetCallback
 1896              		.code	16
 1897              		.thumb_func
 1898              		.type	CySysTickSetCallback, %function
 1899              	CySysTickSetCallback:
 1900              	.LFB41:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1901              		.loc 1 2914 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905              		@ link register save eliminated.
 1906              	.LVL112:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1907              		.loc 1 2917 0
 1908 0000 024A     		ldr	r2, .L152
 1909 0002 8300     		lsls	r3, r0, #2
 1910 0004 9858     		ldr	r0, [r3, r2]
 1911              	.LVL113:
2920:Generated_Source\PSoC4/CyLib.c **** 
 1912              		.loc 1 2920 0
 1913              		@ sp needed
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1914              		.loc 1 2918 0
 1915 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 1916              		.loc 1 2920 0
 1917 0008 7047     		bx	lr
 1918              	.L153:
 1919 000a C046     		.align	2
 1920              	.L152:
 1921 000c 00000000 		.word	.LANCHOR2
 1922              		.cfi_endproc
 1923              	.LFE41:
 1924              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1925              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1926              		.align	1
 1927              		.global	CySysTickGetCallback
 1928              		.code	16
 1929              		.thumb_func
 1930              		.type	CySysTickGetCallback, %function
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 90


 1931              	CySysTickGetCallback:
 1932              	.LFB42:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1933              		.loc 1 2938 0
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 0
 1936              		@ frame_needed = 0, uses_anonymous_args = 0
 1937              		@ link register save eliminated.
 1938              	.LVL114:
2939:Generated_Source\PSoC4/CyLib.c **** }
 1939              		.loc 1 2939 0
 1940 0000 014B     		ldr	r3, .L155
 1941 0002 8000     		lsls	r0, r0, #2
 1942              	.LVL115:
 1943 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 1944              		.loc 1 2940 0
 1945              		@ sp needed
 1946 0006 7047     		bx	lr
 1947              	.L156:
 1948              		.align	2
 1949              	.L155:
 1950 0008 00000000 		.word	.LANCHOR2
 1951              		.cfi_endproc
 1952              	.LFE42:
 1953              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1954              		.section	.text.CyGetUniqueId,"ax",%progbits
 1955              		.align	1
 1956              		.global	CyGetUniqueId
 1957              		.code	16
 1958              		.thumb_func
 1959              		.type	CyGetUniqueId, %function
 1960              	CyGetUniqueId:
 1961              	.LFB44:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 1962              		.loc 1 2983 0
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 0
 1965              		@ frame_needed = 0, uses_anonymous_args = 0
 1966              		@ link register save eliminated.
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 91


 1967              	.LVL116:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1968              		.loc 1 2985 0
 1969 0000 144B     		ldr	r3, .L158
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 1970              		.loc 1 3005 0
 1971              		@ sp needed
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1972              		.loc 1 2985 0
 1973 0002 1A78     		ldrb	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1974              		.loc 1 2986 0
 1975 0004 144B     		ldr	r3, .L158+4
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1976              		.loc 1 2985 0
 1977 0006 D1B2     		uxtb	r1, r2
 1978 0008 0160     		str	r1, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1979              		.loc 1 2986 0
 1980 000a 1B78     		ldrb	r3, [r3]
 1981 000c 1B02     		lsls	r3, r3, #8
 1982 000e 0B43     		orrs	r3, r1
 1983 0010 1A00     		movs	r2, r3
 1984 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1985              		.loc 1 2987 0
 1986 0014 114B     		ldr	r3, .L158+8
 1987 0016 1B78     		ldrb	r3, [r3]
 1988 0018 1B04     		lsls	r3, r3, #16
 1989 001a 1343     		orrs	r3, r2
2988:Generated_Source\PSoC4/CyLib.c **** 
 1990              		.loc 1 2988 0
 1991 001c 104A     		ldr	r2, .L158+12
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1992              		.loc 1 2987 0
 1993 001e 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 92


 1994              		.loc 1 2988 0
 1995 0020 1278     		ldrb	r2, [r2]
 1996 0022 1206     		lsls	r2, r2, #24
 1997 0024 1343     		orrs	r3, r2
 1998 0026 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1999              		.loc 1 2990 0
 2000 0028 0E4B     		ldr	r3, .L158+16
 2001 002a 1A78     		ldrb	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2002              		.loc 1 2991 0
 2003 002c 0E4B     		ldr	r3, .L158+20
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2004              		.loc 1 2990 0
 2005 002e D1B2     		uxtb	r1, r2
 2006 0030 4160     		str	r1, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2007              		.loc 1 2991 0
 2008 0032 1B78     		ldrb	r3, [r3]
 2009 0034 1B02     		lsls	r3, r3, #8
 2010 0036 0B43     		orrs	r3, r1
 2011 0038 1A00     		movs	r2, r3
 2012 003a 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2013              		.loc 1 2992 0
 2014 003c 0B4B     		ldr	r3, .L158+24
 2015 003e 1B78     		ldrb	r3, [r3]
 2016 0040 1B04     		lsls	r3, r3, #16
 2017 0042 1343     		orrs	r3, r2
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2018              		.loc 1 2993 0
 2019 0044 0A4A     		ldr	r2, .L158+28
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2020              		.loc 1 2992 0
 2021 0046 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2022              		.loc 1 2993 0
 2023 0048 1278     		ldrb	r2, [r2]
 2024 004a 1206     		lsls	r2, r2, #24
 2025 004c 1343     		orrs	r3, r2
 2026 004e 4360     		str	r3, [r0, #4]
 2027              		.loc 1 3005 0
 2028 0050 7047     		bx	lr
 2029              	.L159:
 2030 0052 C046     		.align	2
 2031              	.L158:
 2032 0054 78F1FF0F 		.word	268431736
 2033 0058 79F1FF0F 		.word	268431737
 2034 005c 7AF1FF0F 		.word	268431738
 2035 0060 7BF1FF0F 		.word	268431739
 2036 0064 7CF1FF0F 		.word	268431740
 2037 0068 7DF1FF0F 		.word	268431741
 2038 006c 7EF1FF0F 		.word	268431742
 2039 0070 7FF1FF0F 		.word	268431743
 2040              		.cfi_endproc
 2041              	.LFE44:
 2042              		.size	CyGetUniqueId, .-CyGetUniqueId
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 93


 2043              		.global	CySysClkPumpConfig
 2044              		.global	cyImoFreqMhz2Reg
 2045              		.global	CySysTickInitVar
 2046              		.global	cydelay32kMs
 2047              		.global	cydelayFreqMhz
 2048              		.global	cydelayFreqKhz
 2049              		.global	cydelayFreqHz
 2050              		.section	.rodata
 2051              		.set	.LANCHOR1,. + 0
 2052              		.type	cyImoFreqMhz2Reg, %object
 2053              		.size	cyImoFreqMhz2Reg, 46
 2054              	cyImoFreqMhz2Reg:
 2055 0000 03       		.byte	3
 2056 0001 04       		.byte	4
 2057 0002 05       		.byte	5
 2058 0003 06       		.byte	6
 2059 0004 07       		.byte	7
 2060 0005 08       		.byte	8
 2061 0006 09       		.byte	9
 2062 0007 0A       		.byte	10
 2063 0008 0B       		.byte	11
 2064 0009 0C       		.byte	12
 2065 000a 0E       		.byte	14
 2066 000b 0F       		.byte	15
 2067 000c 10       		.byte	16
 2068 000d 11       		.byte	17
 2069 000e 12       		.byte	18
 2070 000f 13       		.byte	19
 2071 0010 14       		.byte	20
 2072 0011 15       		.byte	21
 2073 0012 16       		.byte	22
 2074 0013 17       		.byte	23
 2075 0014 18       		.byte	24
 2076 0015 19       		.byte	25
 2077 0016 1B       		.byte	27
 2078 0017 1C       		.byte	28
 2079 0018 1D       		.byte	29
 2080 0019 1E       		.byte	30
 2081 001a 1F       		.byte	31
 2082 001b 20       		.byte	32
 2083 001c 21       		.byte	33
 2084 001d 22       		.byte	34
 2085 001e 23       		.byte	35
 2086 001f 25       		.byte	37
 2087 0020 26       		.byte	38
 2088 0021 27       		.byte	39
 2089 0022 28       		.byte	40
 2090 0023 29       		.byte	41
 2091 0024 2A       		.byte	42
 2092 0025 2B       		.byte	43
 2093 0026 2E       		.byte	46
 2094 0027 2F       		.byte	47
 2095 0028 30       		.byte	48
 2096 0029 31       		.byte	49
 2097 002a 32       		.byte	50
 2098 002b 33       		.byte	51
 2099 002c 34       		.byte	52
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 94


 2100 002d 35       		.byte	53
 2101              		.data
 2102              		.align	2
 2103              		.set	.LANCHOR0,. + 0
 2104              		.type	CySysClkPumpConfig, %object
 2105              		.size	CySysClkPumpConfig, 4
 2106              	CySysClkPumpConfig:
 2107 0000 01000000 		.word	1
 2108              		.type	cydelay32kMs, %object
 2109              		.size	cydelay32kMs, 4
 2110              	cydelay32kMs:
 2111 0004 0000E02E 		.word	786432000
 2112              		.type	cydelayFreqKhz, %object
 2113              		.size	cydelayFreqKhz, 4
 2114              	cydelayFreqKhz:
 2115 0008 C05D0000 		.word	24000
 2116              		.type	cydelayFreqMhz, %object
 2117              		.size	cydelayFreqMhz, 1
 2118              	cydelayFreqMhz:
 2119 000c 18       		.byte	24
 2120 000d 000000   		.space	3
 2121              		.type	cydelayFreqHz, %object
 2122              		.size	cydelayFreqHz, 4
 2123              	cydelayFreqHz:
 2124 0010 00366E01 		.word	24000000
 2125              		.bss
 2126              		.align	2
 2127              		.set	.LANCHOR2,. + 0
 2128              		.type	CySysTickCallbacks, %object
 2129              		.size	CySysTickCallbacks, 20
 2130              	CySysTickCallbacks:
 2131 0000 00000000 		.space	20
 2131      00000000 
 2131      00000000 
 2131      00000000 
 2131      00000000 
 2132              		.type	CySysTickInitVar, %object
 2133              		.size	CySysTickInitVar, 4
 2134              	CySysTickInitVar:
 2135 0014 00000000 		.space	4
 2136              		.text
 2137              	.Letext0:
 2138              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2139              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2140              		.section	.debug_info,"",%progbits
 2141              	.Ldebug_info0:
 2142 0000 FA0A0000 		.4byte	0xafa
 2143 0004 0400     		.2byte	0x4
 2144 0006 00000000 		.4byte	.Ldebug_abbrev0
 2145 000a 04       		.byte	0x4
 2146 000b 01       		.uleb128 0x1
 2147 000c A6030000 		.4byte	.LASF103
 2148 0010 0C       		.byte	0xc
 2149 0011 6D060000 		.4byte	.LASF104
 2150 0015 24030000 		.4byte	.LASF105
 2151 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 2152 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 95


 2153 0021 00000000 		.4byte	.Ldebug_line0
 2154 0025 02       		.uleb128 0x2
 2155 0026 01       		.byte	0x1
 2156 0027 06       		.byte	0x6
 2157 0028 FE000000 		.4byte	.LASF0
 2158 002c 02       		.uleb128 0x2
 2159 002d 01       		.byte	0x1
 2160 002e 08       		.byte	0x8
 2161 002f 11050000 		.4byte	.LASF1
 2162 0033 02       		.uleb128 0x2
 2163 0034 02       		.byte	0x2
 2164 0035 05       		.byte	0x5
 2165 0036 26050000 		.4byte	.LASF2
 2166 003a 02       		.uleb128 0x2
 2167 003b 02       		.byte	0x2
 2168 003c 07       		.byte	0x7
 2169 003d B6020000 		.4byte	.LASF3
 2170 0041 02       		.uleb128 0x2
 2171 0042 04       		.byte	0x4
 2172 0043 05       		.byte	0x5
 2173 0044 3D010000 		.4byte	.LASF4
 2174 0048 02       		.uleb128 0x2
 2175 0049 04       		.byte	0x4
 2176 004a 07       		.byte	0x7
 2177 004b 3E020000 		.4byte	.LASF5
 2178 004f 02       		.uleb128 0x2
 2179 0050 08       		.byte	0x8
 2180 0051 05       		.byte	0x5
 2181 0052 F0000000 		.4byte	.LASF6
 2182 0056 02       		.uleb128 0x2
 2183 0057 08       		.byte	0x8
 2184 0058 07       		.byte	0x7
 2185 0059 84000000 		.4byte	.LASF7
 2186 005d 03       		.uleb128 0x3
 2187 005e 04       		.byte	0x4
 2188 005f 05       		.byte	0x5
 2189 0060 696E7400 		.ascii	"int\000"
 2190 0064 02       		.uleb128 0x2
 2191 0065 04       		.byte	0x4
 2192 0066 07       		.byte	0x7
 2193 0067 22020000 		.4byte	.LASF8
 2194 006b 04       		.uleb128 0x4
 2195 006c 68010000 		.4byte	.LASF9
 2196 0070 02       		.byte	0x2
 2197 0071 D201     		.2byte	0x1d2
 2198 0073 2C000000 		.4byte	0x2c
 2199 0077 04       		.uleb128 0x4
 2200 0078 17000000 		.4byte	.LASF10
 2201 007c 02       		.byte	0x2
 2202 007d D301     		.2byte	0x1d3
 2203 007f 3A000000 		.4byte	0x3a
 2204 0083 04       		.uleb128 0x4
 2205 0084 A8010000 		.4byte	.LASF11
 2206 0088 02       		.byte	0x2
 2207 0089 D401     		.2byte	0x1d4
 2208 008b 48000000 		.4byte	0x48
 2209 008f 02       		.uleb128 0x2
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 96


 2210 0090 04       		.byte	0x4
 2211 0091 04       		.byte	0x4
 2212 0092 94040000 		.4byte	.LASF12
 2213 0096 02       		.uleb128 0x2
 2214 0097 08       		.byte	0x8
 2215 0098 04       		.byte	0x4
 2216 0099 84010000 		.4byte	.LASF13
 2217 009d 02       		.uleb128 0x2
 2218 009e 01       		.byte	0x1
 2219 009f 08       		.byte	0x8
 2220 00a0 7C050000 		.4byte	.LASF14
 2221 00a4 04       		.uleb128 0x4
 2222 00a5 FB040000 		.4byte	.LASF15
 2223 00a9 02       		.byte	0x2
 2224 00aa 7C02     		.2byte	0x27c
 2225 00ac B0000000 		.4byte	0xb0
 2226 00b0 05       		.uleb128 0x5
 2227 00b1 6B000000 		.4byte	0x6b
 2228 00b5 04       		.uleb128 0x4
 2229 00b6 55030000 		.4byte	.LASF16
 2230 00ba 02       		.byte	0x2
 2231 00bb 7E02     		.2byte	0x27e
 2232 00bd C1000000 		.4byte	0xc1
 2233 00c1 05       		.uleb128 0x5
 2234 00c2 83000000 		.4byte	0x83
 2235 00c6 04       		.uleb128 0x4
 2236 00c7 81050000 		.4byte	.LASF17
 2237 00cb 02       		.byte	0x2
 2238 00cc 8E02     		.2byte	0x28e
 2239 00ce D2000000 		.4byte	0xd2
 2240 00d2 06       		.uleb128 0x6
 2241 00d3 04       		.byte	0x4
 2242 00d4 D8000000 		.4byte	0xd8
 2243 00d8 07       		.uleb128 0x7
 2244 00d9 02       		.uleb128 0x2
 2245 00da 08       		.byte	0x8
 2246 00db 04       		.byte	0x4
 2247 00dc 92030000 		.4byte	.LASF18
 2248 00e0 02       		.uleb128 0x2
 2249 00e1 04       		.byte	0x4
 2250 00e2 07       		.byte	0x7
 2251 00e3 77030000 		.4byte	.LASF19
 2252 00e7 08       		.uleb128 0x8
 2253 00e8 BF040000 		.4byte	.LASF20
 2254 00ec 03       		.byte	0x3
 2255 00ed F5       		.byte	0xf5
 2256 00ee D2000000 		.4byte	0xd2
 2257 00f2 09       		.uleb128 0x9
 2258 00f3 91010000 		.4byte	.LASF21
 2259 00f7 01       		.byte	0x1
 2260 00f8 8608     		.2byte	0x886
 2261 00fa 01       		.byte	0x1
 2262 00fb 0A       		.uleb128 0xa
 2263 00fc 62050000 		.4byte	.LASF106
 2264 0100 01       		.byte	0x1
 2265 0101 860B     		.2byte	0xb86
 2266 0103 01       		.byte	0x1
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 97


 2267 0104 13010000 		.4byte	0x113
 2268 0108 0B       		.uleb128 0xb
 2269 0109 6900     		.ascii	"i\000"
 2270 010b 01       		.byte	0x1
 2271 010c 880B     		.2byte	0xb88
 2272 010e 83000000 		.4byte	0x83
 2273 0112 00       		.byte	0
 2274 0113 09       		.uleb128 0x9
 2275 0114 2F020000 		.4byte	.LASF22
 2276 0118 01       		.byte	0x1
 2277 0119 3E0B     		.2byte	0xb3e
 2278 011b 01       		.byte	0x1
 2279 011c 0C       		.uleb128 0xc
 2280 011d A0060000 		.4byte	.LASF107
 2281 0121 01       		.byte	0x1
 2282 0122 C10A     		.2byte	0xac1
 2283 0124 01       		.byte	0x1
 2284 0125 36010000 		.4byte	0x136
 2285 0129 0D       		.uleb128 0xd
 2286 012a F8010000 		.4byte	.LASF23
 2287 012e 01       		.byte	0x1
 2288 012f C10A     		.2byte	0xac1
 2289 0131 83000000 		.4byte	0x83
 2290 0135 00       		.byte	0
 2291 0136 0E       		.uleb128 0xe
 2292 0137 FD020000 		.4byte	.LASF108
 2293 013b 01       		.byte	0x1
 2294 013c E708     		.2byte	0x8e7
 2295 013e C6000000 		.4byte	0xc6
 2296 0142 01       		.byte	0x1
 2297 0143 78010000 		.4byte	0x178
 2298 0147 0D       		.uleb128 0xd
 2299 0148 D8020000 		.4byte	.LASF24
 2300 014c 01       		.byte	0x1
 2301 014d E708     		.2byte	0x8e7
 2302 014f 6B000000 		.4byte	0x6b
 2303 0153 0D       		.uleb128 0xd
 2304 0154 9E030000 		.4byte	.LASF25
 2305 0158 01       		.byte	0x1
 2306 0159 E708     		.2byte	0x8e7
 2307 015b C6000000 		.4byte	0xc6
 2308 015f 0F       		.uleb128 0xf
 2309 0160 53000000 		.4byte	.LASF26
 2310 0164 01       		.byte	0x1
 2311 0165 E908     		.2byte	0x8e9
 2312 0167 C6000000 		.4byte	0xc6
 2313 016b 0F       		.uleb128 0xf
 2314 016c 00000000 		.4byte	.LASF27
 2315 0170 01       		.byte	0x1
 2316 0171 EA08     		.2byte	0x8ea
 2317 0173 78010000 		.4byte	0x178
 2318 0177 00       		.byte	0
 2319 0178 06       		.uleb128 0x6
 2320 0179 04       		.byte	0x4
 2321 017a C6000000 		.4byte	0xc6
 2322 017e 10       		.uleb128 0x10
 2323 017f 4B060000 		.4byte	.LASF28
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 98


 2324 0183 01       		.byte	0x1
 2325 0184 6B       		.byte	0x6b
 2326 0185 00000000 		.4byte	.LFB0
 2327 0189 14000000 		.4byte	.LFE0-.LFB0
 2328 018d 01       		.uleb128 0x1
 2329 018e 9C       		.byte	0x9c
 2330 018f 10       		.uleb128 0x10
 2331 0190 6B020000 		.4byte	.LASF29
 2332 0194 01       		.byte	0x1
 2333 0195 8B       		.byte	0x8b
 2334 0196 00000000 		.4byte	.LFB1
 2335 019a 10000000 		.4byte	.LFE1-.LFB1
 2336 019e 01       		.uleb128 0x1
 2337 019f 9C       		.byte	0x9c
 2338 01a0 11       		.uleb128 0x11
 2339 01a1 27000000 		.4byte	.LASF32
 2340 01a5 01       		.byte	0x1
 2341 01a6 AD01     		.2byte	0x1ad
 2342 01a8 00000000 		.4byte	.LFB2
 2343 01ac 20000000 		.4byte	.LFE2-.LFB2
 2344 01b0 01       		.uleb128 0x1
 2345 01b1 9C       		.byte	0x9c
 2346 01b2 F9010000 		.4byte	0x1f9
 2347 01b6 12       		.uleb128 0x12
 2348 01b7 4E050000 		.4byte	.LASF34
 2349 01bb 01       		.byte	0x1
 2350 01bc AD01     		.2byte	0x1ad
 2351 01be 83000000 		.4byte	0x83
 2352 01c2 00000000 		.4byte	.LLST0
 2353 01c6 13       		.uleb128 0x13
 2354 01c7 1B010000 		.4byte	.LASF30
 2355 01cb 01       		.byte	0x1
 2356 01cc AF01     		.2byte	0x1af
 2357 01ce 6B000000 		.4byte	0x6b
 2358 01d2 2C000000 		.4byte	.LLST1
 2359 01d6 13       		.uleb128 0x13
 2360 01d7 99060000 		.4byte	.LASF31
 2361 01db 01       		.byte	0x1
 2362 01dc B001     		.2byte	0x1b0
 2363 01de 83000000 		.4byte	0x83
 2364 01e2 3F000000 		.4byte	.LLST2
 2365 01e6 14       		.uleb128 0x14
 2366 01e7 08000000 		.4byte	.LVL1
 2367 01eb DC0A0000 		.4byte	0xadc
 2368 01ef 14       		.uleb128 0x14
 2369 01f0 1A000000 		.4byte	.LVL4
 2370 01f4 E70A0000 		.4byte	0xae7
 2371 01f8 00       		.byte	0
 2372 01f9 11       		.uleb128 0x11
 2373 01fa 0F030000 		.4byte	.LASF33
 2374 01fe 01       		.byte	0x1
 2375 01ff D901     		.2byte	0x1d9
 2376 0201 00000000 		.4byte	.LFB3
 2377 0205 34000000 		.4byte	.LFE3-.LFB3
 2378 0209 01       		.uleb128 0x1
 2379 020a 9C       		.byte	0x9c
 2380 020b 1E020000 		.4byte	0x21e
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 99


 2381 020f 15       		.uleb128 0x15
 2382 0210 7D010000 		.4byte	.LASF35
 2383 0214 01       		.byte	0x1
 2384 0215 D901     		.2byte	0x1d9
 2385 0217 83000000 		.4byte	0x83
 2386 021b 01       		.uleb128 0x1
 2387 021c 50       		.byte	0x50
 2388 021d 00       		.byte	0
 2389 021e 16       		.uleb128 0x16
 2390 021f B4010000 		.4byte	.LASF40
 2391 0223 01       		.byte	0x1
 2392 0224 FE01     		.2byte	0x1fe
 2393 0226 83000000 		.4byte	0x83
 2394 022a 00000000 		.4byte	.LFB4
 2395 022e 18000000 		.4byte	.LFE4-.LFB4
 2396 0232 01       		.uleb128 0x1
 2397 0233 9C       		.byte	0x9c
 2398 0234 6B020000 		.4byte	0x26b
 2399 0238 13       		.uleb128 0x13
 2400 0239 1B010000 		.4byte	.LASF30
 2401 023d 01       		.byte	0x1
 2402 023e 0002     		.2byte	0x200
 2403 0240 6B000000 		.4byte	0x6b
 2404 0244 5D000000 		.4byte	.LLST3
 2405 0248 13       		.uleb128 0x13
 2406 0249 3C040000 		.4byte	.LASF36
 2407 024d 01       		.byte	0x1
 2408 024e 0102     		.2byte	0x201
 2409 0250 83000000 		.4byte	0x83
 2410 0254 70000000 		.4byte	.LLST4
 2411 0258 14       		.uleb128 0x14
 2412 0259 06000000 		.4byte	.LVL7
 2413 025d DC0A0000 		.4byte	0xadc
 2414 0261 14       		.uleb128 0x14
 2415 0262 0E000000 		.4byte	.LVL9
 2416 0266 E70A0000 		.4byte	0xae7
 2417 026a 00       		.byte	0
 2418 026b 11       		.uleb128 0x11
 2419 026c 9E050000 		.4byte	.LASF37
 2420 0270 01       		.byte	0x1
 2421 0271 3502     		.2byte	0x235
 2422 0273 00000000 		.4byte	.LFB5
 2423 0277 2C000000 		.4byte	.LFE5-.LFB5
 2424 027b 01       		.uleb128 0x1
 2425 027c 9C       		.byte	0x9c
 2426 027d B4020000 		.4byte	0x2b4
 2427 0281 12       		.uleb128 0x12
 2428 0282 43060000 		.4byte	.LASF38
 2429 0286 01       		.byte	0x1
 2430 0287 3502     		.2byte	0x235
 2431 0289 83000000 		.4byte	0x83
 2432 028d 92000000 		.4byte	.LLST5
 2433 0291 13       		.uleb128 0x13
 2434 0292 1B010000 		.4byte	.LASF30
 2435 0296 01       		.byte	0x1
 2436 0297 3702     		.2byte	0x237
 2437 0299 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 100


 2438 029d BE000000 		.4byte	.LLST6
 2439 02a1 14       		.uleb128 0x14
 2440 02a2 08000000 		.4byte	.LVL12
 2441 02a6 DC0A0000 		.4byte	0xadc
 2442 02aa 14       		.uleb128 0x14
 2443 02ab 22000000 		.4byte	.LVL14
 2444 02af E70A0000 		.4byte	0xae7
 2445 02b3 00       		.byte	0
 2446 02b4 17       		.uleb128 0x17
 2447 02b5 16060000 		.4byte	.LASF39
 2448 02b9 01       		.byte	0x1
 2449 02ba 6408     		.2byte	0x864
 2450 02bc 00000000 		.4byte	.LFB8
 2451 02c0 20000000 		.4byte	.LFE8-.LFB8
 2452 02c4 01       		.uleb128 0x1
 2453 02c5 9C       		.byte	0x9c
 2454 02c6 18       		.uleb128 0x18
 2455 02c7 50020000 		.4byte	.LASF82
 2456 02cb 01       		.byte	0x1
 2457 02cc 7608     		.2byte	0x876
 2458 02ce 83000000 		.4byte	0x83
 2459 02d2 00000000 		.4byte	.LFB9
 2460 02d6 10000000 		.4byte	.LFE9-.LFB9
 2461 02da 01       		.uleb128 0x1
 2462 02db 9C       		.byte	0x9c
 2463 02dc 19       		.uleb128 0x19
 2464 02dd F2000000 		.4byte	0xf2
 2465 02e1 00000000 		.4byte	.LFB10
 2466 02e5 0C000000 		.4byte	.LFE10-.LFB10
 2467 02e9 01       		.uleb128 0x1
 2468 02ea 9C       		.byte	0x9c
 2469 02eb 16       		.uleb128 0x16
 2470 02ec A2020000 		.4byte	.LASF41
 2471 02f0 01       		.byte	0x1
 2472 02f1 A008     		.2byte	0x8a0
 2473 02f3 83000000 		.4byte	0x83
 2474 02f7 00000000 		.4byte	.LFB11
 2475 02fb 14000000 		.4byte	.LFE11-.LFB11
 2476 02ff 01       		.uleb128 0x1
 2477 0300 9C       		.byte	0x9c
 2478 0301 26030000 		.4byte	0x326
 2479 0305 12       		.uleb128 0x12
 2480 0306 1F050000 		.4byte	.LASF42
 2481 030a 01       		.byte	0x1
 2482 030b A008     		.2byte	0x8a0
 2483 030d 83000000 		.4byte	0x83
 2484 0311 D1000000 		.4byte	.LLST7
 2485 0315 13       		.uleb128 0x13
 2486 0316 6A030000 		.4byte	.LASF43
 2487 031a 01       		.byte	0x1
 2488 031b A208     		.2byte	0x8a2
 2489 031d 83000000 		.4byte	0x83
 2490 0321 EF000000 		.4byte	.LLST8
 2491 0325 00       		.byte	0
 2492 0326 16       		.uleb128 0x16
 2493 0327 61000000 		.4byte	.LASF44
 2494 032b 01       		.byte	0x1
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 101


 2495 032c B708     		.2byte	0x8b7
 2496 032e 83000000 		.4byte	0x83
 2497 0332 00000000 		.4byte	.LFB12
 2498 0336 10000000 		.4byte	.LFE12-.LFB12
 2499 033a 01       		.uleb128 0x1
 2500 033b 9C       		.byte	0x9c
 2501 033c 4F030000 		.4byte	0x34f
 2502 0340 1A       		.uleb128 0x1a
 2503 0341 1E000000 		.4byte	.LASF45
 2504 0345 01       		.byte	0x1
 2505 0346 B908     		.2byte	0x8b9
 2506 0348 83000000 		.4byte	0x83
 2507 034c 01       		.uleb128 0x1
 2508 034d 50       		.byte	0x50
 2509 034e 00       		.byte	0
 2510 034f 11       		.uleb128 0x11
 2511 0350 AC000000 		.4byte	.LASF46
 2512 0354 01       		.byte	0x1
 2513 0355 CE08     		.2byte	0x8ce
 2514 0357 00000000 		.4byte	.LFB13
 2515 035b 0C000000 		.4byte	.LFE13-.LFB13
 2516 035f 01       		.uleb128 0x1
 2517 0360 9C       		.byte	0x9c
 2518 0361 74030000 		.4byte	0x374
 2519 0365 15       		.uleb128 0x15
 2520 0366 AF010000 		.4byte	.LASF47
 2521 036a 01       		.byte	0x1
 2522 036b CE08     		.2byte	0x8ce
 2523 036d 83000000 		.4byte	0x83
 2524 0371 01       		.uleb128 0x1
 2525 0372 50       		.byte	0x50
 2526 0373 00       		.byte	0
 2527 0374 1B       		.uleb128 0x1b
 2528 0375 36010000 		.4byte	0x136
 2529 0379 00000000 		.4byte	.LFB14
 2530 037d 0E000000 		.4byte	.LFE14-.LFB14
 2531 0381 01       		.uleb128 0x1
 2532 0382 9C       		.byte	0x9c
 2533 0383 A8030000 		.4byte	0x3a8
 2534 0387 1C       		.uleb128 0x1c
 2535 0388 47010000 		.4byte	0x147
 2536 038c 11010000 		.4byte	.LLST9
 2537 0390 1D       		.uleb128 0x1d
 2538 0391 53010000 		.4byte	0x153
 2539 0395 01       		.uleb128 0x1
 2540 0396 51       		.byte	0x51
 2541 0397 1E       		.uleb128 0x1e
 2542 0398 5F010000 		.4byte	0x15f
 2543 039c 01       		.uleb128 0x1
 2544 039d 50       		.byte	0x50
 2545 039e 1F       		.uleb128 0x1f
 2546 039f 6B010000 		.4byte	0x16b
 2547 03a3 00000020 		.4byte	0x20000000
 2548 03a7 00       		.byte	0
 2549 03a8 16       		.uleb128 0x16
 2550 03a9 3C050000 		.4byte	.LASF48
 2551 03ad 01       		.byte	0x1
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 102


 2552 03ae 0909     		.2byte	0x909
 2553 03b0 C6000000 		.4byte	0xc6
 2554 03b4 00000000 		.4byte	.LFB15
 2555 03b8 0C000000 		.4byte	.LFE15-.LFB15
 2556 03bc 01       		.uleb128 0x1
 2557 03bd 9C       		.byte	0x9c
 2558 03be E3030000 		.4byte	0x3e3
 2559 03c2 12       		.uleb128 0x12
 2560 03c3 D8020000 		.4byte	.LASF24
 2561 03c7 01       		.byte	0x1
 2562 03c8 0909     		.2byte	0x909
 2563 03ca 6B000000 		.4byte	0x6b
 2564 03ce 32010000 		.4byte	.LLST10
 2565 03d2 20       		.uleb128 0x20
 2566 03d3 00000000 		.4byte	.LASF27
 2567 03d7 01       		.byte	0x1
 2568 03d8 0B09     		.2byte	0x90b
 2569 03da 78010000 		.4byte	0x178
 2570 03de 00000020 		.4byte	0x20000000
 2571 03e2 00       		.byte	0
 2572 03e3 16       		.uleb128 0x16
 2573 03e4 C9020000 		.4byte	.LASF49
 2574 03e8 01       		.byte	0x1
 2575 03e9 1F09     		.2byte	0x91f
 2576 03eb C6000000 		.4byte	0xc6
 2577 03ef 00000000 		.4byte	.LFB16
 2578 03f3 10000000 		.4byte	.LFE16-.LFB16
 2579 03f7 01       		.uleb128 0x1
 2580 03f8 9C       		.byte	0x9c
 2581 03f9 3A040000 		.4byte	0x43a
 2582 03fd 12       		.uleb128 0x12
 2583 03fe D8020000 		.4byte	.LASF24
 2584 0402 01       		.byte	0x1
 2585 0403 1F09     		.2byte	0x91f
 2586 0405 6B000000 		.4byte	0x6b
 2587 0409 53010000 		.4byte	.LLST11
 2588 040d 15       		.uleb128 0x15
 2589 040e 9E030000 		.4byte	.LASF25
 2590 0412 01       		.byte	0x1
 2591 0413 1F09     		.2byte	0x91f
 2592 0415 C6000000 		.4byte	0xc6
 2593 0419 01       		.uleb128 0x1
 2594 041a 51       		.byte	0x51
 2595 041b 1A       		.uleb128 0x1a
 2596 041c 53000000 		.4byte	.LASF26
 2597 0420 01       		.byte	0x1
 2598 0421 2109     		.2byte	0x921
 2599 0423 C6000000 		.4byte	0xc6
 2600 0427 01       		.uleb128 0x1
 2601 0428 50       		.byte	0x50
 2602 0429 20       		.uleb128 0x20
 2603 042a 00000000 		.4byte	.LASF27
 2604 042e 01       		.byte	0x1
 2605 042f 2209     		.2byte	0x922
 2606 0431 78010000 		.4byte	0x178
 2607 0435 00000020 		.4byte	0x20000000
 2608 0439 00       		.byte	0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 103


 2609 043a 16       		.uleb128 0x16
 2610 043b D1040000 		.4byte	.LASF50
 2611 043f 01       		.byte	0x1
 2612 0440 3B09     		.2byte	0x93b
 2613 0442 C6000000 		.4byte	0xc6
 2614 0446 00000000 		.4byte	.LFB17
 2615 044a 10000000 		.4byte	.LFE17-.LFB17
 2616 044e 01       		.uleb128 0x1
 2617 044f 9C       		.byte	0x9c
 2618 0450 75040000 		.4byte	0x475
 2619 0454 12       		.uleb128 0x12
 2620 0455 D8020000 		.4byte	.LASF24
 2621 0459 01       		.byte	0x1
 2622 045a 3B09     		.2byte	0x93b
 2623 045c 6B000000 		.4byte	0x6b
 2624 0460 74010000 		.4byte	.LLST12
 2625 0464 20       		.uleb128 0x20
 2626 0465 00000000 		.4byte	.LASF27
 2627 0469 01       		.byte	0x1
 2628 046a 3D09     		.2byte	0x93d
 2629 046c 78010000 		.4byte	0x178
 2630 0470 00000020 		.4byte	0x20000000
 2631 0474 00       		.byte	0
 2632 0475 11       		.uleb128 0x11
 2633 0476 83040000 		.4byte	.LASF51
 2634 047a 01       		.byte	0x1
 2635 047b 4E09     		.2byte	0x94e
 2636 047d 00000000 		.4byte	.LFB18
 2637 0481 34000000 		.4byte	.LFE18-.LFB18
 2638 0485 01       		.uleb128 0x1
 2639 0486 9C       		.byte	0x9c
 2640 0487 EE040000 		.4byte	0x4ee
 2641 048b 12       		.uleb128 0x12
 2642 048c D8020000 		.4byte	.LASF24
 2643 0490 01       		.byte	0x1
 2644 0491 4E09     		.2byte	0x94e
 2645 0493 6B000000 		.4byte	0x6b
 2646 0497 95010000 		.4byte	.LLST13
 2647 049b 12       		.uleb128 0x12
 2648 049c DF020000 		.4byte	.LASF52
 2649 04a0 01       		.byte	0x1
 2650 04a1 4E09     		.2byte	0x94e
 2651 04a3 6B000000 		.4byte	0x6b
 2652 04a7 B6010000 		.4byte	.LLST14
 2653 04ab 13       		.uleb128 0x13
 2654 04ac 1B010000 		.4byte	.LASF30
 2655 04b0 01       		.byte	0x1
 2656 04b1 5009     		.2byte	0x950
 2657 04b3 6B000000 		.4byte	0x6b
 2658 04b7 D7010000 		.4byte	.LLST15
 2659 04bb 13       		.uleb128 0x13
 2660 04bc 8B010000 		.4byte	.LASF53
 2661 04c0 01       		.byte	0x1
 2662 04c1 5109     		.2byte	0x951
 2663 04c3 83000000 		.4byte	0x83
 2664 04c7 EA010000 		.4byte	.LLST16
 2665 04cb 13       		.uleb128 0x13
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 104


 2666 04cc F8010000 		.4byte	.LASF23
 2667 04d0 01       		.byte	0x1
 2668 04d1 5209     		.2byte	0x952
 2669 04d3 83000000 		.4byte	0x83
 2670 04d7 FD010000 		.4byte	.LLST17
 2671 04db 14       		.uleb128 0x14
 2672 04dc 18000000 		.4byte	.LVL33
 2673 04e0 DC0A0000 		.4byte	0xadc
 2674 04e4 14       		.uleb128 0x14
 2675 04e5 2C000000 		.4byte	.LVL37
 2676 04e9 E70A0000 		.4byte	0xae7
 2677 04ed 00       		.byte	0
 2678 04ee 16       		.uleb128 0x16
 2679 04ef CC010000 		.4byte	.LASF54
 2680 04f3 01       		.byte	0x1
 2681 04f4 7009     		.2byte	0x970
 2682 04f6 6B000000 		.4byte	0x6b
 2683 04fa 00000000 		.4byte	.LFB19
 2684 04fe 20000000 		.4byte	.LFE19-.LFB19
 2685 0502 01       		.uleb128 0x1
 2686 0503 9C       		.byte	0x9c
 2687 0504 29050000 		.4byte	0x529
 2688 0508 12       		.uleb128 0x12
 2689 0509 D8020000 		.4byte	.LASF24
 2690 050d 01       		.byte	0x1
 2691 050e 7009     		.2byte	0x970
 2692 0510 6B000000 		.4byte	0x6b
 2693 0514 1B020000 		.4byte	.LLST18
 2694 0518 13       		.uleb128 0x13
 2695 0519 DF020000 		.4byte	.LASF52
 2696 051d 01       		.byte	0x1
 2697 051e 7209     		.2byte	0x972
 2698 0520 6B000000 		.4byte	0x6b
 2699 0524 3C020000 		.4byte	.LLST19
 2700 0528 00       		.byte	0
 2701 0529 11       		.uleb128 0x11
 2702 052a 30050000 		.4byte	.LASF55
 2703 052e 01       		.byte	0x1
 2704 052f 8509     		.2byte	0x985
 2705 0531 00000000 		.4byte	.LFB20
 2706 0535 14000000 		.4byte	.LFE20-.LFB20
 2707 0539 01       		.uleb128 0x1
 2708 053a 9C       		.byte	0x9c
 2709 053b 50050000 		.4byte	0x550
 2710 053f 12       		.uleb128 0x12
 2711 0540 D8020000 		.4byte	.LASF24
 2712 0544 01       		.byte	0x1
 2713 0545 8509     		.2byte	0x985
 2714 0547 6B000000 		.4byte	0x6b
 2715 054b 5D020000 		.4byte	.LLST20
 2716 054f 00       		.byte	0
 2717 0550 16       		.uleb128 0x16
 2718 0551 E2000000 		.4byte	.LASF56
 2719 0555 01       		.byte	0x1
 2720 0556 9709     		.2byte	0x997
 2721 0558 6B000000 		.4byte	0x6b
 2722 055c 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 105


 2723 0560 18000000 		.4byte	.LFE21-.LFB21
 2724 0564 01       		.uleb128 0x1
 2725 0565 9C       		.byte	0x9c
 2726 0566 7B050000 		.4byte	0x57b
 2727 056a 12       		.uleb128 0x12
 2728 056b D8020000 		.4byte	.LASF24
 2729 056f 01       		.byte	0x1
 2730 0570 9709     		.2byte	0x997
 2731 0572 6B000000 		.4byte	0x6b
 2732 0576 7E020000 		.4byte	.LLST21
 2733 057a 00       		.byte	0
 2734 057b 11       		.uleb128 0x11
 2735 057c 46010000 		.4byte	.LASF57
 2736 0580 01       		.byte	0x1
 2737 0581 A709     		.2byte	0x9a7
 2738 0583 00000000 		.4byte	.LFB22
 2739 0587 14000000 		.4byte	.LFE22-.LFB22
 2740 058b 01       		.uleb128 0x1
 2741 058c 9C       		.byte	0x9c
 2742 058d A2050000 		.4byte	0x5a2
 2743 0591 12       		.uleb128 0x12
 2744 0592 D8020000 		.4byte	.LASF24
 2745 0596 01       		.byte	0x1
 2746 0597 A709     		.2byte	0x9a7
 2747 0599 6B000000 		.4byte	0x6b
 2748 059d 9F020000 		.4byte	.LLST22
 2749 05a1 00       		.byte	0
 2750 05a2 11       		.uleb128 0x11
 2751 05a3 92020000 		.4byte	.LASF58
 2752 05a7 01       		.byte	0x1
 2753 05a8 B509     		.2byte	0x9b5
 2754 05aa 00000000 		.4byte	.LFB23
 2755 05ae 14000000 		.4byte	.LFE23-.LFB23
 2756 05b2 01       		.uleb128 0x1
 2757 05b3 9C       		.byte	0x9c
 2758 05b4 C9050000 		.4byte	0x5c9
 2759 05b8 12       		.uleb128 0x12
 2760 05b9 D8020000 		.4byte	.LASF24
 2761 05bd 01       		.byte	0x1
 2762 05be B509     		.2byte	0x9b5
 2763 05c0 6B000000 		.4byte	0x6b
 2764 05c4 C0020000 		.4byte	.LLST23
 2765 05c8 00       		.byte	0
 2766 05c9 11       		.uleb128 0x11
 2767 05ca 80030000 		.4byte	.LASF59
 2768 05ce 01       		.byte	0x1
 2769 05cf C409     		.2byte	0x9c4
 2770 05d1 00000000 		.4byte	.LFB24
 2771 05d5 14000000 		.4byte	.LFE24-.LFB24
 2772 05d9 01       		.uleb128 0x1
 2773 05da 9C       		.byte	0x9c
 2774 05db F0050000 		.4byte	0x5f0
 2775 05df 12       		.uleb128 0x12
 2776 05e0 D8020000 		.4byte	.LASF24
 2777 05e4 01       		.byte	0x1
 2778 05e5 C409     		.2byte	0x9c4
 2779 05e7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 106


 2780 05eb E1020000 		.4byte	.LLST24
 2781 05ef 00       		.byte	0
 2782 05f0 11       		.uleb128 0x11
 2783 05f1 0A050000 		.4byte	.LASF60
 2784 05f5 01       		.byte	0x1
 2785 05f6 D309     		.2byte	0x9d3
 2786 05f8 00000000 		.4byte	.LFB25
 2787 05fc 04000000 		.4byte	.LFE25-.LFB25
 2788 0600 01       		.uleb128 0x1
 2789 0601 9C       		.byte	0x9c
 2790 0602 15060000 		.4byte	0x615
 2791 0606 15       		.uleb128 0x15
 2792 0607 1F050000 		.4byte	.LASF42
 2793 060b 01       		.byte	0x1
 2794 060c D309     		.2byte	0x9d3
 2795 060e 6B000000 		.4byte	0x6b
 2796 0612 01       		.uleb128 0x1
 2797 0613 50       		.byte	0x50
 2798 0614 00       		.byte	0
 2799 0615 17       		.uleb128 0x17
 2800 0616 B9000000 		.4byte	.LASF61
 2801 061a 01       		.byte	0x1
 2802 061b EB09     		.2byte	0x9eb
 2803 061d 00000000 		.4byte	.LFB26
 2804 0621 18000000 		.4byte	.LFE26-.LFB26
 2805 0625 01       		.uleb128 0x1
 2806 0626 9C       		.byte	0x9c
 2807 0627 11       		.uleb128 0x11
 2808 0628 F4050000 		.4byte	.LASF62
 2809 062c 01       		.byte	0x1
 2810 062d FF09     		.2byte	0x9ff
 2811 062f 00000000 		.4byte	.LFB27
 2812 0633 2C000000 		.4byte	.LFE27-.LFB27
 2813 0637 01       		.uleb128 0x1
 2814 0638 9C       		.byte	0x9c
 2815 0639 60060000 		.4byte	0x660
 2816 063d 12       		.uleb128 0x12
 2817 063e E0040000 		.4byte	.LASF63
 2818 0642 01       		.byte	0x1
 2819 0643 FF09     		.2byte	0x9ff
 2820 0645 83000000 		.4byte	0x83
 2821 0649 02030000 		.4byte	.LLST25
 2822 064d 14       		.uleb128 0x14
 2823 064e 14000000 		.4byte	.LVL57
 2824 0652 F20A0000 		.4byte	0xaf2
 2825 0656 14       		.uleb128 0x14
 2826 0657 22000000 		.4byte	.LVL59
 2827 065b F20A0000 		.4byte	0xaf2
 2828 065f 00       		.byte	0
 2829 0660 11       		.uleb128 0x11
 2830 0661 58050000 		.4byte	.LASF64
 2831 0665 01       		.byte	0x1
 2832 0666 160A     		.2byte	0xa16
 2833 0668 00000000 		.4byte	.LFB28
 2834 066c 14000000 		.4byte	.LFE28-.LFB28
 2835 0670 01       		.uleb128 0x1
 2836 0671 9C       		.byte	0x9c
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 107


 2837 0672 90060000 		.4byte	0x690
 2838 0676 12       		.uleb128 0x12
 2839 0677 8C060000 		.4byte	.LASF65
 2840 067b 01       		.byte	0x1
 2841 067c 160A     		.2byte	0xa16
 2842 067e 77000000 		.4byte	0x77
 2843 0682 20030000 		.4byte	.LLST26
 2844 0686 14       		.uleb128 0x14
 2845 0687 0C000000 		.4byte	.LVL63
 2846 068b F20A0000 		.4byte	0xaf2
 2847 068f 00       		.byte	0
 2848 0690 11       		.uleb128 0x11
 2849 0691 E8020000 		.4byte	.LASF66
 2850 0695 01       		.byte	0x1
 2851 0696 6F02     		.2byte	0x26f
 2852 0698 00000000 		.4byte	.LFB6
 2853 069c 24010000 		.4byte	.LFE6-.LFB6
 2854 06a0 01       		.uleb128 0x1
 2855 06a1 9C       		.byte	0x9c
 2856 06a2 6A070000 		.4byte	0x76a
 2857 06a6 12       		.uleb128 0x12
 2858 06a7 0A010000 		.4byte	.LASF67
 2859 06ab 01       		.byte	0x1
 2860 06ac 6F02     		.2byte	0x26f
 2861 06ae 83000000 		.4byte	0x83
 2862 06b2 41030000 		.4byte	.LLST27
 2863 06b6 13       		.uleb128 0x13
 2864 06b7 0F000000 		.4byte	.LASF68
 2865 06bb 01       		.byte	0x1
 2866 06bc 7502     		.2byte	0x275
 2867 06be 6B000000 		.4byte	0x6b
 2868 06c2 80030000 		.4byte	.LLST28
 2869 06c6 13       		.uleb128 0x13
 2870 06c7 34040000 		.4byte	.LASF69
 2871 06cb 01       		.byte	0x1
 2872 06cc 7602     		.2byte	0x276
 2873 06ce 6B000000 		.4byte	0x6b
 2874 06d2 BF030000 		.4byte	.LLST29
 2875 06d6 13       		.uleb128 0x13
 2876 06d7 5C060000 		.4byte	.LASF70
 2877 06db 01       		.byte	0x1
 2878 06dc 7702     		.2byte	0x277
 2879 06de 6B000000 		.4byte	0x6b
 2880 06e2 D3030000 		.4byte	.LLST30
 2881 06e6 13       		.uleb128 0x13
 2882 06e7 6F000000 		.4byte	.LASF71
 2883 06eb 01       		.byte	0x1
 2884 06ec 7802     		.2byte	0x278
 2885 06ee 6B000000 		.4byte	0x6b
 2886 06f2 E7030000 		.4byte	.LLST31
 2887 06f6 13       		.uleb128 0x13
 2888 06f7 DD050000 		.4byte	.LASF72
 2889 06fb 01       		.byte	0x1
 2890 06fc 7902     		.2byte	0x279
 2891 06fe 6B000000 		.4byte	0x6b
 2892 0702 FA030000 		.4byte	.LLST32
 2893 0706 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 108


 2894 0707 1B010000 		.4byte	.LASF30
 2895 070b 01       		.byte	0x1
 2896 070c 8402     		.2byte	0x284
 2897 070e 6B000000 		.4byte	0x6b
 2898 0712 02       		.uleb128 0x2
 2899 0713 91       		.byte	0x91
 2900 0714 60       		.sleb128 -32
 2901 0715 14       		.uleb128 0x14
 2902 0716 0A000000 		.4byte	.LVL65
 2903 071a DC0A0000 		.4byte	0xadc
 2904 071e 21       		.uleb128 0x21
 2905 071f 9C000000 		.4byte	.LVL80
 2906 0723 F20A0000 		.4byte	0xaf2
 2907 0727 31070000 		.4byte	0x731
 2908 072b 22       		.uleb128 0x22
 2909 072c 01       		.uleb128 0x1
 2910 072d 50       		.byte	0x50
 2911 072e 01       		.uleb128 0x1
 2912 072f 35       		.byte	0x35
 2913 0730 00       		.byte	0
 2914 0731 21       		.uleb128 0x21
 2915 0732 B8000000 		.4byte	.LVL86
 2916 0736 60060000 		.4byte	0x660
 2917 073a 44070000 		.4byte	0x744
 2918 073e 22       		.uleb128 0x22
 2919 073f 01       		.uleb128 0x1
 2920 0740 50       		.byte	0x50
 2921 0741 01       		.uleb128 0x1
 2922 0742 35       		.byte	0x35
 2923 0743 00       		.byte	0
 2924 0744 21       		.uleb128 0x21
 2925 0745 CC000000 		.4byte	.LVL87
 2926 0749 F20A0000 		.4byte	0xaf2
 2927 074d 57070000 		.4byte	0x757
 2928 0751 22       		.uleb128 0x22
 2929 0752 01       		.uleb128 0x1
 2930 0753 50       		.byte	0x50
 2931 0754 01       		.uleb128 0x1
 2932 0755 35       		.byte	0x35
 2933 0756 00       		.byte	0
 2934 0757 23       		.uleb128 0x23
 2935 0758 D2000000 		.4byte	.LVL88
 2936 075c E70A0000 		.4byte	0xae7
 2937 0760 22       		.uleb128 0x22
 2938 0761 01       		.uleb128 0x1
 2939 0762 50       		.byte	0x50
 2940 0763 04       		.uleb128 0x4
 2941 0764 91       		.byte	0x91
 2942 0765 60       		.sleb128 -32
 2943 0766 94       		.byte	0x94
 2944 0767 01       		.byte	0x1
 2945 0768 00       		.byte	0
 2946 0769 00       		.byte	0
 2947 076a 11       		.uleb128 0x11
 2948 076b B0040000 		.4byte	.LASF73
 2949 076f 01       		.byte	0x1
 2950 0770 4608     		.2byte	0x846
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 109


 2951 0772 00000000 		.4byte	.LFB7
 2952 0776 44000000 		.4byte	.LFE7-.LFB7
 2953 077a 01       		.uleb128 0x1
 2954 077b 9C       		.byte	0x9c
 2955 077c B2070000 		.4byte	0x7b2
 2956 0780 12       		.uleb128 0x12
 2957 0781 00050000 		.4byte	.LASF74
 2958 0785 01       		.byte	0x1
 2959 0786 4608     		.2byte	0x846
 2960 0788 83000000 		.4byte	0x83
 2961 078c 2C040000 		.4byte	.LLST33
 2962 0790 24       		.uleb128 0x24
 2963 0791 F2000000 		.4byte	0xf2
 2964 0795 2C000000 		.4byte	.LBB10
 2965 0799 00000000 		.4byte	.Ldebug_ranges0+0
 2966 079d 01       		.byte	0x1
 2967 079e 5608     		.2byte	0x856
 2968 07a0 23       		.uleb128 0x23
 2969 07a1 2C000000 		.4byte	.LVL91
 2970 07a5 60060000 		.4byte	0x660
 2971 07a9 22       		.uleb128 0x22
 2972 07aa 01       		.uleb128 0x1
 2973 07ab 50       		.byte	0x50
 2974 07ac 03       		.uleb128 0x3
 2975 07ad 0A       		.byte	0xa
 2976 07ae E803     		.2byte	0x3e8
 2977 07b0 00       		.byte	0
 2978 07b1 00       		.byte	0
 2979 07b2 25       		.uleb128 0x25
 2980 07b3 0F010000 		.4byte	.LASF75
 2981 07b7 01       		.byte	0x1
 2982 07b8 240A     		.2byte	0xa24
 2983 07ba 00000000 		.4byte	.LFB29
 2984 07be 48000000 		.4byte	.LFE29-.LFB29
 2985 07c2 01       		.uleb128 0x1
 2986 07c3 9C       		.byte	0x9c
 2987 07c4 D9070000 		.4byte	0x7d9
 2988 07c8 12       		.uleb128 0x12
 2989 07c9 0A010000 		.4byte	.LASF67
 2990 07cd 01       		.byte	0x1
 2991 07ce 240A     		.2byte	0xa24
 2992 07d0 83000000 		.4byte	0x83
 2993 07d4 4D040000 		.4byte	.LLST34
 2994 07d8 00       		.byte	0
 2995 07d9 25       		.uleb128 0x25
 2996 07da EA010000 		.4byte	.LASF76
 2997 07de 01       		.byte	0x1
 2998 07df 610A     		.2byte	0xa61
 2999 07e1 00000000 		.4byte	.LFB31
 3000 07e5 44000000 		.4byte	.LFE31-.LFB31
 3001 07e9 01       		.uleb128 0x1
 3002 07ea 9C       		.byte	0x9c
 3003 07eb 6B080000 		.4byte	0x86b
 3004 07ef 26       		.uleb128 0x26
 3005 07f0 6900     		.ascii	"i\000"
 3006 07f2 01       		.byte	0x1
 3007 07f3 630A     		.2byte	0xa63
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 110


 3008 07f5 83000000 		.4byte	0x83
 3009 07f9 6E040000 		.4byte	.LLST35
 3010 07fd 27       		.uleb128 0x27
 3011 07fe 36010000 		.4byte	0x136
 3012 0802 08000000 		.4byte	.LBB14
 3013 0806 18000000 		.4byte	.Ldebug_ranges0+0x18
 3014 080a 01       		.byte	0x1
 3015 080b 6A0A     		.2byte	0xa6a
 3016 080d 3C080000 		.4byte	0x83c
 3017 0811 1C       		.uleb128 0x1c
 3018 0812 53010000 		.4byte	0x153
 3019 0816 B2040000 		.4byte	.LLST36
 3020 081a 1C       		.uleb128 0x1c
 3021 081b 47010000 		.4byte	0x147
 3022 081f CA040000 		.4byte	.LLST37
 3023 0823 28       		.uleb128 0x28
 3024 0824 18000000 		.4byte	.Ldebug_ranges0+0x18
 3025 0828 29       		.uleb128 0x29
 3026 0829 5F010000 		.4byte	0x15f
 3027 082d DE040000 		.4byte	.LLST38
 3028 0831 1F       		.uleb128 0x1f
 3029 0832 6B010000 		.4byte	0x16b
 3030 0836 00000020 		.4byte	0x20000000
 3031 083a 00       		.byte	0
 3032 083b 00       		.byte	0
 3033 083c 2A       		.uleb128 0x2a
 3034 083d 1C010000 		.4byte	0x11c
 3035 0841 22000000 		.4byte	.LBB20
 3036 0845 04000000 		.4byte	.LBE20-.LBB20
 3037 0849 01       		.byte	0x1
 3038 084a 700A     		.2byte	0xa70
 3039 084c 5A080000 		.4byte	0x85a
 3040 0850 1C       		.uleb128 0x1c
 3041 0851 29010000 		.4byte	0x129
 3042 0855 01050000 		.4byte	.LLST39
 3043 0859 00       		.byte	0
 3044 085a 2B       		.uleb128 0x2b
 3045 085b 13010000 		.4byte	0x113
 3046 085f 26000000 		.4byte	.LBB22
 3047 0863 04000000 		.4byte	.LBE22-.LBB22
 3048 0867 01       		.byte	0x1
 3049 0868 710A     		.2byte	0xa71
 3050 086a 00       		.byte	0
 3051 086b 17       		.uleb128 0x17
 3052 086c 35060000 		.4byte	.LASF77
 3053 0870 01       		.byte	0x1
 3054 0871 900A     		.2byte	0xa90
 3055 0873 00000000 		.4byte	.LFB33
 3056 0877 10000000 		.4byte	.LFE33-.LFB33
 3057 087b 01       		.uleb128 0x1
 3058 087c 9C       		.byte	0x9c
 3059 087d 17       		.uleb128 0x17
 3060 087e C9000000 		.4byte	.LASF78
 3061 0882 01       		.byte	0x1
 3062 0883 A00A     		.2byte	0xaa0
 3063 0885 00000000 		.4byte	.LFB34
 3064 0889 10000000 		.4byte	.LFE34-.LFB34
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 111


 3065 088d 01       		.uleb128 0x1
 3066 088e 9C       		.byte	0x9c
 3067 088f 11       		.uleb128 0x11
 3068 0890 8E050000 		.4byte	.LASF79
 3069 0894 01       		.byte	0x1
 3070 0895 7F0A     		.2byte	0xa7f
 3071 0897 00000000 		.4byte	.LFB32
 3072 089b 18000000 		.4byte	.LFE32-.LFB32
 3073 089f 01       		.uleb128 0x1
 3074 08a0 9C       		.byte	0x9c
 3075 08a1 AF080000 		.4byte	0x8af
 3076 08a5 14       		.uleb128 0x14
 3077 08a6 06000000 		.4byte	.LVL105
 3078 08aa 7D080000 		.4byte	0x87d
 3079 08ae 00       		.byte	0
 3080 08af 11       		.uleb128 0x11
 3081 08b0 5B030000 		.4byte	.LASF80
 3082 08b4 01       		.byte	0x1
 3083 08b5 440A     		.2byte	0xa44
 3084 08b7 00000000 		.4byte	.LFB30
 3085 08bb 1C000000 		.4byte	.LFE30-.LFB30
 3086 08bf 01       		.uleb128 0x1
 3087 08c0 9C       		.byte	0x9c
 3088 08c1 D8080000 		.4byte	0x8d8
 3089 08c5 14       		.uleb128 0x14
 3090 08c6 0E000000 		.4byte	.LVL106
 3091 08ca D9070000 		.4byte	0x7d9
 3092 08ce 14       		.uleb128 0x14
 3093 08cf 16000000 		.4byte	.LVL107
 3094 08d3 8F080000 		.4byte	0x88f
 3095 08d7 00       		.byte	0
 3096 08d8 17       		.uleb128 0x17
 3097 08d9 FC050000 		.4byte	.LASF81
 3098 08dd 01       		.byte	0x1
 3099 08de B00A     		.2byte	0xab0
 3100 08e0 00000000 		.4byte	.LFB35
 3101 08e4 10000000 		.4byte	.LFE35-.LFB35
 3102 08e8 01       		.uleb128 0x1
 3103 08e9 9C       		.byte	0x9c
 3104 08ea 1B       		.uleb128 0x1b
 3105 08eb 1C010000 		.4byte	0x11c
 3106 08ef 00000000 		.4byte	.LFB36
 3107 08f3 10000000 		.4byte	.LFE36-.LFB36
 3108 08f7 01       		.uleb128 0x1
 3109 08f8 9C       		.byte	0x9c
 3110 08f9 07090000 		.4byte	0x907
 3111 08fd 1C       		.uleb128 0x1c
 3112 08fe 29010000 		.4byte	0x129
 3113 0902 14050000 		.4byte	.LLST40
 3114 0906 00       		.byte	0
 3115 0907 18       		.uleb128 0x18
 3116 0908 2A010000 		.4byte	.LASF83
 3117 090c 01       		.byte	0x1
 3118 090d D10A     		.2byte	0xad1
 3119 090f 83000000 		.4byte	0x83
 3120 0913 00000000 		.4byte	.LFB37
 3121 0917 10000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 112


 3122 091b 01       		.uleb128 0x1
 3123 091c 9C       		.byte	0x9c
 3124 091d 18       		.uleb128 0x18
 3125 091e 63040000 		.4byte	.LASF84
 3126 0922 01       		.byte	0x1
 3127 0923 E10A     		.2byte	0xae1
 3128 0925 83000000 		.4byte	0x83
 3129 0929 00000000 		.4byte	.LFB38
 3130 092d 10000000 		.4byte	.LFE38-.LFB38
 3131 0931 01       		.uleb128 0x1
 3132 0932 9C       		.byte	0x9c
 3133 0933 18       		.uleb128 0x18
 3134 0934 0C020000 		.4byte	.LASF85
 3135 0938 01       		.byte	0x1
 3136 0939 310B     		.2byte	0xb31
 3137 093b 83000000 		.4byte	0x83
 3138 093f 00000000 		.4byte	.LFB39
 3139 0943 10000000 		.4byte	.LFE39-.LFB39
 3140 0947 01       		.uleb128 0x1
 3141 0948 9C       		.byte	0x9c
 3142 0949 2C       		.uleb128 0x2c
 3143 094a FB000000 		.4byte	0xfb
 3144 094e 00000000 		.4byte	.LFB43
 3145 0952 24000000 		.4byte	.LFE43-.LFB43
 3146 0956 01       		.uleb128 0x1
 3147 0957 9C       		.byte	0x9c
 3148 0958 7E090000 		.4byte	0x97e
 3149 095c 2D       		.uleb128 0x2d
 3150 095d 08010000 		.4byte	0x108
 3151 0961 2E       		.uleb128 0x2e
 3152 0962 0C000000 		.4byte	.LBB26
 3153 0966 10000000 		.4byte	.LBE26-.LBB26
 3154 096a 74090000 		.4byte	0x974
 3155 096e 2D       		.uleb128 0x2d
 3156 096f 08010000 		.4byte	0x108
 3157 0973 00       		.byte	0
 3158 0974 14       		.uleb128 0x14
 3159 0975 06000000 		.4byte	.LVL110
 3160 0979 33090000 		.4byte	0x933
 3161 097d 00       		.byte	0
 3162 097e 19       		.uleb128 0x19
 3163 097f 13010000 		.4byte	0x113
 3164 0983 00000000 		.4byte	.LFB40
 3165 0987 0C000000 		.4byte	.LFE40-.LFB40
 3166 098b 01       		.uleb128 0x1
 3167 098c 9C       		.byte	0x9c
 3168 098d 16       		.uleb128 0x16
 3169 098e B5050000 		.4byte	.LASF86
 3170 0992 01       		.byte	0x1
 3171 0993 610B     		.2byte	0xb61
 3172 0995 E7000000 		.4byte	0xe7
 3173 0999 00000000 		.4byte	.LFB41
 3174 099d 10000000 		.4byte	.LFE41-.LFB41
 3175 09a1 01       		.uleb128 0x1
 3176 09a2 9C       		.byte	0x9c
 3177 09a3 D4090000 		.4byte	0x9d4
 3178 09a7 12       		.uleb128 0x12
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 113


 3179 09a8 D8020000 		.4byte	.LASF24
 3180 09ac 01       		.byte	0x1
 3181 09ad 610B     		.2byte	0xb61
 3182 09af 83000000 		.4byte	0x83
 3183 09b3 35050000 		.4byte	.LLST41
 3184 09b7 15       		.uleb128 0x15
 3185 09b8 49040000 		.4byte	.LASF87
 3186 09bc 01       		.byte	0x1
 3187 09bd 610B     		.2byte	0xb61
 3188 09bf E7000000 		.4byte	0xe7
 3189 09c3 01       		.uleb128 0x1
 3190 09c4 51       		.byte	0x51
 3191 09c5 1A       		.uleb128 0x1a
 3192 09c6 5A000000 		.4byte	.LASF88
 3193 09ca 01       		.byte	0x1
 3194 09cb 630B     		.2byte	0xb63
 3195 09cd E7000000 		.4byte	0xe7
 3196 09d1 01       		.uleb128 0x1
 3197 09d2 50       		.byte	0x50
 3198 09d3 00       		.byte	0
 3199 09d4 16       		.uleb128 0x16
 3200 09d5 53010000 		.4byte	.LASF89
 3201 09d9 01       		.byte	0x1
 3202 09da 790B     		.2byte	0xb79
 3203 09dc E7000000 		.4byte	0xe7
 3204 09e0 00000000 		.4byte	.LFB42
 3205 09e4 0C000000 		.4byte	.LFE42-.LFB42
 3206 09e8 01       		.uleb128 0x1
 3207 09e9 9C       		.byte	0x9c
 3208 09ea FF090000 		.4byte	0x9ff
 3209 09ee 12       		.uleb128 0x12
 3210 09ef D8020000 		.4byte	.LASF24
 3211 09f3 01       		.byte	0x1
 3212 09f4 790B     		.2byte	0xb79
 3213 09f6 83000000 		.4byte	0x83
 3214 09fa 56050000 		.4byte	.LLST42
 3215 09fe 00       		.byte	0
 3216 09ff 11       		.uleb128 0x11
 3217 0a00 FE010000 		.4byte	.LASF90
 3218 0a04 01       		.byte	0x1
 3219 0a05 A60B     		.2byte	0xba6
 3220 0a07 00000000 		.4byte	.LFB44
 3221 0a0b 74000000 		.4byte	.LFE44-.LFB44
 3222 0a0f 01       		.uleb128 0x1
 3223 0a10 9C       		.byte	0x9c
 3224 0a11 240A0000 		.4byte	0xa24
 3225 0a15 15       		.uleb128 0x15
 3226 0a16 EB050000 		.4byte	.LASF91
 3227 0a1a 01       		.byte	0x1
 3228 0a1b A60B     		.2byte	0xba6
 3229 0a1d 240A0000 		.4byte	0xa24
 3230 0a21 01       		.uleb128 0x1
 3231 0a22 50       		.byte	0x50
 3232 0a23 00       		.byte	0
 3233 0a24 06       		.uleb128 0x6
 3234 0a25 04       		.byte	0x4
 3235 0a26 83000000 		.4byte	0x83
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 114


 3236 0a2a 2F       		.uleb128 0x2f
 3237 0a2b E7000000 		.4byte	0xe7
 3238 0a2f 3A0A0000 		.4byte	0xa3a
 3239 0a33 30       		.uleb128 0x30
 3240 0a34 E0000000 		.4byte	0xe0
 3241 0a38 04       		.byte	0x4
 3242 0a39 00       		.byte	0
 3243 0a3a 31       		.uleb128 0x31
 3244 0a3b CA050000 		.4byte	.LASF92
 3245 0a3f 01       		.byte	0x1
 3246 0a40 22       		.byte	0x22
 3247 0a41 2A0A0000 		.4byte	0xa2a
 3248 0a45 05       		.uleb128 0x5
 3249 0a46 03       		.byte	0x3
 3250 0a47 00000000 		.4byte	CySysTickCallbacks
 3251 0a4b 32       		.uleb128 0x32
 3252 0a4c 75040000 		.4byte	.LASF93
 3253 0a50 01       		.byte	0x1
 3254 0a51 1B       		.byte	0x1b
 3255 0a52 83000000 		.4byte	0x83
 3256 0a56 05       		.uleb128 0x5
 3257 0a57 03       		.byte	0x3
 3258 0a58 00000000 		.4byte	cydelayFreqHz
 3259 0a5c 32       		.uleb128 0x32
 3260 0a5d 6E010000 		.4byte	.LASF94
 3261 0a61 01       		.byte	0x1
 3262 0a62 1C       		.byte	0x1c
 3263 0a63 83000000 		.4byte	0x83
 3264 0a67 05       		.uleb128 0x5
 3265 0a68 03       		.byte	0x3
 3266 0a69 00000000 		.4byte	cydelayFreqKhz
 3267 0a6d 32       		.uleb128 0x32
 3268 0a6e 26060000 		.4byte	.LASF95
 3269 0a72 01       		.byte	0x1
 3270 0a73 1D       		.byte	0x1d
 3271 0a74 6B000000 		.4byte	0x6b
 3272 0a78 05       		.uleb128 0x5
 3273 0a79 03       		.byte	0x3
 3274 0a7a 00000000 		.4byte	cydelayFreqMhz
 3275 0a7e 32       		.uleb128 0x32
 3276 0a7f DD010000 		.4byte	.LASF96
 3277 0a83 01       		.byte	0x1
 3278 0a84 1E       		.byte	0x1e
 3279 0a85 83000000 		.4byte	0x83
 3280 0a89 05       		.uleb128 0x5
 3281 0a8a 03       		.byte	0x3
 3282 0a8b 00000000 		.4byte	cydelay32kMs
 3283 0a8f 32       		.uleb128 0x32
 3284 0a90 9B000000 		.4byte	.LASF97
 3285 0a94 01       		.byte	0x1
 3286 0a95 36       		.byte	0x36
 3287 0a96 83000000 		.4byte	0x83
 3288 0a9a 05       		.uleb128 0x5
 3289 0a9b 03       		.byte	0x3
 3290 0a9c 00000000 		.4byte	CySysTickInitVar
 3291 0aa0 2F       		.uleb128 0x2f
 3292 0aa1 B00A0000 		.4byte	0xab0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 115


 3293 0aa5 B00A0000 		.4byte	0xab0
 3294 0aa9 30       		.uleb128 0x30
 3295 0aaa E0000000 		.4byte	0xe0
 3296 0aae 2D       		.byte	0x2d
 3297 0aaf 00       		.byte	0
 3298 0ab0 33       		.uleb128 0x33
 3299 0ab1 6B000000 		.4byte	0x6b
 3300 0ab5 32       		.uleb128 0x32
 3301 0ab6 52040000 		.4byte	.LASF98
 3302 0aba 01       		.byte	0x1
 3303 0abb 3B       		.byte	0x3b
 3304 0abc C60A0000 		.4byte	0xac6
 3305 0ac0 05       		.uleb128 0x5
 3306 0ac1 03       		.byte	0x3
 3307 0ac2 00000000 		.4byte	cyImoFreqMhz2Reg
 3308 0ac6 33       		.uleb128 0x33
 3309 0ac7 A00A0000 		.4byte	0xaa0
 3310 0acb 32       		.uleb128 0x32
 3311 0acc 40000000 		.4byte	.LASF99
 3312 0ad0 01       		.byte	0x1
 3313 0ad1 5B       		.byte	0x5b
 3314 0ad2 83000000 		.4byte	0x83
 3315 0ad6 05       		.uleb128 0x5
 3316 0ad7 03       		.byte	0x3
 3317 0ad8 00000000 		.4byte	CySysClkPumpConfig
 3318 0adc 34       		.uleb128 0x34
 3319 0add 7B020000 		.4byte	.LASF100
 3320 0ae1 7B020000 		.4byte	.LASF100
 3321 0ae5 03       		.byte	0x3
 3322 0ae6 E5       		.byte	0xe5
 3323 0ae7 34       		.uleb128 0x34
 3324 0ae8 9A040000 		.4byte	.LASF101
 3325 0aec 9A040000 		.4byte	.LASF101
 3326 0af0 03       		.byte	0x3
 3327 0af1 E6       		.byte	0xe6
 3328 0af2 34       		.uleb128 0x34
 3329 0af3 ED040000 		.4byte	.LASF102
 3330 0af7 ED040000 		.4byte	.LASF102
 3331 0afb 03       		.byte	0x3
 3332 0afc DC       		.byte	0xdc
 3333 0afd 00       		.byte	0
 3334              		.section	.debug_abbrev,"",%progbits
 3335              	.Ldebug_abbrev0:
 3336 0000 01       		.uleb128 0x1
 3337 0001 11       		.uleb128 0x11
 3338 0002 01       		.byte	0x1
 3339 0003 25       		.uleb128 0x25
 3340 0004 0E       		.uleb128 0xe
 3341 0005 13       		.uleb128 0x13
 3342 0006 0B       		.uleb128 0xb
 3343 0007 03       		.uleb128 0x3
 3344 0008 0E       		.uleb128 0xe
 3345 0009 1B       		.uleb128 0x1b
 3346 000a 0E       		.uleb128 0xe
 3347 000b 55       		.uleb128 0x55
 3348 000c 17       		.uleb128 0x17
 3349 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 116


 3350 000e 01       		.uleb128 0x1
 3351 000f 10       		.uleb128 0x10
 3352 0010 17       		.uleb128 0x17
 3353 0011 00       		.byte	0
 3354 0012 00       		.byte	0
 3355 0013 02       		.uleb128 0x2
 3356 0014 24       		.uleb128 0x24
 3357 0015 00       		.byte	0
 3358 0016 0B       		.uleb128 0xb
 3359 0017 0B       		.uleb128 0xb
 3360 0018 3E       		.uleb128 0x3e
 3361 0019 0B       		.uleb128 0xb
 3362 001a 03       		.uleb128 0x3
 3363 001b 0E       		.uleb128 0xe
 3364 001c 00       		.byte	0
 3365 001d 00       		.byte	0
 3366 001e 03       		.uleb128 0x3
 3367 001f 24       		.uleb128 0x24
 3368 0020 00       		.byte	0
 3369 0021 0B       		.uleb128 0xb
 3370 0022 0B       		.uleb128 0xb
 3371 0023 3E       		.uleb128 0x3e
 3372 0024 0B       		.uleb128 0xb
 3373 0025 03       		.uleb128 0x3
 3374 0026 08       		.uleb128 0x8
 3375 0027 00       		.byte	0
 3376 0028 00       		.byte	0
 3377 0029 04       		.uleb128 0x4
 3378 002a 16       		.uleb128 0x16
 3379 002b 00       		.byte	0
 3380 002c 03       		.uleb128 0x3
 3381 002d 0E       		.uleb128 0xe
 3382 002e 3A       		.uleb128 0x3a
 3383 002f 0B       		.uleb128 0xb
 3384 0030 3B       		.uleb128 0x3b
 3385 0031 05       		.uleb128 0x5
 3386 0032 49       		.uleb128 0x49
 3387 0033 13       		.uleb128 0x13
 3388 0034 00       		.byte	0
 3389 0035 00       		.byte	0
 3390 0036 05       		.uleb128 0x5
 3391 0037 35       		.uleb128 0x35
 3392 0038 00       		.byte	0
 3393 0039 49       		.uleb128 0x49
 3394 003a 13       		.uleb128 0x13
 3395 003b 00       		.byte	0
 3396 003c 00       		.byte	0
 3397 003d 06       		.uleb128 0x6
 3398 003e 0F       		.uleb128 0xf
 3399 003f 00       		.byte	0
 3400 0040 0B       		.uleb128 0xb
 3401 0041 0B       		.uleb128 0xb
 3402 0042 49       		.uleb128 0x49
 3403 0043 13       		.uleb128 0x13
 3404 0044 00       		.byte	0
 3405 0045 00       		.byte	0
 3406 0046 07       		.uleb128 0x7
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 117


 3407 0047 15       		.uleb128 0x15
 3408 0048 00       		.byte	0
 3409 0049 27       		.uleb128 0x27
 3410 004a 19       		.uleb128 0x19
 3411 004b 00       		.byte	0
 3412 004c 00       		.byte	0
 3413 004d 08       		.uleb128 0x8
 3414 004e 16       		.uleb128 0x16
 3415 004f 00       		.byte	0
 3416 0050 03       		.uleb128 0x3
 3417 0051 0E       		.uleb128 0xe
 3418 0052 3A       		.uleb128 0x3a
 3419 0053 0B       		.uleb128 0xb
 3420 0054 3B       		.uleb128 0x3b
 3421 0055 0B       		.uleb128 0xb
 3422 0056 49       		.uleb128 0x49
 3423 0057 13       		.uleb128 0x13
 3424 0058 00       		.byte	0
 3425 0059 00       		.byte	0
 3426 005a 09       		.uleb128 0x9
 3427 005b 2E       		.uleb128 0x2e
 3428 005c 00       		.byte	0
 3429 005d 3F       		.uleb128 0x3f
 3430 005e 19       		.uleb128 0x19
 3431 005f 03       		.uleb128 0x3
 3432 0060 0E       		.uleb128 0xe
 3433 0061 3A       		.uleb128 0x3a
 3434 0062 0B       		.uleb128 0xb
 3435 0063 3B       		.uleb128 0x3b
 3436 0064 05       		.uleb128 0x5
 3437 0065 27       		.uleb128 0x27
 3438 0066 19       		.uleb128 0x19
 3439 0067 20       		.uleb128 0x20
 3440 0068 0B       		.uleb128 0xb
 3441 0069 00       		.byte	0
 3442 006a 00       		.byte	0
 3443 006b 0A       		.uleb128 0xa
 3444 006c 2E       		.uleb128 0x2e
 3445 006d 01       		.byte	0x1
 3446 006e 03       		.uleb128 0x3
 3447 006f 0E       		.uleb128 0xe
 3448 0070 3A       		.uleb128 0x3a
 3449 0071 0B       		.uleb128 0xb
 3450 0072 3B       		.uleb128 0x3b
 3451 0073 05       		.uleb128 0x5
 3452 0074 27       		.uleb128 0x27
 3453 0075 19       		.uleb128 0x19
 3454 0076 20       		.uleb128 0x20
 3455 0077 0B       		.uleb128 0xb
 3456 0078 01       		.uleb128 0x1
 3457 0079 13       		.uleb128 0x13
 3458 007a 00       		.byte	0
 3459 007b 00       		.byte	0
 3460 007c 0B       		.uleb128 0xb
 3461 007d 34       		.uleb128 0x34
 3462 007e 00       		.byte	0
 3463 007f 03       		.uleb128 0x3
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 118


 3464 0080 08       		.uleb128 0x8
 3465 0081 3A       		.uleb128 0x3a
 3466 0082 0B       		.uleb128 0xb
 3467 0083 3B       		.uleb128 0x3b
 3468 0084 05       		.uleb128 0x5
 3469 0085 49       		.uleb128 0x49
 3470 0086 13       		.uleb128 0x13
 3471 0087 00       		.byte	0
 3472 0088 00       		.byte	0
 3473 0089 0C       		.uleb128 0xc
 3474 008a 2E       		.uleb128 0x2e
 3475 008b 01       		.byte	0x1
 3476 008c 3F       		.uleb128 0x3f
 3477 008d 19       		.uleb128 0x19
 3478 008e 03       		.uleb128 0x3
 3479 008f 0E       		.uleb128 0xe
 3480 0090 3A       		.uleb128 0x3a
 3481 0091 0B       		.uleb128 0xb
 3482 0092 3B       		.uleb128 0x3b
 3483 0093 05       		.uleb128 0x5
 3484 0094 27       		.uleb128 0x27
 3485 0095 19       		.uleb128 0x19
 3486 0096 20       		.uleb128 0x20
 3487 0097 0B       		.uleb128 0xb
 3488 0098 01       		.uleb128 0x1
 3489 0099 13       		.uleb128 0x13
 3490 009a 00       		.byte	0
 3491 009b 00       		.byte	0
 3492 009c 0D       		.uleb128 0xd
 3493 009d 05       		.uleb128 0x5
 3494 009e 00       		.byte	0
 3495 009f 03       		.uleb128 0x3
 3496 00a0 0E       		.uleb128 0xe
 3497 00a1 3A       		.uleb128 0x3a
 3498 00a2 0B       		.uleb128 0xb
 3499 00a3 3B       		.uleb128 0x3b
 3500 00a4 05       		.uleb128 0x5
 3501 00a5 49       		.uleb128 0x49
 3502 00a6 13       		.uleb128 0x13
 3503 00a7 00       		.byte	0
 3504 00a8 00       		.byte	0
 3505 00a9 0E       		.uleb128 0xe
 3506 00aa 2E       		.uleb128 0x2e
 3507 00ab 01       		.byte	0x1
 3508 00ac 3F       		.uleb128 0x3f
 3509 00ad 19       		.uleb128 0x19
 3510 00ae 03       		.uleb128 0x3
 3511 00af 0E       		.uleb128 0xe
 3512 00b0 3A       		.uleb128 0x3a
 3513 00b1 0B       		.uleb128 0xb
 3514 00b2 3B       		.uleb128 0x3b
 3515 00b3 05       		.uleb128 0x5
 3516 00b4 27       		.uleb128 0x27
 3517 00b5 19       		.uleb128 0x19
 3518 00b6 49       		.uleb128 0x49
 3519 00b7 13       		.uleb128 0x13
 3520 00b8 20       		.uleb128 0x20
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 119


 3521 00b9 0B       		.uleb128 0xb
 3522 00ba 01       		.uleb128 0x1
 3523 00bb 13       		.uleb128 0x13
 3524 00bc 00       		.byte	0
 3525 00bd 00       		.byte	0
 3526 00be 0F       		.uleb128 0xf
 3527 00bf 34       		.uleb128 0x34
 3528 00c0 00       		.byte	0
 3529 00c1 03       		.uleb128 0x3
 3530 00c2 0E       		.uleb128 0xe
 3531 00c3 3A       		.uleb128 0x3a
 3532 00c4 0B       		.uleb128 0xb
 3533 00c5 3B       		.uleb128 0x3b
 3534 00c6 05       		.uleb128 0x5
 3535 00c7 49       		.uleb128 0x49
 3536 00c8 13       		.uleb128 0x13
 3537 00c9 00       		.byte	0
 3538 00ca 00       		.byte	0
 3539 00cb 10       		.uleb128 0x10
 3540 00cc 2E       		.uleb128 0x2e
 3541 00cd 00       		.byte	0
 3542 00ce 3F       		.uleb128 0x3f
 3543 00cf 19       		.uleb128 0x19
 3544 00d0 03       		.uleb128 0x3
 3545 00d1 0E       		.uleb128 0xe
 3546 00d2 3A       		.uleb128 0x3a
 3547 00d3 0B       		.uleb128 0xb
 3548 00d4 3B       		.uleb128 0x3b
 3549 00d5 0B       		.uleb128 0xb
 3550 00d6 27       		.uleb128 0x27
 3551 00d7 19       		.uleb128 0x19
 3552 00d8 11       		.uleb128 0x11
 3553 00d9 01       		.uleb128 0x1
 3554 00da 12       		.uleb128 0x12
 3555 00db 06       		.uleb128 0x6
 3556 00dc 40       		.uleb128 0x40
 3557 00dd 18       		.uleb128 0x18
 3558 00de 9742     		.uleb128 0x2117
 3559 00e0 19       		.uleb128 0x19
 3560 00e1 00       		.byte	0
 3561 00e2 00       		.byte	0
 3562 00e3 11       		.uleb128 0x11
 3563 00e4 2E       		.uleb128 0x2e
 3564 00e5 01       		.byte	0x1
 3565 00e6 3F       		.uleb128 0x3f
 3566 00e7 19       		.uleb128 0x19
 3567 00e8 03       		.uleb128 0x3
 3568 00e9 0E       		.uleb128 0xe
 3569 00ea 3A       		.uleb128 0x3a
 3570 00eb 0B       		.uleb128 0xb
 3571 00ec 3B       		.uleb128 0x3b
 3572 00ed 05       		.uleb128 0x5
 3573 00ee 27       		.uleb128 0x27
 3574 00ef 19       		.uleb128 0x19
 3575 00f0 11       		.uleb128 0x11
 3576 00f1 01       		.uleb128 0x1
 3577 00f2 12       		.uleb128 0x12
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 120


 3578 00f3 06       		.uleb128 0x6
 3579 00f4 40       		.uleb128 0x40
 3580 00f5 18       		.uleb128 0x18
 3581 00f6 9742     		.uleb128 0x2117
 3582 00f8 19       		.uleb128 0x19
 3583 00f9 01       		.uleb128 0x1
 3584 00fa 13       		.uleb128 0x13
 3585 00fb 00       		.byte	0
 3586 00fc 00       		.byte	0
 3587 00fd 12       		.uleb128 0x12
 3588 00fe 05       		.uleb128 0x5
 3589 00ff 00       		.byte	0
 3590 0100 03       		.uleb128 0x3
 3591 0101 0E       		.uleb128 0xe
 3592 0102 3A       		.uleb128 0x3a
 3593 0103 0B       		.uleb128 0xb
 3594 0104 3B       		.uleb128 0x3b
 3595 0105 05       		.uleb128 0x5
 3596 0106 49       		.uleb128 0x49
 3597 0107 13       		.uleb128 0x13
 3598 0108 02       		.uleb128 0x2
 3599 0109 17       		.uleb128 0x17
 3600 010a 00       		.byte	0
 3601 010b 00       		.byte	0
 3602 010c 13       		.uleb128 0x13
 3603 010d 34       		.uleb128 0x34
 3604 010e 00       		.byte	0
 3605 010f 03       		.uleb128 0x3
 3606 0110 0E       		.uleb128 0xe
 3607 0111 3A       		.uleb128 0x3a
 3608 0112 0B       		.uleb128 0xb
 3609 0113 3B       		.uleb128 0x3b
 3610 0114 05       		.uleb128 0x5
 3611 0115 49       		.uleb128 0x49
 3612 0116 13       		.uleb128 0x13
 3613 0117 02       		.uleb128 0x2
 3614 0118 17       		.uleb128 0x17
 3615 0119 00       		.byte	0
 3616 011a 00       		.byte	0
 3617 011b 14       		.uleb128 0x14
 3618 011c 898201   		.uleb128 0x4109
 3619 011f 00       		.byte	0
 3620 0120 11       		.uleb128 0x11
 3621 0121 01       		.uleb128 0x1
 3622 0122 31       		.uleb128 0x31
 3623 0123 13       		.uleb128 0x13
 3624 0124 00       		.byte	0
 3625 0125 00       		.byte	0
 3626 0126 15       		.uleb128 0x15
 3627 0127 05       		.uleb128 0x5
 3628 0128 00       		.byte	0
 3629 0129 03       		.uleb128 0x3
 3630 012a 0E       		.uleb128 0xe
 3631 012b 3A       		.uleb128 0x3a
 3632 012c 0B       		.uleb128 0xb
 3633 012d 3B       		.uleb128 0x3b
 3634 012e 05       		.uleb128 0x5
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 121


 3635 012f 49       		.uleb128 0x49
 3636 0130 13       		.uleb128 0x13
 3637 0131 02       		.uleb128 0x2
 3638 0132 18       		.uleb128 0x18
 3639 0133 00       		.byte	0
 3640 0134 00       		.byte	0
 3641 0135 16       		.uleb128 0x16
 3642 0136 2E       		.uleb128 0x2e
 3643 0137 01       		.byte	0x1
 3644 0138 3F       		.uleb128 0x3f
 3645 0139 19       		.uleb128 0x19
 3646 013a 03       		.uleb128 0x3
 3647 013b 0E       		.uleb128 0xe
 3648 013c 3A       		.uleb128 0x3a
 3649 013d 0B       		.uleb128 0xb
 3650 013e 3B       		.uleb128 0x3b
 3651 013f 05       		.uleb128 0x5
 3652 0140 27       		.uleb128 0x27
 3653 0141 19       		.uleb128 0x19
 3654 0142 49       		.uleb128 0x49
 3655 0143 13       		.uleb128 0x13
 3656 0144 11       		.uleb128 0x11
 3657 0145 01       		.uleb128 0x1
 3658 0146 12       		.uleb128 0x12
 3659 0147 06       		.uleb128 0x6
 3660 0148 40       		.uleb128 0x40
 3661 0149 18       		.uleb128 0x18
 3662 014a 9742     		.uleb128 0x2117
 3663 014c 19       		.uleb128 0x19
 3664 014d 01       		.uleb128 0x1
 3665 014e 13       		.uleb128 0x13
 3666 014f 00       		.byte	0
 3667 0150 00       		.byte	0
 3668 0151 17       		.uleb128 0x17
 3669 0152 2E       		.uleb128 0x2e
 3670 0153 00       		.byte	0
 3671 0154 3F       		.uleb128 0x3f
 3672 0155 19       		.uleb128 0x19
 3673 0156 03       		.uleb128 0x3
 3674 0157 0E       		.uleb128 0xe
 3675 0158 3A       		.uleb128 0x3a
 3676 0159 0B       		.uleb128 0xb
 3677 015a 3B       		.uleb128 0x3b
 3678 015b 05       		.uleb128 0x5
 3679 015c 27       		.uleb128 0x27
 3680 015d 19       		.uleb128 0x19
 3681 015e 11       		.uleb128 0x11
 3682 015f 01       		.uleb128 0x1
 3683 0160 12       		.uleb128 0x12
 3684 0161 06       		.uleb128 0x6
 3685 0162 40       		.uleb128 0x40
 3686 0163 18       		.uleb128 0x18
 3687 0164 9742     		.uleb128 0x2117
 3688 0166 19       		.uleb128 0x19
 3689 0167 00       		.byte	0
 3690 0168 00       		.byte	0
 3691 0169 18       		.uleb128 0x18
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 122


 3692 016a 2E       		.uleb128 0x2e
 3693 016b 00       		.byte	0
 3694 016c 3F       		.uleb128 0x3f
 3695 016d 19       		.uleb128 0x19
 3696 016e 03       		.uleb128 0x3
 3697 016f 0E       		.uleb128 0xe
 3698 0170 3A       		.uleb128 0x3a
 3699 0171 0B       		.uleb128 0xb
 3700 0172 3B       		.uleb128 0x3b
 3701 0173 05       		.uleb128 0x5
 3702 0174 27       		.uleb128 0x27
 3703 0175 19       		.uleb128 0x19
 3704 0176 49       		.uleb128 0x49
 3705 0177 13       		.uleb128 0x13
 3706 0178 11       		.uleb128 0x11
 3707 0179 01       		.uleb128 0x1
 3708 017a 12       		.uleb128 0x12
 3709 017b 06       		.uleb128 0x6
 3710 017c 40       		.uleb128 0x40
 3711 017d 18       		.uleb128 0x18
 3712 017e 9742     		.uleb128 0x2117
 3713 0180 19       		.uleb128 0x19
 3714 0181 00       		.byte	0
 3715 0182 00       		.byte	0
 3716 0183 19       		.uleb128 0x19
 3717 0184 2E       		.uleb128 0x2e
 3718 0185 00       		.byte	0
 3719 0186 31       		.uleb128 0x31
 3720 0187 13       		.uleb128 0x13
 3721 0188 11       		.uleb128 0x11
 3722 0189 01       		.uleb128 0x1
 3723 018a 12       		.uleb128 0x12
 3724 018b 06       		.uleb128 0x6
 3725 018c 40       		.uleb128 0x40
 3726 018d 18       		.uleb128 0x18
 3727 018e 9742     		.uleb128 0x2117
 3728 0190 19       		.uleb128 0x19
 3729 0191 00       		.byte	0
 3730 0192 00       		.byte	0
 3731 0193 1A       		.uleb128 0x1a
 3732 0194 34       		.uleb128 0x34
 3733 0195 00       		.byte	0
 3734 0196 03       		.uleb128 0x3
 3735 0197 0E       		.uleb128 0xe
 3736 0198 3A       		.uleb128 0x3a
 3737 0199 0B       		.uleb128 0xb
 3738 019a 3B       		.uleb128 0x3b
 3739 019b 05       		.uleb128 0x5
 3740 019c 49       		.uleb128 0x49
 3741 019d 13       		.uleb128 0x13
 3742 019e 02       		.uleb128 0x2
 3743 019f 18       		.uleb128 0x18
 3744 01a0 00       		.byte	0
 3745 01a1 00       		.byte	0
 3746 01a2 1B       		.uleb128 0x1b
 3747 01a3 2E       		.uleb128 0x2e
 3748 01a4 01       		.byte	0x1
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 123


 3749 01a5 31       		.uleb128 0x31
 3750 01a6 13       		.uleb128 0x13
 3751 01a7 11       		.uleb128 0x11
 3752 01a8 01       		.uleb128 0x1
 3753 01a9 12       		.uleb128 0x12
 3754 01aa 06       		.uleb128 0x6
 3755 01ab 40       		.uleb128 0x40
 3756 01ac 18       		.uleb128 0x18
 3757 01ad 9742     		.uleb128 0x2117
 3758 01af 19       		.uleb128 0x19
 3759 01b0 01       		.uleb128 0x1
 3760 01b1 13       		.uleb128 0x13
 3761 01b2 00       		.byte	0
 3762 01b3 00       		.byte	0
 3763 01b4 1C       		.uleb128 0x1c
 3764 01b5 05       		.uleb128 0x5
 3765 01b6 00       		.byte	0
 3766 01b7 31       		.uleb128 0x31
 3767 01b8 13       		.uleb128 0x13
 3768 01b9 02       		.uleb128 0x2
 3769 01ba 17       		.uleb128 0x17
 3770 01bb 00       		.byte	0
 3771 01bc 00       		.byte	0
 3772 01bd 1D       		.uleb128 0x1d
 3773 01be 05       		.uleb128 0x5
 3774 01bf 00       		.byte	0
 3775 01c0 31       		.uleb128 0x31
 3776 01c1 13       		.uleb128 0x13
 3777 01c2 02       		.uleb128 0x2
 3778 01c3 18       		.uleb128 0x18
 3779 01c4 00       		.byte	0
 3780 01c5 00       		.byte	0
 3781 01c6 1E       		.uleb128 0x1e
 3782 01c7 34       		.uleb128 0x34
 3783 01c8 00       		.byte	0
 3784 01c9 31       		.uleb128 0x31
 3785 01ca 13       		.uleb128 0x13
 3786 01cb 02       		.uleb128 0x2
 3787 01cc 18       		.uleb128 0x18
 3788 01cd 00       		.byte	0
 3789 01ce 00       		.byte	0
 3790 01cf 1F       		.uleb128 0x1f
 3791 01d0 34       		.uleb128 0x34
 3792 01d1 00       		.byte	0
 3793 01d2 31       		.uleb128 0x31
 3794 01d3 13       		.uleb128 0x13
 3795 01d4 1C       		.uleb128 0x1c
 3796 01d5 06       		.uleb128 0x6
 3797 01d6 00       		.byte	0
 3798 01d7 00       		.byte	0
 3799 01d8 20       		.uleb128 0x20
 3800 01d9 34       		.uleb128 0x34
 3801 01da 00       		.byte	0
 3802 01db 03       		.uleb128 0x3
 3803 01dc 0E       		.uleb128 0xe
 3804 01dd 3A       		.uleb128 0x3a
 3805 01de 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 124


 3806 01df 3B       		.uleb128 0x3b
 3807 01e0 05       		.uleb128 0x5
 3808 01e1 49       		.uleb128 0x49
 3809 01e2 13       		.uleb128 0x13
 3810 01e3 1C       		.uleb128 0x1c
 3811 01e4 06       		.uleb128 0x6
 3812 01e5 00       		.byte	0
 3813 01e6 00       		.byte	0
 3814 01e7 21       		.uleb128 0x21
 3815 01e8 898201   		.uleb128 0x4109
 3816 01eb 01       		.byte	0x1
 3817 01ec 11       		.uleb128 0x11
 3818 01ed 01       		.uleb128 0x1
 3819 01ee 31       		.uleb128 0x31
 3820 01ef 13       		.uleb128 0x13
 3821 01f0 01       		.uleb128 0x1
 3822 01f1 13       		.uleb128 0x13
 3823 01f2 00       		.byte	0
 3824 01f3 00       		.byte	0
 3825 01f4 22       		.uleb128 0x22
 3826 01f5 8A8201   		.uleb128 0x410a
 3827 01f8 00       		.byte	0
 3828 01f9 02       		.uleb128 0x2
 3829 01fa 18       		.uleb128 0x18
 3830 01fb 9142     		.uleb128 0x2111
 3831 01fd 18       		.uleb128 0x18
 3832 01fe 00       		.byte	0
 3833 01ff 00       		.byte	0
 3834 0200 23       		.uleb128 0x23
 3835 0201 898201   		.uleb128 0x4109
 3836 0204 01       		.byte	0x1
 3837 0205 11       		.uleb128 0x11
 3838 0206 01       		.uleb128 0x1
 3839 0207 31       		.uleb128 0x31
 3840 0208 13       		.uleb128 0x13
 3841 0209 00       		.byte	0
 3842 020a 00       		.byte	0
 3843 020b 24       		.uleb128 0x24
 3844 020c 1D       		.uleb128 0x1d
 3845 020d 00       		.byte	0
 3846 020e 31       		.uleb128 0x31
 3847 020f 13       		.uleb128 0x13
 3848 0210 52       		.uleb128 0x52
 3849 0211 01       		.uleb128 0x1
 3850 0212 55       		.uleb128 0x55
 3851 0213 17       		.uleb128 0x17
 3852 0214 58       		.uleb128 0x58
 3853 0215 0B       		.uleb128 0xb
 3854 0216 59       		.uleb128 0x59
 3855 0217 05       		.uleb128 0x5
 3856 0218 00       		.byte	0
 3857 0219 00       		.byte	0
 3858 021a 25       		.uleb128 0x25
 3859 021b 2E       		.uleb128 0x2e
 3860 021c 01       		.byte	0x1
 3861 021d 3F       		.uleb128 0x3f
 3862 021e 19       		.uleb128 0x19
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 125


 3863 021f 03       		.uleb128 0x3
 3864 0220 0E       		.uleb128 0xe
 3865 0221 3A       		.uleb128 0x3a
 3866 0222 0B       		.uleb128 0xb
 3867 0223 3B       		.uleb128 0x3b
 3868 0224 05       		.uleb128 0x5
 3869 0225 27       		.uleb128 0x27
 3870 0226 19       		.uleb128 0x19
 3871 0227 11       		.uleb128 0x11
 3872 0228 01       		.uleb128 0x1
 3873 0229 12       		.uleb128 0x12
 3874 022a 06       		.uleb128 0x6
 3875 022b 40       		.uleb128 0x40
 3876 022c 18       		.uleb128 0x18
 3877 022d 9642     		.uleb128 0x2116
 3878 022f 19       		.uleb128 0x19
 3879 0230 01       		.uleb128 0x1
 3880 0231 13       		.uleb128 0x13
 3881 0232 00       		.byte	0
 3882 0233 00       		.byte	0
 3883 0234 26       		.uleb128 0x26
 3884 0235 34       		.uleb128 0x34
 3885 0236 00       		.byte	0
 3886 0237 03       		.uleb128 0x3
 3887 0238 08       		.uleb128 0x8
 3888 0239 3A       		.uleb128 0x3a
 3889 023a 0B       		.uleb128 0xb
 3890 023b 3B       		.uleb128 0x3b
 3891 023c 05       		.uleb128 0x5
 3892 023d 49       		.uleb128 0x49
 3893 023e 13       		.uleb128 0x13
 3894 023f 02       		.uleb128 0x2
 3895 0240 17       		.uleb128 0x17
 3896 0241 00       		.byte	0
 3897 0242 00       		.byte	0
 3898 0243 27       		.uleb128 0x27
 3899 0244 1D       		.uleb128 0x1d
 3900 0245 01       		.byte	0x1
 3901 0246 31       		.uleb128 0x31
 3902 0247 13       		.uleb128 0x13
 3903 0248 52       		.uleb128 0x52
 3904 0249 01       		.uleb128 0x1
 3905 024a 55       		.uleb128 0x55
 3906 024b 17       		.uleb128 0x17
 3907 024c 58       		.uleb128 0x58
 3908 024d 0B       		.uleb128 0xb
 3909 024e 59       		.uleb128 0x59
 3910 024f 05       		.uleb128 0x5
 3911 0250 01       		.uleb128 0x1
 3912 0251 13       		.uleb128 0x13
 3913 0252 00       		.byte	0
 3914 0253 00       		.byte	0
 3915 0254 28       		.uleb128 0x28
 3916 0255 0B       		.uleb128 0xb
 3917 0256 01       		.byte	0x1
 3918 0257 55       		.uleb128 0x55
 3919 0258 17       		.uleb128 0x17
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 126


 3920 0259 00       		.byte	0
 3921 025a 00       		.byte	0
 3922 025b 29       		.uleb128 0x29
 3923 025c 34       		.uleb128 0x34
 3924 025d 00       		.byte	0
 3925 025e 31       		.uleb128 0x31
 3926 025f 13       		.uleb128 0x13
 3927 0260 02       		.uleb128 0x2
 3928 0261 17       		.uleb128 0x17
 3929 0262 00       		.byte	0
 3930 0263 00       		.byte	0
 3931 0264 2A       		.uleb128 0x2a
 3932 0265 1D       		.uleb128 0x1d
 3933 0266 01       		.byte	0x1
 3934 0267 31       		.uleb128 0x31
 3935 0268 13       		.uleb128 0x13
 3936 0269 11       		.uleb128 0x11
 3937 026a 01       		.uleb128 0x1
 3938 026b 12       		.uleb128 0x12
 3939 026c 06       		.uleb128 0x6
 3940 026d 58       		.uleb128 0x58
 3941 026e 0B       		.uleb128 0xb
 3942 026f 59       		.uleb128 0x59
 3943 0270 05       		.uleb128 0x5
 3944 0271 01       		.uleb128 0x1
 3945 0272 13       		.uleb128 0x13
 3946 0273 00       		.byte	0
 3947 0274 00       		.byte	0
 3948 0275 2B       		.uleb128 0x2b
 3949 0276 1D       		.uleb128 0x1d
 3950 0277 00       		.byte	0
 3951 0278 31       		.uleb128 0x31
 3952 0279 13       		.uleb128 0x13
 3953 027a 11       		.uleb128 0x11
 3954 027b 01       		.uleb128 0x1
 3955 027c 12       		.uleb128 0x12
 3956 027d 06       		.uleb128 0x6
 3957 027e 58       		.uleb128 0x58
 3958 027f 0B       		.uleb128 0xb
 3959 0280 59       		.uleb128 0x59
 3960 0281 05       		.uleb128 0x5
 3961 0282 00       		.byte	0
 3962 0283 00       		.byte	0
 3963 0284 2C       		.uleb128 0x2c
 3964 0285 2E       		.uleb128 0x2e
 3965 0286 01       		.byte	0x1
 3966 0287 31       		.uleb128 0x31
 3967 0288 13       		.uleb128 0x13
 3968 0289 11       		.uleb128 0x11
 3969 028a 01       		.uleb128 0x1
 3970 028b 12       		.uleb128 0x12
 3971 028c 06       		.uleb128 0x6
 3972 028d 40       		.uleb128 0x40
 3973 028e 18       		.uleb128 0x18
 3974 028f 9642     		.uleb128 0x2116
 3975 0291 19       		.uleb128 0x19
 3976 0292 01       		.uleb128 0x1
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 127


 3977 0293 13       		.uleb128 0x13
 3978 0294 00       		.byte	0
 3979 0295 00       		.byte	0
 3980 0296 2D       		.uleb128 0x2d
 3981 0297 34       		.uleb128 0x34
 3982 0298 00       		.byte	0
 3983 0299 31       		.uleb128 0x31
 3984 029a 13       		.uleb128 0x13
 3985 029b 00       		.byte	0
 3986 029c 00       		.byte	0
 3987 029d 2E       		.uleb128 0x2e
 3988 029e 0B       		.uleb128 0xb
 3989 029f 01       		.byte	0x1
 3990 02a0 11       		.uleb128 0x11
 3991 02a1 01       		.uleb128 0x1
 3992 02a2 12       		.uleb128 0x12
 3993 02a3 06       		.uleb128 0x6
 3994 02a4 01       		.uleb128 0x1
 3995 02a5 13       		.uleb128 0x13
 3996 02a6 00       		.byte	0
 3997 02a7 00       		.byte	0
 3998 02a8 2F       		.uleb128 0x2f
 3999 02a9 01       		.uleb128 0x1
 4000 02aa 01       		.byte	0x1
 4001 02ab 49       		.uleb128 0x49
 4002 02ac 13       		.uleb128 0x13
 4003 02ad 01       		.uleb128 0x1
 4004 02ae 13       		.uleb128 0x13
 4005 02af 00       		.byte	0
 4006 02b0 00       		.byte	0
 4007 02b1 30       		.uleb128 0x30
 4008 02b2 21       		.uleb128 0x21
 4009 02b3 00       		.byte	0
 4010 02b4 49       		.uleb128 0x49
 4011 02b5 13       		.uleb128 0x13
 4012 02b6 2F       		.uleb128 0x2f
 4013 02b7 0B       		.uleb128 0xb
 4014 02b8 00       		.byte	0
 4015 02b9 00       		.byte	0
 4016 02ba 31       		.uleb128 0x31
 4017 02bb 34       		.uleb128 0x34
 4018 02bc 00       		.byte	0
 4019 02bd 03       		.uleb128 0x3
 4020 02be 0E       		.uleb128 0xe
 4021 02bf 3A       		.uleb128 0x3a
 4022 02c0 0B       		.uleb128 0xb
 4023 02c1 3B       		.uleb128 0x3b
 4024 02c2 0B       		.uleb128 0xb
 4025 02c3 49       		.uleb128 0x49
 4026 02c4 13       		.uleb128 0x13
 4027 02c5 02       		.uleb128 0x2
 4028 02c6 18       		.uleb128 0x18
 4029 02c7 00       		.byte	0
 4030 02c8 00       		.byte	0
 4031 02c9 32       		.uleb128 0x32
 4032 02ca 34       		.uleb128 0x34
 4033 02cb 00       		.byte	0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 128


 4034 02cc 03       		.uleb128 0x3
 4035 02cd 0E       		.uleb128 0xe
 4036 02ce 3A       		.uleb128 0x3a
 4037 02cf 0B       		.uleb128 0xb
 4038 02d0 3B       		.uleb128 0x3b
 4039 02d1 0B       		.uleb128 0xb
 4040 02d2 49       		.uleb128 0x49
 4041 02d3 13       		.uleb128 0x13
 4042 02d4 3F       		.uleb128 0x3f
 4043 02d5 19       		.uleb128 0x19
 4044 02d6 02       		.uleb128 0x2
 4045 02d7 18       		.uleb128 0x18
 4046 02d8 00       		.byte	0
 4047 02d9 00       		.byte	0
 4048 02da 33       		.uleb128 0x33
 4049 02db 26       		.uleb128 0x26
 4050 02dc 00       		.byte	0
 4051 02dd 49       		.uleb128 0x49
 4052 02de 13       		.uleb128 0x13
 4053 02df 00       		.byte	0
 4054 02e0 00       		.byte	0
 4055 02e1 34       		.uleb128 0x34
 4056 02e2 2E       		.uleb128 0x2e
 4057 02e3 00       		.byte	0
 4058 02e4 3F       		.uleb128 0x3f
 4059 02e5 19       		.uleb128 0x19
 4060 02e6 3C       		.uleb128 0x3c
 4061 02e7 19       		.uleb128 0x19
 4062 02e8 6E       		.uleb128 0x6e
 4063 02e9 0E       		.uleb128 0xe
 4064 02ea 03       		.uleb128 0x3
 4065 02eb 0E       		.uleb128 0xe
 4066 02ec 3A       		.uleb128 0x3a
 4067 02ed 0B       		.uleb128 0xb
 4068 02ee 3B       		.uleb128 0x3b
 4069 02ef 0B       		.uleb128 0xb
 4070 02f0 00       		.byte	0
 4071 02f1 00       		.byte	0
 4072 02f2 00       		.byte	0
 4073              		.section	.debug_loc,"",%progbits
 4074              	.Ldebug_loc0:
 4075              	.LLST0:
 4076 0000 00000000 		.4byte	.LVL0
 4077 0004 07000000 		.4byte	.LVL1-1
 4078 0008 0100     		.2byte	0x1
 4079 000a 50       		.byte	0x50
 4080 000b 07000000 		.4byte	.LVL1-1
 4081 000f 1A000000 		.4byte	.LVL5
 4082 0013 0100     		.2byte	0x1
 4083 0015 54       		.byte	0x54
 4084 0016 1A000000 		.4byte	.LVL5
 4085 001a 20000000 		.4byte	.LFE2
 4086 001e 0400     		.2byte	0x4
 4087 0020 F3       		.byte	0xf3
 4088 0021 01       		.uleb128 0x1
 4089 0022 50       		.byte	0x50
 4090 0023 9F       		.byte	0x9f
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 129


 4091 0024 00000000 		.4byte	0
 4092 0028 00000000 		.4byte	0
 4093              	.LLST1:
 4094 002c 08000000 		.4byte	.LVL1
 4095 0030 19000000 		.4byte	.LVL4-1
 4096 0034 0100     		.2byte	0x1
 4097 0036 50       		.byte	0x50
 4098 0037 00000000 		.4byte	0
 4099 003b 00000000 		.4byte	0
 4100              	.LLST2:
 4101 003f 10000000 		.4byte	.LVL2
 4102 0043 14000000 		.4byte	.LVL3
 4103 0047 0100     		.2byte	0x1
 4104 0049 52       		.byte	0x52
 4105 004a 14000000 		.4byte	.LVL3
 4106 004e 19000000 		.4byte	.LVL4-1
 4107 0052 0100     		.2byte	0x1
 4108 0054 53       		.byte	0x53
 4109 0055 00000000 		.4byte	0
 4110 0059 00000000 		.4byte	0
 4111              	.LLST3:
 4112 005d 06000000 		.4byte	.LVL7
 4113 0061 0D000000 		.4byte	.LVL9-1
 4114 0065 0100     		.2byte	0x1
 4115 0067 50       		.byte	0x50
 4116 0068 00000000 		.4byte	0
 4117 006c 00000000 		.4byte	0
 4118              	.LLST4:
 4119 0070 0A000000 		.4byte	.LVL8
 4120 0074 12000000 		.4byte	.LVL10
 4121 0078 0500     		.2byte	0x5
 4122 007a 74       		.byte	0x74
 4123 007b 00       		.sleb128 0
 4124 007c 37       		.byte	0x37
 4125 007d 1A       		.byte	0x1a
 4126 007e 9F       		.byte	0x9f
 4127 007f 12000000 		.4byte	.LVL10
 4128 0083 18000000 		.4byte	.LFE4
 4129 0087 0100     		.2byte	0x1
 4130 0089 50       		.byte	0x50
 4131 008a 00000000 		.4byte	0
 4132 008e 00000000 		.4byte	0
 4133              	.LLST5:
 4134 0092 00000000 		.4byte	.LVL11
 4135 0096 07000000 		.4byte	.LVL12-1
 4136 009a 0100     		.2byte	0x1
 4137 009c 50       		.byte	0x50
 4138 009d 07000000 		.4byte	.LVL12-1
 4139 00a1 0C000000 		.4byte	.LVL13
 4140 00a5 0100     		.2byte	0x1
 4141 00a7 54       		.byte	0x54
 4142 00a8 0C000000 		.4byte	.LVL13
 4143 00ac 2C000000 		.4byte	.LFE5
 4144 00b0 0400     		.2byte	0x4
 4145 00b2 F3       		.byte	0xf3
 4146 00b3 01       		.uleb128 0x1
 4147 00b4 50       		.byte	0x50
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 130


 4148 00b5 9F       		.byte	0x9f
 4149 00b6 00000000 		.4byte	0
 4150 00ba 00000000 		.4byte	0
 4151              	.LLST6:
 4152 00be 08000000 		.4byte	.LVL12
 4153 00c2 21000000 		.4byte	.LVL14-1
 4154 00c6 0100     		.2byte	0x1
 4155 00c8 50       		.byte	0x50
 4156 00c9 00000000 		.4byte	0
 4157 00cd 00000000 		.4byte	0
 4158              	.LLST7:
 4159 00d1 00000000 		.4byte	.LVL15
 4160 00d5 08000000 		.4byte	.LVL16
 4161 00d9 0100     		.2byte	0x1
 4162 00db 50       		.byte	0x50
 4163 00dc 08000000 		.4byte	.LVL16
 4164 00e0 14000000 		.4byte	.LFE11
 4165 00e4 0100     		.2byte	0x1
 4166 00e6 52       		.byte	0x52
 4167 00e7 00000000 		.4byte	0
 4168 00eb 00000000 		.4byte	0
 4169              	.LLST8:
 4170 00ef 0A000000 		.4byte	.LVL17
 4171 00f3 0C000000 		.4byte	.LVL18
 4172 00f7 0500     		.2byte	0x5
 4173 00f9 70       		.byte	0x70
 4174 00fa 00       		.sleb128 0
 4175 00fb 49       		.byte	0x49
 4176 00fc 1A       		.byte	0x1a
 4177 00fd 9F       		.byte	0x9f
 4178 00fe 0C000000 		.4byte	.LVL18
 4179 0102 14000000 		.4byte	.LFE11
 4180 0106 0100     		.2byte	0x1
 4181 0108 50       		.byte	0x50
 4182 0109 00000000 		.4byte	0
 4183 010d 00000000 		.4byte	0
 4184              	.LLST9:
 4185 0111 00000000 		.4byte	.LVL21
 4186 0115 04000000 		.4byte	.LVL22
 4187 0119 0100     		.2byte	0x1
 4188 011b 50       		.byte	0x50
 4189 011c 04000000 		.4byte	.LVL22
 4190 0120 0E000000 		.4byte	.LFE14
 4191 0124 0400     		.2byte	0x4
 4192 0126 F3       		.byte	0xf3
 4193 0127 01       		.uleb128 0x1
 4194 0128 50       		.byte	0x50
 4195 0129 9F       		.byte	0x9f
 4196 012a 00000000 		.4byte	0
 4197 012e 00000000 		.4byte	0
 4198              	.LLST10:
 4199 0132 00000000 		.4byte	.LVL24
 4200 0136 04000000 		.4byte	.LVL25
 4201 013a 0100     		.2byte	0x1
 4202 013c 50       		.byte	0x50
 4203 013d 04000000 		.4byte	.LVL25
 4204 0141 0C000000 		.4byte	.LFE15
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 131


 4205 0145 0400     		.2byte	0x4
 4206 0147 F3       		.byte	0xf3
 4207 0148 01       		.uleb128 0x1
 4208 0149 50       		.byte	0x50
 4209 014a 9F       		.byte	0x9f
 4210 014b 00000000 		.4byte	0
 4211 014f 00000000 		.4byte	0
 4212              	.LLST11:
 4213 0153 00000000 		.4byte	.LVL26
 4214 0157 04000000 		.4byte	.LVL27
 4215 015b 0100     		.2byte	0x1
 4216 015d 50       		.byte	0x50
 4217 015e 04000000 		.4byte	.LVL27
 4218 0162 10000000 		.4byte	.LFE16
 4219 0166 0400     		.2byte	0x4
 4220 0168 F3       		.byte	0xf3
 4221 0169 01       		.uleb128 0x1
 4222 016a 50       		.byte	0x50
 4223 016b 9F       		.byte	0x9f
 4224 016c 00000000 		.4byte	0
 4225 0170 00000000 		.4byte	0
 4226              	.LLST12:
 4227 0174 00000000 		.4byte	.LVL29
 4228 0178 04000000 		.4byte	.LVL30
 4229 017c 0100     		.2byte	0x1
 4230 017e 50       		.byte	0x50
 4231 017f 04000000 		.4byte	.LVL30
 4232 0183 10000000 		.4byte	.LFE17
 4233 0187 0400     		.2byte	0x4
 4234 0189 F3       		.byte	0xf3
 4235 018a 01       		.uleb128 0x1
 4236 018b 50       		.byte	0x50
 4237 018c 9F       		.byte	0x9f
 4238 018d 00000000 		.4byte	0
 4239 0191 00000000 		.4byte	0
 4240              	.LLST13:
 4241 0195 00000000 		.4byte	.LVL31
 4242 0199 17000000 		.4byte	.LVL33-1
 4243 019d 0100     		.2byte	0x1
 4244 019f 50       		.byte	0x50
 4245 01a0 17000000 		.4byte	.LVL33-1
 4246 01a4 34000000 		.4byte	.LFE18
 4247 01a8 0400     		.2byte	0x4
 4248 01aa F3       		.byte	0xf3
 4249 01ab 01       		.uleb128 0x1
 4250 01ac 50       		.byte	0x50
 4251 01ad 9F       		.byte	0x9f
 4252 01ae 00000000 		.4byte	0
 4253 01b2 00000000 		.4byte	0
 4254              	.LLST14:
 4255 01b6 00000000 		.4byte	.LVL31
 4256 01ba 17000000 		.4byte	.LVL33-1
 4257 01be 0100     		.2byte	0x1
 4258 01c0 51       		.byte	0x51
 4259 01c1 17000000 		.4byte	.LVL33-1
 4260 01c5 34000000 		.4byte	.LFE18
 4261 01c9 0400     		.2byte	0x4
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 132


 4262 01cb F3       		.byte	0xf3
 4263 01cc 01       		.uleb128 0x1
 4264 01cd 51       		.byte	0x51
 4265 01ce 9F       		.byte	0x9f
 4266 01cf 00000000 		.4byte	0
 4267 01d3 00000000 		.4byte	0
 4268              	.LLST15:
 4269 01d7 18000000 		.4byte	.LVL33
 4270 01db 2B000000 		.4byte	.LVL37-1
 4271 01df 0100     		.2byte	0x1
 4272 01e1 50       		.byte	0x50
 4273 01e2 00000000 		.4byte	0
 4274 01e6 00000000 		.4byte	0
 4275              	.LLST16:
 4276 01ea 10000000 		.4byte	.LVL32
 4277 01ee 2C000000 		.4byte	.LVL38
 4278 01f2 0100     		.2byte	0x1
 4279 01f4 55       		.byte	0x55
 4280 01f5 00000000 		.4byte	0
 4281 01f9 00000000 		.4byte	0
 4282              	.LLST17:
 4283 01fd 22000000 		.4byte	.LVL34
 4284 0201 26000000 		.4byte	.LVL36
 4285 0205 0100     		.2byte	0x1
 4286 0207 53       		.byte	0x53
 4287 0208 26000000 		.4byte	.LVL36
 4288 020c 2C000000 		.4byte	.LVL39
 4289 0210 0100     		.2byte	0x1
 4290 0212 57       		.byte	0x57
 4291 0213 00000000 		.4byte	0
 4292 0217 00000000 		.4byte	0
 4293              	.LLST18:
 4294 021b 00000000 		.4byte	.LVL40
 4295 021f 18000000 		.4byte	.LVL43
 4296 0223 0100     		.2byte	0x1
 4297 0225 50       		.byte	0x50
 4298 0226 18000000 		.4byte	.LVL43
 4299 022a 20000000 		.4byte	.LFE19
 4300 022e 0400     		.2byte	0x4
 4301 0230 F3       		.byte	0xf3
 4302 0231 01       		.uleb128 0x1
 4303 0232 50       		.byte	0x50
 4304 0233 9F       		.byte	0x9f
 4305 0234 00000000 		.4byte	0
 4306 0238 00000000 		.4byte	0
 4307              	.LLST19:
 4308 023c 0A000000 		.4byte	.LVL41
 4309 0240 16000000 		.4byte	.LVL42
 4310 0244 0F00     		.2byte	0xf
 4311 0246 71       		.byte	0x71
 4312 0247 00       		.sleb128 0
 4313 0248 70       		.byte	0x70
 4314 0249 00       		.sleb128 0
 4315 024a 33       		.byte	0x33
 4316 024b 1A       		.byte	0x1a
 4317 024c 08       		.byte	0x8
 4318 024d FF       		.byte	0xff
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 133


 4319 024e 1A       		.byte	0x1a
 4320 024f 33       		.byte	0x33
 4321 0250 24       		.byte	0x24
 4322 0251 23       		.byte	0x23
 4323 0252 06       		.uleb128 0x6
 4324 0253 25       		.byte	0x25
 4325 0254 9F       		.byte	0x9f
 4326 0255 00000000 		.4byte	0
 4327 0259 00000000 		.4byte	0
 4328              	.LLST20:
 4329 025d 00000000 		.4byte	.LVL44
 4330 0261 04000000 		.4byte	.LVL45
 4331 0265 0100     		.2byte	0x1
 4332 0267 50       		.byte	0x50
 4333 0268 04000000 		.4byte	.LVL45
 4334 026c 14000000 		.4byte	.LFE20
 4335 0270 0400     		.2byte	0x4
 4336 0272 F3       		.byte	0xf3
 4337 0273 01       		.uleb128 0x1
 4338 0274 50       		.byte	0x50
 4339 0275 9F       		.byte	0x9f
 4340 0276 00000000 		.4byte	0
 4341 027a 00000000 		.4byte	0
 4342              	.LLST21:
 4343 027e 00000000 		.4byte	.LVL46
 4344 0282 06000000 		.4byte	.LVL47
 4345 0286 0100     		.2byte	0x1
 4346 0288 50       		.byte	0x50
 4347 0289 06000000 		.4byte	.LVL47
 4348 028d 18000000 		.4byte	.LFE21
 4349 0291 0400     		.2byte	0x4
 4350 0293 F3       		.byte	0xf3
 4351 0294 01       		.uleb128 0x1
 4352 0295 50       		.byte	0x50
 4353 0296 9F       		.byte	0x9f
 4354 0297 00000000 		.4byte	0
 4355 029b 00000000 		.4byte	0
 4356              	.LLST22:
 4357 029f 00000000 		.4byte	.LVL48
 4358 02a3 04000000 		.4byte	.LVL49
 4359 02a7 0100     		.2byte	0x1
 4360 02a9 50       		.byte	0x50
 4361 02aa 04000000 		.4byte	.LVL49
 4362 02ae 14000000 		.4byte	.LFE22
 4363 02b2 0400     		.2byte	0x4
 4364 02b4 F3       		.byte	0xf3
 4365 02b5 01       		.uleb128 0x1
 4366 02b6 50       		.byte	0x50
 4367 02b7 9F       		.byte	0x9f
 4368 02b8 00000000 		.4byte	0
 4369 02bc 00000000 		.4byte	0
 4370              	.LLST23:
 4371 02c0 00000000 		.4byte	.LVL50
 4372 02c4 04000000 		.4byte	.LVL51
 4373 02c8 0100     		.2byte	0x1
 4374 02ca 50       		.byte	0x50
 4375 02cb 04000000 		.4byte	.LVL51
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 134


 4376 02cf 14000000 		.4byte	.LFE23
 4377 02d3 0400     		.2byte	0x4
 4378 02d5 F3       		.byte	0xf3
 4379 02d6 01       		.uleb128 0x1
 4380 02d7 50       		.byte	0x50
 4381 02d8 9F       		.byte	0x9f
 4382 02d9 00000000 		.4byte	0
 4383 02dd 00000000 		.4byte	0
 4384              	.LLST24:
 4385 02e1 00000000 		.4byte	.LVL52
 4386 02e5 04000000 		.4byte	.LVL53
 4387 02e9 0100     		.2byte	0x1
 4388 02eb 50       		.byte	0x50
 4389 02ec 04000000 		.4byte	.LVL53
 4390 02f0 14000000 		.4byte	.LFE24
 4391 02f4 0400     		.2byte	0x4
 4392 02f6 F3       		.byte	0xf3
 4393 02f7 01       		.uleb128 0x1
 4394 02f8 50       		.byte	0x50
 4395 02f9 9F       		.byte	0x9f
 4396 02fa 00000000 		.4byte	0
 4397 02fe 00000000 		.4byte	0
 4398              	.LLST25:
 4399 0302 00000000 		.4byte	.LVL55
 4400 0306 08000000 		.4byte	.LVL56
 4401 030a 0100     		.2byte	0x1
 4402 030c 50       		.byte	0x50
 4403 030d 08000000 		.4byte	.LVL56
 4404 0311 22000000 		.4byte	.LVL60
 4405 0315 0100     		.2byte	0x1
 4406 0317 54       		.byte	0x54
 4407 0318 00000000 		.4byte	0
 4408 031c 00000000 		.4byte	0
 4409              	.LLST26:
 4410 0320 00000000 		.4byte	.LVL61
 4411 0324 08000000 		.4byte	.LVL62
 4412 0328 0100     		.2byte	0x1
 4413 032a 50       		.byte	0x50
 4414 032b 08000000 		.4byte	.LVL62
 4415 032f 14000000 		.4byte	.LFE28
 4416 0333 0400     		.2byte	0x4
 4417 0335 F3       		.byte	0xf3
 4418 0336 01       		.uleb128 0x1
 4419 0337 50       		.byte	0x50
 4420 0338 9F       		.byte	0x9f
 4421 0339 00000000 		.4byte	0
 4422 033d 00000000 		.4byte	0
 4423              	.LLST27:
 4424 0341 00000000 		.4byte	.LVL64
 4425 0345 09000000 		.4byte	.LVL65-1
 4426 0349 0100     		.2byte	0x1
 4427 034b 50       		.byte	0x50
 4428 034c 09000000 		.4byte	.LVL65-1
 4429 0350 A2000000 		.4byte	.LVL81
 4430 0354 0100     		.2byte	0x1
 4431 0356 55       		.byte	0x55
 4432 0357 A2000000 		.4byte	.LVL81
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 135


 4433 035b CC000000 		.4byte	.LVL87
 4434 035f 0700     		.2byte	0x7
 4435 0361 75       		.byte	0x75
 4436 0362 B39C8080 		.sleb128 -268431821
 4436      7F
 4437 0367 9F       		.byte	0x9f
 4438 0368 CC000000 		.4byte	.LVL87
 4439 036c 24010000 		.4byte	.LFE6
 4440 0370 0600     		.2byte	0x6
 4441 0372 91       		.byte	0x91
 4442 0373 5C       		.sleb128 -36
 4443 0374 06       		.byte	0x6
 4444 0375 23       		.byte	0x23
 4445 0376 03       		.uleb128 0x3
 4446 0377 9F       		.byte	0x9f
 4447 0378 00000000 		.4byte	0
 4448 037c 00000000 		.4byte	0
 4449              	.LLST28:
 4450 0380 24000000 		.4byte	.LVL67
 4451 0384 26000000 		.4byte	.LVL68
 4452 0388 0100     		.2byte	0x1
 4453 038a 54       		.byte	0x54
 4454 038b 36000000 		.4byte	.LVL69
 4455 038f 38000000 		.4byte	.LVL70
 4456 0393 0100     		.2byte	0x1
 4457 0395 54       		.byte	0x54
 4458 0396 48000000 		.4byte	.LVL71
 4459 039a 4A000000 		.4byte	.LVL72
 4460 039e 0100     		.2byte	0x1
 4461 03a0 54       		.byte	0x54
 4462 03a1 5A000000 		.4byte	.LVL73
 4463 03a5 5C000000 		.4byte	.LVL74
 4464 03a9 0100     		.2byte	0x1
 4465 03ab 54       		.byte	0x54
 4466 03ac 64000000 		.4byte	.LVL75
 4467 03b0 CC000000 		.4byte	.LVL87
 4468 03b4 0100     		.2byte	0x1
 4469 03b6 54       		.byte	0x54
 4470 03b7 00000000 		.4byte	0
 4471 03bb 00000000 		.4byte	0
 4472              	.LLST29:
 4473 03bf 6C000000 		.4byte	.LVL76
 4474 03c3 CC000000 		.4byte	.LVL87
 4475 03c7 0200     		.2byte	0x2
 4476 03c9 91       		.byte	0x91
 4477 03ca 54       		.sleb128 -44
 4478 03cb 00000000 		.4byte	0
 4479 03cf 00000000 		.4byte	0
 4480              	.LLST30:
 4481 03d3 76000000 		.4byte	.LVL77
 4482 03d7 CC000000 		.4byte	.LVL87
 4483 03db 0200     		.2byte	0x2
 4484 03dd 91       		.byte	0x91
 4485 03de 58       		.sleb128 -40
 4486 03df 00000000 		.4byte	0
 4487 03e3 00000000 		.4byte	0
 4488              	.LLST31:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 136


 4489 03e7 8A000000 		.4byte	.LVL78
 4490 03eb 96000000 		.4byte	.LVL79
 4491 03ef 0100     		.2byte	0x1
 4492 03f1 56       		.byte	0x56
 4493 03f2 00000000 		.4byte	0
 4494 03f6 00000000 		.4byte	0
 4495              	.LLST32:
 4496 03fa A8000000 		.4byte	.LVL82
 4497 03fe AC000000 		.4byte	.LVL83
 4498 0402 0100     		.2byte	0x1
 4499 0404 53       		.byte	0x53
 4500 0405 AC000000 		.4byte	.LVL83
 4501 0409 AE000000 		.4byte	.LVL84
 4502 040d 0400     		.2byte	0x4
 4503 040f 72       		.byte	0x72
 4504 0410 00       		.sleb128 0
 4505 0411 06       		.byte	0x6
 4506 0412 9F       		.byte	0x9f
 4507 0413 AE000000 		.4byte	.LVL84
 4508 0417 B0000000 		.4byte	.LVL85
 4509 041b 0700     		.2byte	0x7
 4510 041d 0C       		.byte	0xc
 4511 041e 28FF0B40 		.4byte	0x400bff28
 4512 0422 06       		.byte	0x6
 4513 0423 9F       		.byte	0x9f
 4514 0424 00000000 		.4byte	0
 4515 0428 00000000 		.4byte	0
 4516              	.LLST33:
 4517 042c 00000000 		.4byte	.LVL89
 4518 0430 0E000000 		.4byte	.LVL90
 4519 0434 0100     		.2byte	0x1
 4520 0436 50       		.byte	0x50
 4521 0437 0E000000 		.4byte	.LVL90
 4522 043b 44000000 		.4byte	.LFE7
 4523 043f 0400     		.2byte	0x4
 4524 0441 F3       		.byte	0xf3
 4525 0442 01       		.uleb128 0x1
 4526 0443 50       		.byte	0x50
 4527 0444 9F       		.byte	0x9f
 4528 0445 00000000 		.4byte	0
 4529 0449 00000000 		.4byte	0
 4530              	.LLST34:
 4531 044d 00000000 		.4byte	.LVL92
 4532 0451 18000000 		.4byte	.LVL93
 4533 0455 0100     		.2byte	0x1
 4534 0457 50       		.byte	0x50
 4535 0458 18000000 		.4byte	.LVL93
 4536 045c 48000000 		.4byte	.LFE29
 4537 0460 0400     		.2byte	0x4
 4538 0462 F3       		.byte	0xf3
 4539 0463 01       		.uleb128 0x1
 4540 0464 50       		.byte	0x50
 4541 0465 9F       		.byte	0x9f
 4542 0466 00000000 		.4byte	0
 4543 046a 00000000 		.4byte	0
 4544              	.LLST35:
 4545 046e 00000000 		.4byte	.LVL96
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 137


 4546 0472 0C000000 		.4byte	.LVL97
 4547 0476 0200     		.2byte	0x2
 4548 0478 30       		.byte	0x30
 4549 0479 9F       		.byte	0x9f
 4550 047a 0C000000 		.4byte	.LVL97
 4551 047e 10000000 		.4byte	.LVL98
 4552 0482 0200     		.2byte	0x2
 4553 0484 31       		.byte	0x31
 4554 0485 9F       		.byte	0x9f
 4555 0486 10000000 		.4byte	.LVL98
 4556 048a 12000000 		.4byte	.LVL99
 4557 048e 0200     		.2byte	0x2
 4558 0490 32       		.byte	0x32
 4559 0491 9F       		.byte	0x9f
 4560 0492 12000000 		.4byte	.LVL99
 4561 0496 14000000 		.4byte	.LVL100
 4562 049a 0200     		.2byte	0x2
 4563 049c 33       		.byte	0x33
 4564 049d 9F       		.byte	0x9f
 4565 049e 14000000 		.4byte	.LVL100
 4566 04a2 44000000 		.4byte	.LFE31
 4567 04a6 0200     		.2byte	0x2
 4568 04a8 35       		.byte	0x35
 4569 04a9 9F       		.byte	0x9f
 4570 04aa 00000000 		.4byte	0
 4571 04ae 00000000 		.4byte	0
 4572              	.LLST36:
 4573 04b2 14000000 		.4byte	.LVL100
 4574 04b6 1A000000 		.4byte	.LVL102
 4575 04ba 0600     		.2byte	0x6
 4576 04bc 03       		.byte	0x3
 4577 04bd 00000000 		.4byte	CySysTickServiceCallbacks
 4578 04c1 9F       		.byte	0x9f
 4579 04c2 00000000 		.4byte	0
 4580 04c6 00000000 		.4byte	0
 4581              	.LLST37:
 4582 04ca 14000000 		.4byte	.LVL100
 4583 04ce 1A000000 		.4byte	.LVL102
 4584 04d2 0200     		.2byte	0x2
 4585 04d4 3F       		.byte	0x3f
 4586 04d5 9F       		.byte	0x9f
 4587 04d6 00000000 		.4byte	0
 4588 04da 00000000 		.4byte	0
 4589              	.LLST38:
 4590 04de 14000000 		.4byte	.LVL100
 4591 04e2 16000000 		.4byte	.LVL101
 4592 04e6 0500     		.2byte	0x5
 4593 04e8 0C       		.byte	0xc
 4594 04e9 3C000020 		.4byte	0x2000003c
 4595 04ed 16000000 		.4byte	.LVL101
 4596 04f1 1A000000 		.4byte	.LVL102
 4597 04f5 0200     		.2byte	0x2
 4598 04f7 73       		.byte	0x73
 4599 04f8 00       		.sleb128 0
 4600 04f9 00000000 		.4byte	0
 4601 04fd 00000000 		.4byte	0
 4602              	.LLST39:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 138


 4603 0501 22000000 		.4byte	.LVL103
 4604 0505 26000000 		.4byte	.LVL104
 4605 0509 0100     		.2byte	0x1
 4606 050b 50       		.byte	0x50
 4607 050c 00000000 		.4byte	0
 4608 0510 00000000 		.4byte	0
 4609              	.LLST40:
 4610 0514 00000000 		.4byte	.LVL108
 4611 0518 04000000 		.4byte	.LVL109
 4612 051c 0100     		.2byte	0x1
 4613 051e 50       		.byte	0x50
 4614 051f 04000000 		.4byte	.LVL109
 4615 0523 10000000 		.4byte	.LFE36
 4616 0527 0400     		.2byte	0x4
 4617 0529 F3       		.byte	0xf3
 4618 052a 01       		.uleb128 0x1
 4619 052b 50       		.byte	0x50
 4620 052c 9F       		.byte	0x9f
 4621 052d 00000000 		.4byte	0
 4622 0531 00000000 		.4byte	0
 4623              	.LLST41:
 4624 0535 00000000 		.4byte	.LVL112
 4625 0539 06000000 		.4byte	.LVL113
 4626 053d 0100     		.2byte	0x1
 4627 053f 50       		.byte	0x50
 4628 0540 06000000 		.4byte	.LVL113
 4629 0544 10000000 		.4byte	.LFE41
 4630 0548 0400     		.2byte	0x4
 4631 054a F3       		.byte	0xf3
 4632 054b 01       		.uleb128 0x1
 4633 054c 50       		.byte	0x50
 4634 054d 9F       		.byte	0x9f
 4635 054e 00000000 		.4byte	0
 4636 0552 00000000 		.4byte	0
 4637              	.LLST42:
 4638 0556 00000000 		.4byte	.LVL114
 4639 055a 04000000 		.4byte	.LVL115
 4640 055e 0100     		.2byte	0x1
 4641 0560 50       		.byte	0x50
 4642 0561 04000000 		.4byte	.LVL115
 4643 0565 0C000000 		.4byte	.LFE42
 4644 0569 0400     		.2byte	0x4
 4645 056b F3       		.byte	0xf3
 4646 056c 01       		.uleb128 0x1
 4647 056d 50       		.byte	0x50
 4648 056e 9F       		.byte	0x9f
 4649 056f 00000000 		.4byte	0
 4650 0573 00000000 		.4byte	0
 4651              		.section	.debug_aranges,"",%progbits
 4652 0000 7C010000 		.4byte	0x17c
 4653 0004 0200     		.2byte	0x2
 4654 0006 00000000 		.4byte	.Ldebug_info0
 4655 000a 04       		.byte	0x4
 4656 000b 00       		.byte	0
 4657 000c 0000     		.2byte	0
 4658 000e 0000     		.2byte	0
 4659 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 139


 4660 0014 14000000 		.4byte	.LFE0-.LFB0
 4661 0018 00000000 		.4byte	.LFB1
 4662 001c 10000000 		.4byte	.LFE1-.LFB1
 4663 0020 00000000 		.4byte	.LFB2
 4664 0024 20000000 		.4byte	.LFE2-.LFB2
 4665 0028 00000000 		.4byte	.LFB3
 4666 002c 34000000 		.4byte	.LFE3-.LFB3
 4667 0030 00000000 		.4byte	.LFB4
 4668 0034 18000000 		.4byte	.LFE4-.LFB4
 4669 0038 00000000 		.4byte	.LFB5
 4670 003c 2C000000 		.4byte	.LFE5-.LFB5
 4671 0040 00000000 		.4byte	.LFB8
 4672 0044 20000000 		.4byte	.LFE8-.LFB8
 4673 0048 00000000 		.4byte	.LFB9
 4674 004c 10000000 		.4byte	.LFE9-.LFB9
 4675 0050 00000000 		.4byte	.LFB10
 4676 0054 0C000000 		.4byte	.LFE10-.LFB10
 4677 0058 00000000 		.4byte	.LFB11
 4678 005c 14000000 		.4byte	.LFE11-.LFB11
 4679 0060 00000000 		.4byte	.LFB12
 4680 0064 10000000 		.4byte	.LFE12-.LFB12
 4681 0068 00000000 		.4byte	.LFB13
 4682 006c 0C000000 		.4byte	.LFE13-.LFB13
 4683 0070 00000000 		.4byte	.LFB14
 4684 0074 0E000000 		.4byte	.LFE14-.LFB14
 4685 0078 00000000 		.4byte	.LFB15
 4686 007c 0C000000 		.4byte	.LFE15-.LFB15
 4687 0080 00000000 		.4byte	.LFB16
 4688 0084 10000000 		.4byte	.LFE16-.LFB16
 4689 0088 00000000 		.4byte	.LFB17
 4690 008c 10000000 		.4byte	.LFE17-.LFB17
 4691 0090 00000000 		.4byte	.LFB18
 4692 0094 34000000 		.4byte	.LFE18-.LFB18
 4693 0098 00000000 		.4byte	.LFB19
 4694 009c 20000000 		.4byte	.LFE19-.LFB19
 4695 00a0 00000000 		.4byte	.LFB20
 4696 00a4 14000000 		.4byte	.LFE20-.LFB20
 4697 00a8 00000000 		.4byte	.LFB21
 4698 00ac 18000000 		.4byte	.LFE21-.LFB21
 4699 00b0 00000000 		.4byte	.LFB22
 4700 00b4 14000000 		.4byte	.LFE22-.LFB22
 4701 00b8 00000000 		.4byte	.LFB23
 4702 00bc 14000000 		.4byte	.LFE23-.LFB23
 4703 00c0 00000000 		.4byte	.LFB24
 4704 00c4 14000000 		.4byte	.LFE24-.LFB24
 4705 00c8 00000000 		.4byte	.LFB25
 4706 00cc 04000000 		.4byte	.LFE25-.LFB25
 4707 00d0 00000000 		.4byte	.LFB26
 4708 00d4 18000000 		.4byte	.LFE26-.LFB26
 4709 00d8 00000000 		.4byte	.LFB27
 4710 00dc 2C000000 		.4byte	.LFE27-.LFB27
 4711 00e0 00000000 		.4byte	.LFB28
 4712 00e4 14000000 		.4byte	.LFE28-.LFB28
 4713 00e8 00000000 		.4byte	.LFB6
 4714 00ec 24010000 		.4byte	.LFE6-.LFB6
 4715 00f0 00000000 		.4byte	.LFB7
 4716 00f4 44000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 140


 4717 00f8 00000000 		.4byte	.LFB29
 4718 00fc 48000000 		.4byte	.LFE29-.LFB29
 4719 0100 00000000 		.4byte	.LFB31
 4720 0104 44000000 		.4byte	.LFE31-.LFB31
 4721 0108 00000000 		.4byte	.LFB33
 4722 010c 10000000 		.4byte	.LFE33-.LFB33
 4723 0110 00000000 		.4byte	.LFB34
 4724 0114 10000000 		.4byte	.LFE34-.LFB34
 4725 0118 00000000 		.4byte	.LFB32
 4726 011c 18000000 		.4byte	.LFE32-.LFB32
 4727 0120 00000000 		.4byte	.LFB30
 4728 0124 1C000000 		.4byte	.LFE30-.LFB30
 4729 0128 00000000 		.4byte	.LFB35
 4730 012c 10000000 		.4byte	.LFE35-.LFB35
 4731 0130 00000000 		.4byte	.LFB36
 4732 0134 10000000 		.4byte	.LFE36-.LFB36
 4733 0138 00000000 		.4byte	.LFB37
 4734 013c 10000000 		.4byte	.LFE37-.LFB37
 4735 0140 00000000 		.4byte	.LFB38
 4736 0144 10000000 		.4byte	.LFE38-.LFB38
 4737 0148 00000000 		.4byte	.LFB39
 4738 014c 10000000 		.4byte	.LFE39-.LFB39
 4739 0150 00000000 		.4byte	.LFB43
 4740 0154 24000000 		.4byte	.LFE43-.LFB43
 4741 0158 00000000 		.4byte	.LFB40
 4742 015c 0C000000 		.4byte	.LFE40-.LFB40
 4743 0160 00000000 		.4byte	.LFB41
 4744 0164 10000000 		.4byte	.LFE41-.LFB41
 4745 0168 00000000 		.4byte	.LFB42
 4746 016c 0C000000 		.4byte	.LFE42-.LFB42
 4747 0170 00000000 		.4byte	.LFB44
 4748 0174 74000000 		.4byte	.LFE44-.LFB44
 4749 0178 00000000 		.4byte	0
 4750 017c 00000000 		.4byte	0
 4751              		.section	.debug_ranges,"",%progbits
 4752              	.Ldebug_ranges0:
 4753 0000 2C000000 		.4byte	.LBB10
 4754 0004 2E000000 		.4byte	.LBE10
 4755 0008 2E000000 		.4byte	.LBB13
 4756 000c 30000000 		.4byte	.LBE13
 4757 0010 00000000 		.4byte	0
 4758 0014 00000000 		.4byte	0
 4759 0018 08000000 		.4byte	.LBB14
 4760 001c 0A000000 		.4byte	.LBE14
 4761 0020 14000000 		.4byte	.LBB18
 4762 0024 16000000 		.4byte	.LBE18
 4763 0028 18000000 		.4byte	.LBB19
 4764 002c 1A000000 		.4byte	.LBE19
 4765 0030 00000000 		.4byte	0
 4766 0034 00000000 		.4byte	0
 4767 0038 00000000 		.4byte	.LFB0
 4768 003c 14000000 		.4byte	.LFE0
 4769 0040 00000000 		.4byte	.LFB1
 4770 0044 10000000 		.4byte	.LFE1
 4771 0048 00000000 		.4byte	.LFB2
 4772 004c 20000000 		.4byte	.LFE2
 4773 0050 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 141


 4774 0054 34000000 		.4byte	.LFE3
 4775 0058 00000000 		.4byte	.LFB4
 4776 005c 18000000 		.4byte	.LFE4
 4777 0060 00000000 		.4byte	.LFB5
 4778 0064 2C000000 		.4byte	.LFE5
 4779 0068 00000000 		.4byte	.LFB8
 4780 006c 20000000 		.4byte	.LFE8
 4781 0070 00000000 		.4byte	.LFB9
 4782 0074 10000000 		.4byte	.LFE9
 4783 0078 00000000 		.4byte	.LFB10
 4784 007c 0C000000 		.4byte	.LFE10
 4785 0080 00000000 		.4byte	.LFB11
 4786 0084 14000000 		.4byte	.LFE11
 4787 0088 00000000 		.4byte	.LFB12
 4788 008c 10000000 		.4byte	.LFE12
 4789 0090 00000000 		.4byte	.LFB13
 4790 0094 0C000000 		.4byte	.LFE13
 4791 0098 00000000 		.4byte	.LFB14
 4792 009c 0E000000 		.4byte	.LFE14
 4793 00a0 00000000 		.4byte	.LFB15
 4794 00a4 0C000000 		.4byte	.LFE15
 4795 00a8 00000000 		.4byte	.LFB16
 4796 00ac 10000000 		.4byte	.LFE16
 4797 00b0 00000000 		.4byte	.LFB17
 4798 00b4 10000000 		.4byte	.LFE17
 4799 00b8 00000000 		.4byte	.LFB18
 4800 00bc 34000000 		.4byte	.LFE18
 4801 00c0 00000000 		.4byte	.LFB19
 4802 00c4 20000000 		.4byte	.LFE19
 4803 00c8 00000000 		.4byte	.LFB20
 4804 00cc 14000000 		.4byte	.LFE20
 4805 00d0 00000000 		.4byte	.LFB21
 4806 00d4 18000000 		.4byte	.LFE21
 4807 00d8 00000000 		.4byte	.LFB22
 4808 00dc 14000000 		.4byte	.LFE22
 4809 00e0 00000000 		.4byte	.LFB23
 4810 00e4 14000000 		.4byte	.LFE23
 4811 00e8 00000000 		.4byte	.LFB24
 4812 00ec 14000000 		.4byte	.LFE24
 4813 00f0 00000000 		.4byte	.LFB25
 4814 00f4 04000000 		.4byte	.LFE25
 4815 00f8 00000000 		.4byte	.LFB26
 4816 00fc 18000000 		.4byte	.LFE26
 4817 0100 00000000 		.4byte	.LFB27
 4818 0104 2C000000 		.4byte	.LFE27
 4819 0108 00000000 		.4byte	.LFB28
 4820 010c 14000000 		.4byte	.LFE28
 4821 0110 00000000 		.4byte	.LFB6
 4822 0114 24010000 		.4byte	.LFE6
 4823 0118 00000000 		.4byte	.LFB7
 4824 011c 44000000 		.4byte	.LFE7
 4825 0120 00000000 		.4byte	.LFB29
 4826 0124 48000000 		.4byte	.LFE29
 4827 0128 00000000 		.4byte	.LFB31
 4828 012c 44000000 		.4byte	.LFE31
 4829 0130 00000000 		.4byte	.LFB33
 4830 0134 10000000 		.4byte	.LFE33
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 142


 4831 0138 00000000 		.4byte	.LFB34
 4832 013c 10000000 		.4byte	.LFE34
 4833 0140 00000000 		.4byte	.LFB32
 4834 0144 18000000 		.4byte	.LFE32
 4835 0148 00000000 		.4byte	.LFB30
 4836 014c 1C000000 		.4byte	.LFE30
 4837 0150 00000000 		.4byte	.LFB35
 4838 0154 10000000 		.4byte	.LFE35
 4839 0158 00000000 		.4byte	.LFB36
 4840 015c 10000000 		.4byte	.LFE36
 4841 0160 00000000 		.4byte	.LFB37
 4842 0164 10000000 		.4byte	.LFE37
 4843 0168 00000000 		.4byte	.LFB38
 4844 016c 10000000 		.4byte	.LFE38
 4845 0170 00000000 		.4byte	.LFB39
 4846 0174 10000000 		.4byte	.LFE39
 4847 0178 00000000 		.4byte	.LFB43
 4848 017c 24000000 		.4byte	.LFE43
 4849 0180 00000000 		.4byte	.LFB40
 4850 0184 0C000000 		.4byte	.LFE40
 4851 0188 00000000 		.4byte	.LFB41
 4852 018c 10000000 		.4byte	.LFE41
 4853 0190 00000000 		.4byte	.LFB42
 4854 0194 0C000000 		.4byte	.LFE42
 4855 0198 00000000 		.4byte	.LFB44
 4856 019c 74000000 		.4byte	.LFE44
 4857 01a0 00000000 		.4byte	0
 4858 01a4 00000000 		.4byte	0
 4859              		.section	.debug_line,"",%progbits
 4860              	.Ldebug_line0:
 4861 0000 B2040000 		.section	.debug_str,"MS",%progbits,1
 4861      02004D00 
 4861      00000201 
 4861      FB0E0D00 
 4861      01010101 
 4862              	.LASF27:
 4863 0000 72616D56 		.ascii	"ramVectorTable\000"
 4863      6563746F 
 4863      72546162 
 4863      6C6500
 4864              	.LASF68:
 4865 000f 62675472 		.ascii	"bgTrim4\000"
 4865      696D3400 
 4866              	.LASF10:
 4867 0017 75696E74 		.ascii	"uint16\000"
 4867      313600
 4868              	.LASF45:
 4869 001e 696E7453 		.ascii	"intState\000"
 4869      74617465 
 4869      00
 4870              	.LASF32:
 4871 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4871      73436C6B 
 4871      57726974 
 4871      65486663 
 4871      6C6B4469 
 4872              	.LASF99:
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 143


 4873 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4873      73436C6B 
 4873      50756D70 
 4873      436F6E66 
 4873      696700
 4874              	.LASF26:
 4875 0053 6F6C6449 		.ascii	"oldIsr\000"
 4875      737200
 4876              	.LASF88:
 4877 005a 72657456 		.ascii	"retVal\000"
 4877      616C00
 4878              	.LASF44:
 4879 0061 43794469 		.ascii	"CyDisableInts\000"
 4879      7361626C 
 4879      65496E74 
 4879      7300
 4880              	.LASF71:
 4881 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 4881      656E7449 
 4881      6D6F5472 
 4881      696D3256 
 4881      616C7565 
 4882              	.LASF7:
 4883 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 4883      206C6F6E 
 4883      6720756E 
 4883      7369676E 
 4883      65642069 
 4884              	.LASF97:
 4885 009b 43795379 		.ascii	"CySysTickInitVar\000"
 4885      73546963 
 4885      6B496E69 
 4885      74566172 
 4885      00
 4886              	.LASF46:
 4887 00ac 4379456E 		.ascii	"CyEnableInts\000"
 4887      61626C65 
 4887      496E7473 
 4887      00
 4888              	.LASF61:
 4889 00b9 4379536F 		.ascii	"CySoftwareReset\000"
 4889      66747761 
 4889      72655265 
 4889      73657400 
 4890              	.LASF78:
 4891 00c9 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4891      73546963 
 4891      6B456E61 
 4891      626C6549 
 4891      6E746572 
 4892              	.LASF56:
 4893 00e2 4379496E 		.ascii	"CyIntGetState\000"
 4893      74476574 
 4893      53746174 
 4893      6500
 4894              	.LASF6:
 4895 00f0 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 144


 4895      206C6F6E 
 4895      6720696E 
 4895      7400
 4896              	.LASF0:
 4897 00fe 7369676E 		.ascii	"signed char\000"
 4897      65642063 
 4897      68617200 
 4898              	.LASF67:
 4899 010a 66726571 		.ascii	"freq\000"
 4899      00
 4900              	.LASF75:
 4901 010f 43794465 		.ascii	"CyDelayFreq\000"
 4901      6C617946 
 4901      72657100 
 4902              	.LASF30:
 4903 011b 696E7465 		.ascii	"interruptState\000"
 4903      72727570 
 4903      74537461 
 4903      746500
 4904              	.LASF83:
 4905 012a 43795379 		.ascii	"CySysTickGetReload\000"
 4905      73546963 
 4905      6B476574 
 4905      52656C6F 
 4905      616400
 4906              	.LASF4:
 4907 013d 6C6F6E67 		.ascii	"long int\000"
 4907      20696E74 
 4907      00
 4908              	.LASF57:
 4909 0146 4379496E 		.ascii	"CyIntDisable\000"
 4909      74446973 
 4909      61626C65 
 4909      00
 4910              	.LASF89:
 4911 0153 43795379 		.ascii	"CySysTickGetCallback\000"
 4911      73546963 
 4911      6B476574 
 4911      43616C6C 
 4911      6261636B 
 4912              	.LASF9:
 4913 0168 75696E74 		.ascii	"uint8\000"
 4913      3800
 4914              	.LASF94:
 4915 016e 63796465 		.ascii	"cydelayFreqKhz\000"
 4915      6C617946 
 4915      7265714B 
 4915      687A00
 4916              	.LASF35:
 4917 017d 656E6162 		.ascii	"enable\000"
 4917      6C6500
 4918              	.LASF13:
 4919 0184 646F7562 		.ascii	"double\000"
 4919      6C6500
 4920              	.LASF53:
 4921 018b 73686966 		.ascii	"shift\000"
 4921      7400
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 145


 4922              	.LASF21:
 4923 0191 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4923      734C7664 
 4923      436C6561 
 4923      72496E74 
 4923      65727275 
 4924              	.LASF11:
 4925 01a8 75696E74 		.ascii	"uint32\000"
 4925      333200
 4926              	.LASF47:
 4927 01af 6D61736B 		.ascii	"mask\000"
 4927      00
 4928              	.LASF40:
 4929 01b4 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4929      73436C6B 
 4929      47657453 
 4929      7973636C 
 4929      6B536F75 
 4930              	.LASF54:
 4931 01cc 4379496E 		.ascii	"CyIntGetPriority\000"
 4931      74476574 
 4931      5072696F 
 4931      72697479 
 4931      00
 4932              	.LASF96:
 4933 01dd 63796465 		.ascii	"cydelay32kMs\000"
 4933      6C617933 
 4933      326B4D73 
 4933      00
 4934              	.LASF76:
 4935 01ea 43795379 		.ascii	"CySysTickInit\000"
 4935      73546963 
 4935      6B496E69 
 4935      7400
 4936              	.LASF23:
 4937 01f8 76616C75 		.ascii	"value\000"
 4937      6500
 4938              	.LASF90:
 4939 01fe 43794765 		.ascii	"CyGetUniqueId\000"
 4939      74556E69 
 4939      71756549 
 4939      6400
 4940              	.LASF85:
 4941 020c 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4941      73546963 
 4941      6B476574 
 4941      436F756E 
 4941      74466C61 
 4942              	.LASF8:
 4943 0222 756E7369 		.ascii	"unsigned int\000"
 4943      676E6564 
 4943      20696E74 
 4943      00
 4944              	.LASF22:
 4945 022f 43795379 		.ascii	"CySysTickClear\000"
 4945      73546963 
 4945      6B436C65 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 146


 4945      617200
 4946              	.LASF5:
 4947 023e 6C6F6E67 		.ascii	"long unsigned int\000"
 4947      20756E73 
 4947      69676E65 
 4947      6420696E 
 4947      7400
 4948              	.LASF82:
 4949 0250 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4949      734C7664 
 4949      47657449 
 4949      6E746572 
 4949      72757074 
 4950              	.LASF29:
 4951 026b 43795379 		.ascii	"CySysClkImoStop\000"
 4951      73436C6B 
 4951      496D6F53 
 4951      746F7000 
 4952              	.LASF100:
 4953 027b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4953      74657243 
 4953      72697469 
 4953      63616C53 
 4953      65637469 
 4954              	.LASF58:
 4955 0292 4379496E 		.ascii	"CyIntSetPending\000"
 4955      74536574 
 4955      50656E64 
 4955      696E6700 
 4956              	.LASF41:
 4957 02a2 43795379 		.ascii	"CySysGetResetReason\000"
 4957      73476574 
 4957      52657365 
 4957      74526561 
 4957      736F6E00 
 4958              	.LASF3:
 4959 02b6 73686F72 		.ascii	"short unsigned int\000"
 4959      7420756E 
 4959      7369676E 
 4959      65642069 
 4959      6E7400
 4960              	.LASF49:
 4961 02c9 4379496E 		.ascii	"CyIntSetVector\000"
 4961      74536574 
 4961      56656374 
 4961      6F7200
 4962              	.LASF24:
 4963 02d8 6E756D62 		.ascii	"number\000"
 4963      657200
 4964              	.LASF52:
 4965 02df 7072696F 		.ascii	"priority\000"
 4965      72697479 
 4965      00
 4966              	.LASF66:
 4967 02e8 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4967      73436C6B 
 4967      57726974 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 147


 4967      65496D6F 
 4967      46726571 
 4968              	.LASF108:
 4969 02fd 4379496E 		.ascii	"CyIntSetSysVector\000"
 4969      74536574 
 4969      53797356 
 4969      6563746F 
 4969      7200
 4970              	.LASF33:
 4971 030f 43795379 		.ascii	"CySysEnablePumpClock\000"
 4971      73456E61 
 4971      626C6550 
 4971      756D7043 
 4971      6C6F636B 
 4972              	.LASF105:
 4973 0324 453A5C65 		.ascii	"E:\\eCTF\\ectf-2018-techsec-submission2\\CARD.cydsn"
 4973      4354465C 
 4973      65637466 
 4973      2D323031 
 4973      382D7465 
 4974 0354 00       		.ascii	"\000"
 4975              	.LASF16:
 4976 0355 72656733 		.ascii	"reg32\000"
 4976      3200
 4977              	.LASF80:
 4978 035b 43795379 		.ascii	"CySysTickStart\000"
 4978      73546963 
 4978      6B537461 
 4978      727400
 4979              	.LASF43:
 4980 036a 72657475 		.ascii	"returnStatus\000"
 4980      726E5374 
 4980      61747573 
 4980      00
 4981              	.LASF19:
 4982 0377 73697A65 		.ascii	"sizetype\000"
 4982      74797065 
 4982      00
 4983              	.LASF59:
 4984 0380 4379496E 		.ascii	"CyIntClearPending\000"
 4984      74436C65 
 4984      61725065 
 4984      6E64696E 
 4984      6700
 4985              	.LASF18:
 4986 0392 6C6F6E67 		.ascii	"long double\000"
 4986      20646F75 
 4986      626C6500 
 4987              	.LASF25:
 4988 039e 61646472 		.ascii	"address\000"
 4988      65737300 
 4989              	.LASF103:
 4990 03a6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4990      43313120 
 4990      352E342E 
 4990      31203230 
 4990      31363036 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 148


 4991 03d9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4991      20726576 
 4991      6973696F 
 4991      6E203233 
 4991      37373135 
 4992 040c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 4992      66756E63 
 4992      74696F6E 
 4992      2D736563 
 4992      74696F6E 
 4993              	.LASF69:
 4994 0434 62675472 		.ascii	"bgTrim5\000"
 4994      696D3500 
 4995              	.LASF36:
 4996 043c 73797363 		.ascii	"sysclkSource\000"
 4996      6C6B536F 
 4996      75726365 
 4996      00
 4997              	.LASF87:
 4998 0449 66756E63 		.ascii	"function\000"
 4998      74696F6E 
 4998      00
 4999              	.LASF98:
 5000 0452 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5000      6F467265 
 5000      714D687A 
 5000      32526567 
 5000      00
 5001              	.LASF84:
 5002 0463 43795379 		.ascii	"CySysTickGetValue\000"
 5002      73546963 
 5002      6B476574 
 5002      56616C75 
 5002      6500
 5003              	.LASF93:
 5004 0475 63796465 		.ascii	"cydelayFreqHz\000"
 5004      6C617946 
 5004      72657148 
 5004      7A00
 5005              	.LASF51:
 5006 0483 4379496E 		.ascii	"CyIntSetPriority\000"
 5006      74536574 
 5006      5072696F 
 5006      72697479 
 5006      00
 5007              	.LASF12:
 5008 0494 666C6F61 		.ascii	"float\000"
 5008      7400
 5009              	.LASF101:
 5010 049a 43794578 		.ascii	"CyExitCriticalSection\000"
 5010      69744372 
 5010      69746963 
 5010      616C5365 
 5010      6374696F 
 5011              	.LASF73:
 5012 04b0 43795379 		.ascii	"CySysLvdEnable\000"
 5012      734C7664 
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 149


 5012      456E6162 
 5012      6C6500
 5013              	.LASF20:
 5014 04bf 63795379 		.ascii	"cySysTickCallback\000"
 5014      73546963 
 5014      6B43616C 
 5014      6C626163 
 5014      6B00
 5015              	.LASF50:
 5016 04d1 4379496E 		.ascii	"CyIntGetVector\000"
 5016      74476574 
 5016      56656374 
 5016      6F7200
 5017              	.LASF63:
 5018 04e0 6D696C6C 		.ascii	"milliseconds\000"
 5018      69736563 
 5018      6F6E6473 
 5018      00
 5019              	.LASF102:
 5020 04ed 43794465 		.ascii	"CyDelayCycles\000"
 5020      6C617943 
 5020      79636C65 
 5020      7300
 5021              	.LASF15:
 5022 04fb 72656738 		.ascii	"reg8\000"
 5022      00
 5023              	.LASF74:
 5024 0500 74687265 		.ascii	"threshold\000"
 5024      73686F6C 
 5024      6400
 5025              	.LASF60:
 5026 050a 43794861 		.ascii	"CyHalt\000"
 5026      6C7400
 5027              	.LASF1:
 5028 0511 756E7369 		.ascii	"unsigned char\000"
 5028      676E6564 
 5028      20636861 
 5028      7200
 5029              	.LASF42:
 5030 051f 72656173 		.ascii	"reason\000"
 5030      6F6E00
 5031              	.LASF2:
 5032 0526 73686F72 		.ascii	"short int\000"
 5032      7420696E 
 5032      7400
 5033              	.LASF55:
 5034 0530 4379496E 		.ascii	"CyIntEnable\000"
 5034      74456E61 
 5034      626C6500 
 5035              	.LASF48:
 5036 053c 4379496E 		.ascii	"CyIntGetSysVector\000"
 5036      74476574 
 5036      53797356 
 5036      6563746F 
 5036      7200
 5037              	.LASF34:
 5038 054e 636C6B53 		.ascii	"clkSelect\000"
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 150


 5038      656C6563 
 5038      7400
 5039              	.LASF64:
 5040 0558 43794465 		.ascii	"CyDelayUs\000"
 5040      6C617955 
 5040      7300
 5041              	.LASF106:
 5042 0562 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5042      73546963 
 5042      6B536572 
 5042      76696365 
 5042      43616C6C 
 5043              	.LASF14:
 5044 057c 63686172 		.ascii	"char\000"
 5044      00
 5045              	.LASF17:
 5046 0581 63796973 		.ascii	"cyisraddress\000"
 5046      72616464 
 5046      72657373 
 5046      00
 5047              	.LASF79:
 5048 058e 43795379 		.ascii	"CySysTickEnable\000"
 5048      73546963 
 5048      6B456E61 
 5048      626C6500 
 5049              	.LASF37:
 5050 059e 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5050      73436C6B 
 5050      57726974 
 5050      65537973 
 5050      636C6B44 
 5051              	.LASF86:
 5052 05b5 43795379 		.ascii	"CySysTickSetCallback\000"
 5052      73546963 
 5052      6B536574 
 5052      43616C6C 
 5052      6261636B 
 5053              	.LASF92:
 5054 05ca 43795379 		.ascii	"CySysTickCallbacks\000"
 5054      73546963 
 5054      6B43616C 
 5054      6C626163 
 5054      6B7300
 5055              	.LASF72:
 5056 05dd 696D6F54 		.ascii	"imoTrim1Value\000"
 5056      72696D31 
 5056      56616C75 
 5056      6500
 5057              	.LASF91:
 5058 05eb 756E6971 		.ascii	"uniqueId\000"
 5058      75654964 
 5058      00
 5059              	.LASF62:
 5060 05f4 43794465 		.ascii	"CyDelay\000"
 5060      6C617900 
 5061              	.LASF81:
 5062 05fc 43795379 		.ascii	"CySysTickDisableInterrupt\000"
ARM GAS  C:\Users\Ray\AppData\Local\Temp\ccKouDui.s 			page 151


 5062      73546963 
 5062      6B446973 
 5062      61626C65 
 5062      496E7465 
 5063              	.LASF39:
 5064 0616 43795379 		.ascii	"CySysLvdDisable\000"
 5064      734C7664 
 5064      44697361 
 5064      626C6500 
 5065              	.LASF95:
 5066 0626 63796465 		.ascii	"cydelayFreqMhz\000"
 5066      6C617946 
 5066      7265714D 
 5066      687A00
 5067              	.LASF77:
 5068 0635 43795379 		.ascii	"CySysTickStop\000"
 5068      73546963 
 5068      6B53746F 
 5068      7000
 5069              	.LASF38:
 5070 0643 64697669 		.ascii	"divider\000"
 5070      64657200 
 5071              	.LASF28:
 5072 064b 43795379 		.ascii	"CySysClkImoStart\000"
 5072      73436C6B 
 5072      496D6F53 
 5072      74617274 
 5072      00
 5073              	.LASF70:
 5074 065c 6E657749 		.ascii	"newImoTrim2Value\000"
 5074      6D6F5472 
 5074      696D3256 
 5074      616C7565 
 5074      00
 5075              	.LASF104:
 5076 066d 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5076      72617465 
 5076      645F536F 
 5076      75726365 
 5076      5C50536F 
 5077              	.LASF65:
 5078 068c 6D696372 		.ascii	"microseconds\000"
 5078      6F736563 
 5078      6F6E6473 
 5078      00
 5079              	.LASF31:
 5080 0699 746D7052 		.ascii	"tmpReg\000"
 5080      656700
 5081              	.LASF107:
 5082 06a0 43795379 		.ascii	"CySysTickSetReload\000"
 5082      73546963 
 5082      6B536574 
 5082      52656C6F 
 5082      616400
 5083              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
